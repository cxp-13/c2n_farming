{
	"id": "d2002be641372f36090d7649d989acdd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FarmingC2N.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n// import \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n// import \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract FarmingC2N is Ownable {\n    using Math for uint256;\n    using SafeERC20 for IERC20;\n\n    struct UserInfo {\n        uint256 amount; // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken; // Address of LP token contract.\n        uint256 allocPoint; // How many allocation points assigned to this pool. ERC20s to distribute per block.\n        uint256 lastRewardTimestamp; // Last timstamp that ERC20s distribution occurs.\n        uint256 accERC20PerShare; // Accumulated ERC20s per share, times 1e36.\n        uint256 totalDeposits; // Total amount of tokens deposited at the moment (staked)\n    }\n\n    // Address of the ERC20 Token contract.\n    IERC20 public erc20;\n    // The total amount of ERC20 that's paid out as reward.\n    uint256 public paidOut;\n    // ERC20 tokens rewarded per second.\n    uint256 public rewardPerSecond;\n    // Total rewards added to farm\n    uint256 public totalRewards;\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    // Total allocation points. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint;\n\n    // The timestamp when farming starts.\n    uint256 public startTimestamp;\n    // The timestamp when farming ends.\n    uint256 public endTimestamp;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(\n        address indexed user,\n        uint256 indexed pid,\n        uint256 amount\n    );\n\n    constructor(\n        IERC20 _erc20,\n        uint256 _rewardPerSecond,\n        uint256 _startTimestamp\n    )  Ownable(msg.sender) {\n        erc20 = _erc20;\n        rewardPerSecond = _rewardPerSecond;\n        startTimestamp = _startTimestamp;\n        endTimestamp = _startTimestamp;\n    }\n\n    // Number of LP pools\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Fund the farm, increase the end block\n    function fund(uint256 _amount) public {\n        require(\n            block.timestamp < endTimestamp,\n            \"fund: too late, the farm is closed\"\n        );\n        erc20.safeTransferFrom(address(msg.sender), address(this), _amount);\n        (, uint256 timestamp) = _amount.tryDiv(rewardPerSecond);\n        endTimestamp += timestamp;\n\n        (, totalRewards) = totalRewards.tryAdd(_amount);\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function add(\n        uint256 _allocPoint,\n        IERC20 _lpToken,\n        bool _withUpdate\n    ) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardTimestamp = block.timestamp > startTimestamp\n            ? block.timestamp\n            : startTimestamp;\n        (, totalAllocPoint) = totalAllocPoint.tryAdd(_allocPoint);\n        poolInfo.push(\n            PoolInfo({\n                lpToken: _lpToken,\n                allocPoint: _allocPoint,\n                lastRewardTimestamp: lastRewardTimestamp,\n                accERC20PerShare: 0,\n                totalDeposits: 0\n            })\n        );\n    }\n\n    // Update the given pool's ERC20 allocation point. Can only be called by the owner.\n    function set(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        (, totalAllocPoint) = totalAllocPoint.trySub(poolInfo[_pid].allocPoint);\n\n        (, totalAllocPoint) = totalAllocPoint.tryAdd(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n    // View function to see deposited LP for a user.\n    function deposited(uint256 _pid, address _user)\n        external\n        view\n        returns (uint256)\n    {\n        UserInfo storage user = userInfo[_pid][_user];\n        return user.amount;\n    }\n\n    // View function to see pending ERC20s for a user.\n    function pending(uint256 _pid, address _user)\n        external\n        view\n        returns (uint256)\n    {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accERC20PerShare = pool.accERC20PerShare;\n        uint256 userAmount = user.amount;\n\n        uint256 lpSupply = pool.totalDeposits;\n\n        if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {\n            uint256 lastTimestamp = block.timestamp < endTimestamp\n                ? block.timestamp\n                : endTimestamp;\n            uint256 timestampToCompare = pool.lastRewardTimestamp < endTimestamp\n                ? pool.lastRewardTimestamp\n                : endTimestamp;\n            // uint256 nrOfSeconds = lastTimestamp.sub(timestampToCompare);\n            // uint256 erc20Reward = nrOfSeconds\n            //     .mul(rewardPerSecond)\n            //     .mul(pool.allocPoint)\n            //     .div(totalAllocPoint);\n            // accERC20PerShare = accERC20PerShare.add(\n            //     erc20Reward.mul(1e36).div(lpSupply)\n            // );\n\n            (, uint256 nrOfSeconds) = lastTimestamp.trySub(timestampToCompare);\n            (, uint256 erc20Reward) = nrOfSeconds.tryMul(rewardPerSecond);\n            erc20Reward = erc20Reward.mulDiv(pool.allocPoint, totalAllocPoint);\n\n            (, uint256 newAccERC20PerShare) = erc20Reward.tryDiv(lpSupply);\n\n            (, accERC20PerShare) = accERC20PerShare.tryAdd(newAccERC20PerShare);\n        }\n\n        (, uint256 totalReward) = userAmount.tryMul(accERC20PerShare);\n        (, uint256 result) = totalReward.trySub(user.rewardDebt);\n\n        return result;\n    }\n\n    // View function for total reward the farm has yet to pay out.\n    function totalPending() external view returns (uint256) {\n        if (block.timestamp <= startTimestamp) {\n            return 0;\n        }\n\n        uint256 lastTimestamp = block.timestamp < endTimestamp\n            ? block.timestamp\n            : endTimestamp;\n\n        (, uint256 totalSave) = rewardPerSecond.tryMul(\n            lastTimestamp - startTimestamp\n        );\n        (, uint256 result) = totalSave.trySub(paidOut);\n\n        return result;\n    }\n\n    // Update reward variables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        uint256 lastTimestamp = block.timestamp < endTimestamp\n            ? block.timestamp\n            : endTimestamp;\n\n        if (lastTimestamp <= pool.lastRewardTimestamp) {\n            return;\n        }\n        uint256 lpSupply = pool.totalDeposits;\n\n        if (lpSupply == 0) {\n            pool.lastRewardTimestamp = lastTimestamp;\n            return;\n        }\n\n        (, uint256 nrOfSeconds) = lastTimestamp.trySub(\n            pool.lastRewardTimestamp\n        );\n\n        (, uint256 erc20Reward) = nrOfSeconds.tryMul(rewardPerSecond);\n\n        erc20Reward = erc20Reward.mulDiv(pool.allocPoint, totalAllocPoint);\n\n        (, uint256 newAccERC20PerShare) = erc20Reward.tryDiv(lpSupply);\n\n        (, pool.accERC20PerShare) = pool.accERC20PerShare.tryAdd(\n            newAccERC20PerShare\n        );\n\n        // uint256 erc20Reward = nrOfSeconds\n        //     .mul(rewardPerSecond)\n        //     .mul(pool.allocPoint)\n        //     .div(totalAllocPoint);\n\n        // pool.accERC20PerShare = pool.accERC20PerShare.add(\n        //     erc20Reward.mul(1e36).div(lpSupply)\n        // );\n        pool.lastRewardTimestamp = block.timestamp;\n    }\n\n    // Deposit LP tokens to Farm for ERC20 allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        updatePool(_pid);\n\n        if (user.amount > 0) {\n            // uint256 pendingAmount = user\n            //     .amount\n            //     .mul(pool.accERC20PerShare)\n            //     .div(1e36)\n            //     .sub(user.rewardDebt);\n\n            (, uint256 userReward) = user.amount.tryMul(\n                pool.accERC20PerShare\n            );\n            (, uint256 pendingAmount) = userReward.trySub(user.rewardDebt);\n\n            erc20Transfer(msg.sender, pendingAmount);\n        }\n\n        pool.lpToken.safeTransferFrom(\n            address(msg.sender),\n            address(this),\n            _amount\n        );\n        (, pool.totalDeposits) = pool.totalDeposits.tryAdd(_amount);\n\n        (, user.amount) = user.amount.tryAdd(_amount);\n        (, user.rewardDebt) = user.amount.tryMul(pool.accERC20PerShare);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens from Farm.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(\n            user.amount >= _amount,\n            \"withdraw: can't withdraw more than deposit\"\n        );\n        updatePool(_pid);\n\n        (, uint256 userReward) = user.amount.tryMul(pool.accERC20PerShare);\n        (, uint256 pendingAmount) = userReward.trySub(user.rewardDebt);\n\n        // uint256 pendingAmount = user\n        //     .amount\n        //     .mul(pool.accERC20PerShare)\n        //     .div(1e36)\n        //     .sub(user.rewardDebt);\n\n        erc20Transfer(msg.sender, pendingAmount);\n        (, user.amount) = user.amount.trySub(_amount);\n        (, user.rewardDebt) = user.amount.tryMul(pool.accERC20PerShare);\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        (, pool.totalDeposits) = pool.totalDeposits.trySub(_amount);\n\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        // pool.totalDeposits = pool.totalDeposits.sub(user.amount);\n        (, pool.totalDeposits) = pool.totalDeposits.trySub(user.amount);\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n        delete userInfo[_pid][msg.sender];\n        // user.amount = 0;\n        // user.rewardDebt = 0;\n    }\n\n    // Transfer ERC20 and update the required ERC20 to payout all rewards\n    function erc20Transfer(address _to, uint256 _amount) internal {\n        erc20.transfer(_to, _amount);\n        paidOut += _amount;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 PUSH8 0xB1A3FC7ECD234D6F 0xE9 CREATE2 0xEA RETURNDATACOPY STATICCALL 0x4E 0xAF 0xCA XOR PUSH6 0xA78B7018F578 PUSH0 0xEF DUP16 MSTORE8 0xDB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e2167b1a3fc7ecd234d6fe9f5ea3efa4eafca1865a78b7018f5785fef8f53db64736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/FarmingC2N.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xAE NUMBER 0xF8 0xCB 0xEC MOD SWAP6 0xD6 CHAINID 0xC1 PUSH12 0xF6151A70F3776003BDCE8251 0xC4 0xCC RETURNDATACOPY 0xB9 SUB MSTORE 0xA9 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048ae43f8cbec0695d646c16bf6151a70f3776003bdce8251c4cc3eb90352a9b664736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/FarmingC2N.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/FarmingC2N.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FarmingC2N.sol": {
				"FarmingC2N": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_erc20",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerSecond",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startTimestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "deposited",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paidOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accERC20PerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDeposits",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FarmingC2N.sol\":406:11419  contract FarmingC2N is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FarmingC2N.sol\":2179:2465  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/FarmingC2N.sol\":2296:2306  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/FarmingC2N.sol\":2326:2332  _erc20 */\n  dup3\n    /* \"contracts/FarmingC2N.sol\":2318:2323  erc20 */\n  0x01\n  0x00\n    /* \"contracts/FarmingC2N.sol\":2318:2332  erc20 = _erc20 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FarmingC2N.sol\":2360:2376  _rewardPerSecond */\n  dup2\n    /* \"contracts/FarmingC2N.sol\":2342:2357  rewardPerSecond */\n  0x03\n    /* \"contracts/FarmingC2N.sol\":2342:2376  rewardPerSecond = _rewardPerSecond */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FarmingC2N.sol\":2403:2418  _startTimestamp */\n  dup1\n    /* \"contracts/FarmingC2N.sol\":2386:2400  startTimestamp */\n  0x08\n    /* \"contracts/FarmingC2N.sol\":2386:2418  startTimestamp = _startTimestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FarmingC2N.sol\":2443:2458  _startTimestamp */\n  dup1\n    /* \"contracts/FarmingC2N.sol\":2428:2440  endTimestamp */\n  0x09\n    /* \"contracts/FarmingC2N.sol\":2428:2458  endTimestamp = _startTimestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FarmingC2N.sol\":2179:2465  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/FarmingC2N.sol\":406:11419  contract FarmingC2N is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_20:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_35\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_19\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_21:\n    /* \"#utility.yul\":771:809   */\n  tag_37\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_38:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_22:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_40\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_21\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1094   */\ntag_23:\n    /* \"#utility.yul\":1054:1061   */\n  0x00\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1072:1088   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1100:1222   */\ntag_24:\n    /* \"#utility.yul\":1173:1197   */\n  tag_43\n    /* \"#utility.yul\":1191:1196   */\n  dup2\n    /* \"#utility.yul\":1173:1197   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1166:1171   */\n  dup2\n    /* \"#utility.yul\":1163:1198   */\n  eq\n    /* \"#utility.yul\":1153:1216   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1153:1216   */\ntag_44:\n    /* \"#utility.yul\":1100:1222   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1228:1371   */\ntag_25:\n    /* \"#utility.yul\":1285:1290   */\n  0x00\n    /* \"#utility.yul\":1316:1322   */\n  dup2\n    /* \"#utility.yul\":1310:1323   */\n  mload\n    /* \"#utility.yul\":1301:1323   */\n  swap1\n  pop\n    /* \"#utility.yul\":1332:1365   */\n  tag_46\n    /* \"#utility.yul\":1359:1364   */\n  dup2\n    /* \"#utility.yul\":1332:1365   */\n  tag_24\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1228:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:2068   */\ntag_3:\n    /* \"#utility.yul\":1479:1485   */\n  0x00\n    /* \"#utility.yul\":1487:1493   */\n  dup1\n    /* \"#utility.yul\":1495:1501   */\n  0x00\n    /* \"#utility.yul\":1544:1546   */\n  0x60\n    /* \"#utility.yul\":1532:1541   */\n  dup5\n    /* \"#utility.yul\":1523:1530   */\n  dup7\n    /* \"#utility.yul\":1519:1542   */\n  sub\n    /* \"#utility.yul\":1515:1547   */\n  slt\n    /* \"#utility.yul\":1512:1631   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1550:1629   */\n  tag_49\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1512:1631   */\ntag_48:\n    /* \"#utility.yul\":1670:1671   */\n  0x00\n    /* \"#utility.yul\":1695:1773   */\n  tag_50\n    /* \"#utility.yul\":1765:1772   */\n  dup7\n    /* \"#utility.yul\":1756:1762   */\n  dup3\n    /* \"#utility.yul\":1745:1754   */\n  dup8\n    /* \"#utility.yul\":1741:1763   */\n  add\n    /* \"#utility.yul\":1695:1773   */\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1685:1773   */\n  swap4\n  pop\n    /* \"#utility.yul\":1641:1783   */\n  pop\n    /* \"#utility.yul\":1822:1824   */\n  0x20\n    /* \"#utility.yul\":1848:1912   */\n  tag_51\n    /* \"#utility.yul\":1904:1911   */\n  dup7\n    /* \"#utility.yul\":1895:1901   */\n  dup3\n    /* \"#utility.yul\":1884:1893   */\n  dup8\n    /* \"#utility.yul\":1880:1902   */\n  add\n    /* \"#utility.yul\":1848:1912   */\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1838:1912   */\n  swap3\n  pop\n    /* \"#utility.yul\":1793:1922   */\n  pop\n    /* \"#utility.yul\":1961:1963   */\n  0x40\n    /* \"#utility.yul\":1987:2051   */\n  tag_52\n    /* \"#utility.yul\":2043:2050   */\n  dup7\n    /* \"#utility.yul\":2034:2040   */\n  dup3\n    /* \"#utility.yul\":2023:2032   */\n  dup8\n    /* \"#utility.yul\":2019:2041   */\n  add\n    /* \"#utility.yul\":1987:2051   */\n  tag_25\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1977:2051   */\n  swap2\n  pop\n    /* \"#utility.yul\":1932:2061   */\n  pop\n    /* \"#utility.yul\":1377:2068   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2074:2192   */\ntag_26:\n    /* \"#utility.yul\":2161:2185   */\n  tag_54\n    /* \"#utility.yul\":2179:2184   */\n  dup2\n    /* \"#utility.yul\":2161:2185   */\n  tag_19\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2156:2159   */\n  dup3\n    /* \"#utility.yul\":2149:2186   */\n  mstore\n    /* \"#utility.yul\":2074:2192   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2420   */\ntag_9:\n    /* \"#utility.yul\":2291:2295   */\n  0x00\n    /* \"#utility.yul\":2329:2331   */\n  0x20\n    /* \"#utility.yul\":2318:2327   */\n  dup3\n    /* \"#utility.yul\":2314:2332   */\n  add\n    /* \"#utility.yul\":2306:2332   */\n  swap1\n  pop\n    /* \"#utility.yul\":2342:2413   */\n  tag_56\n    /* \"#utility.yul\":2410:2411   */\n  0x00\n    /* \"#utility.yul\":2399:2408   */\n  dup4\n    /* \"#utility.yul\":2395:2412   */\n  add\n    /* \"#utility.yul\":2386:2392   */\n  dup5\n    /* \"#utility.yul\":2342:2413   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2198:2420   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/FarmingC2N.sol\":406:11419  contract FarmingC2N is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FarmingC2N.sol\":406:11419  contract FarmingC2N is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa85adeab\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa85adeab\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xca1d209d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe4c75c27\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe6fd48bc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x785e9e86\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8f10369a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa2383106\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x441a3e70\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c76ca2d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f90916a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FarmingC2N.sol\":2497:2590  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":1419:1446  uint256 public totalRewards */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":1478:1504  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":1715:1745  uint256 public totalAllocPoint */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":3203:3868  function add(... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/FarmingC2N.sol\":6413:6870  function totalPending() external view returns (uint256) {... */\n    tag_8:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":9592:10594  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/FarmingC2N.sol\":7198:8439  function updatePool(uint256 _pid) public {... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/FarmingC2N.sol\":10662:11202  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/FarmingC2N.sol\":1279:1301  uint256 public paidOut */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":6950:7125  function massUpdatePools() public {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/FarmingC2N.sol\":3962:4348  function set(... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/FarmingC2N.sol\":1194:1213  IERC20 public erc20 */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":1348:1378  uint256 public rewardPerSecond */\n    tag_18:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":1558:1622  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":4407:4605  function deposited(uint256 _pid, address _user)... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":1869:1896  uint256 public endTimestamp */\n    tag_21:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":2641:3042  function fund(uint256 _amount) public {... */\n    tag_22:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/FarmingC2N.sol\":8500:9549  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/FarmingC2N.sol\":4666:6340  function pending(uint256 _pid, address _user)... */\n    tag_24:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FarmingC2N.sol\":1794:1823  uint256 public startTimestamp */\n    tag_25:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/FarmingC2N.sol\":2497:2590  function poolLength() external view returns (uint256) {... */\n    tag_31:\n        /* \"contracts/FarmingC2N.sol\":2542:2549  uint256 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":2568:2576  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":2568:2583  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":2561:2583  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":2497:2590  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1419:1446  uint256 public totalRewards */\n    tag_35:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1478:1504  PoolInfo[] public poolInfo */\n    tag_40:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1715:1745  uint256 public totalAllocPoint */\n    tag_44:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":3203:3868  function add(... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/FarmingC2N.sol\":3333:3344  _withUpdate */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":3329:3388  if (_withUpdate) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":3360:3377  massUpdatePools() */\n      tag_123\n        /* \"contracts/FarmingC2N.sol\":3360:3375  massUpdatePools */\n      tag_67\n        /* \"contracts/FarmingC2N.sol\":3360:3377  massUpdatePools() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/FarmingC2N.sol\":3329:3388  if (_withUpdate) {... */\n    tag_122:\n        /* \"contracts/FarmingC2N.sol\":3397:3424  uint256 lastRewardTimestamp */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":3445:3459  startTimestamp */\n      sload(0x08)\n        /* \"contracts/FarmingC2N.sol\":3427:3442  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":3427:3459  block.timestamp > startTimestamp */\n      gt\n        /* \"contracts/FarmingC2N.sol\":3427:3518  block.timestamp > startTimestamp... */\n      tag_124\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":3504:3518  startTimestamp */\n      sload(0x08)\n        /* \"contracts/FarmingC2N.sol\":3427:3518  block.timestamp > startTimestamp... */\n      jump(tag_125)\n    tag_124:\n        /* \"contracts/FarmingC2N.sol\":3474:3489  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":3427:3518  block.timestamp > startTimestamp... */\n    tag_125:\n        /* \"contracts/FarmingC2N.sol\":3397:3518  uint256 lastRewardTimestamp = block.timestamp > startTimestamp... */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":3550:3585  totalAllocPoint.tryAdd(_allocPoint) */\n      tag_126\n        /* \"contracts/FarmingC2N.sol\":3573:3584  _allocPoint */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":3550:3565  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/FarmingC2N.sol\":3550:3572  totalAllocPoint.tryAdd */\n      tag_127\n      swap1\n        /* \"contracts/FarmingC2N.sol\":3550:3585  totalAllocPoint.tryAdd(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/FarmingC2N.sol\":3528:3585  (, totalAllocPoint) = totalAllocPoint.tryAdd(_allocPoint) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":3531:3546  totalAllocPoint */\n      0x07\n      0x00\n        /* \"contracts/FarmingC2N.sol\":3528:3585  (, totalAllocPoint) = totalAllocPoint.tryAdd(_allocPoint) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":3595:3603  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":3622:3851  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/FarmingC2N.sol\":3658:3666  _lpToken */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":3622:3851  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FarmingC2N.sol\":3696:3707  _allocPoint */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":3622:3851  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FarmingC2N.sol\":3746:3765  lastRewardTimestamp */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":3622:3851  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FarmingC2N.sol\":3801:3802  0 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":3622:3851  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FarmingC2N.sol\":3835:3836  0 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":3622:3851  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":3595:3861  poolInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":3319:3868  {... */\n      pop\n        /* \"contracts/FarmingC2N.sol\":3203:3868  function add(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":6413:6870  function totalPending() external view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/FarmingC2N.sol\":6460:6467  uint256 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":6502:6516  startTimestamp */\n      sload(0x08)\n        /* \"contracts/FarmingC2N.sol\":6483:6498  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":6483:6516  block.timestamp <= startTimestamp */\n      gt\n        /* \"contracts/FarmingC2N.sol\":6479:6551  if (block.timestamp <= startTimestamp) {... */\n      tag_130\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":6539:6540  0 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":6532:6540  return 0 */\n      swap1\n      pop\n      jump(tag_129)\n        /* \"contracts/FarmingC2N.sol\":6479:6551  if (block.timestamp <= startTimestamp) {... */\n    tag_130:\n        /* \"contracts/FarmingC2N.sol\":6561:6582  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":6603:6615  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":6585:6600  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":6585:6615  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/FarmingC2N.sol\":6585:6672  block.timestamp < endTimestamp... */\n      tag_131\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":6660:6672  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":6585:6672  block.timestamp < endTimestamp... */\n      jump(tag_132)\n    tag_131:\n        /* \"contracts/FarmingC2N.sol\":6630:6645  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":6585:6672  block.timestamp < endTimestamp... */\n    tag_132:\n        /* \"contracts/FarmingC2N.sol\":6561:6672  uint256 lastTimestamp = block.timestamp < endTimestamp... */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":6686:6703  uint256 totalSave */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":6707:6783  rewardPerSecond.tryMul(... */\n      tag_133\n        /* \"contracts/FarmingC2N.sol\":6759:6773  startTimestamp */\n      sload(0x08)\n        /* \"contracts/FarmingC2N.sol\":6743:6756  lastTimestamp */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":6743:6773  lastTimestamp - startTimestamp */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/FarmingC2N.sol\":6707:6722  rewardPerSecond */\n      sload(0x03)\n        /* \"contracts/FarmingC2N.sol\":6707:6729  rewardPerSecond.tryMul */\n      tag_136\n      swap1\n        /* \"contracts/FarmingC2N.sol\":6707:6783  rewardPerSecond.tryMul(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/FarmingC2N.sol\":6683:6783  (, uint256 totalSave) = rewardPerSecond.tryMul(... */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":6796:6810  uint256 result */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":6814:6839  totalSave.trySub(paidOut) */\n      tag_137\n        /* \"contracts/FarmingC2N.sol\":6831:6838  paidOut */\n      sload(0x02)\n        /* \"contracts/FarmingC2N.sol\":6814:6823  totalSave */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":6814:6830  totalSave.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":6814:6839  totalSave.trySub(paidOut) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/FarmingC2N.sol\":6793:6839  (, uint256 result) = totalSave.trySub(paidOut) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":6857:6863  result */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":6850:6863  return result */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":6413:6870  function totalPending() external view returns (uint256) {... */\n    tag_129:\n      swap1\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":9592:10594  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_56:\n        /* \"contracts/FarmingC2N.sol\":9658:9679  PoolInfo storage pool */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9682:9690  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":9691:9695  _pid */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9682:9696  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n    tag_140:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/FarmingC2N.sol\":9658:9696  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":9706:9727  UserInfo storage user */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9730:9738  userInfo */\n      0x06\n        /* \"contracts/FarmingC2N.sol\":9730:9744  userInfo[_pid] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9739:9743  _pid */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":9730:9744  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":9730:9756  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9745:9755  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":9730:9756  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":9706:9756  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":9802:9809  _amount */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":9787:9791  user */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":9787:9798  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":9787:9809  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/FarmingC2N.sol\":9766:9877  require(... */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/FarmingC2N.sol\":9887:9903  updatePool(_pid) */\n      tag_147\n        /* \"contracts/FarmingC2N.sol\":9898:9902  _pid */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":9887:9897  updatePool */\n      tag_59\n        /* \"contracts/FarmingC2N.sol\":9887:9903  updatePool(_pid) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/FarmingC2N.sol\":9917:9935  uint256 userReward */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9939:9980  user.amount.tryMul(pool.accERC20PerShare) */\n      tag_148\n        /* \"contracts/FarmingC2N.sol\":9958:9962  pool */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9958:9979  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":9939:9943  user */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9939:9950  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":9939:9957  user.amount.tryMul */\n      tag_136\n      swap1\n        /* \"contracts/FarmingC2N.sol\":9939:9980  user.amount.tryMul(pool.accERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/FarmingC2N.sol\":9914:9980  (, uint256 userReward) = user.amount.tryMul(pool.accERC20PerShare) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":9993:10014  uint256 pendingAmount */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10018:10052  userReward.trySub(user.rewardDebt) */\n      tag_149\n        /* \"contracts/FarmingC2N.sol\":10036:10040  user */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":10036:10051  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":10018:10028  userReward */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":10018:10035  userReward.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":10018:10052  userReward.trySub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/FarmingC2N.sol\":9990:10052  (, uint256 pendingAmount) = userReward.trySub(user.rewardDebt) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":10234:10274  erc20Transfer(msg.sender, pendingAmount) */\n      tag_150\n        /* \"contracts/FarmingC2N.sol\":10248:10258  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":10260:10273  pendingAmount */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":10234:10247  erc20Transfer */\n      tag_151\n        /* \"contracts/FarmingC2N.sol\":10234:10274  erc20Transfer(msg.sender, pendingAmount) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/FarmingC2N.sol\":10302:10329  user.amount.trySub(_amount) */\n      tag_152\n        /* \"contracts/FarmingC2N.sol\":10321:10328  _amount */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":10302:10306  user */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":10302:10313  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":10302:10320  user.amount.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":10302:10329  user.amount.trySub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"contracts/FarmingC2N.sol\":10284:10329  (, user.amount) = user.amount.trySub(_amount) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":10287:10291  user */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":10287:10298  user.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10284:10329  (, user.amount) = user.amount.trySub(_amount) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":10361:10402  user.amount.tryMul(pool.accERC20PerShare) */\n      tag_153\n        /* \"contracts/FarmingC2N.sol\":10380:10384  pool */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":10380:10401  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":10361:10365  user */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":10361:10372  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":10361:10379  user.amount.tryMul */\n      tag_136\n      swap1\n        /* \"contracts/FarmingC2N.sol\":10361:10402  user.amount.tryMul(pool.accERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/FarmingC2N.sol\":10339:10402  (, user.rewardDebt) = user.amount.tryMul(pool.accERC20PerShare) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":10342:10346  user */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":10342:10357  user.rewardDebt */\n      0x01\n      add\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10339:10402  (, user.rewardDebt) = user.amount.tryMul(pool.accERC20PerShare) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":10412:10467  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_154\n        /* \"contracts/FarmingC2N.sol\":10446:10456  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":10459:10466  _amount */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":10412:10416  pool */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":10412:10424  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FarmingC2N.sol\":10412:10437  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_155\n      swap1\n        /* \"contracts/FarmingC2N.sol\":10412:10467  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/FarmingC2N.sol\":10502:10536  pool.totalDeposits.trySub(_amount) */\n      tag_156\n        /* \"contracts/FarmingC2N.sol\":10528:10535  _amount */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":10502:10506  pool */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":10502:10520  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":10502:10527  pool.totalDeposits.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":10502:10536  pool.totalDeposits.trySub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/FarmingC2N.sol\":10477:10536  (, pool.totalDeposits) = pool.totalDeposits.trySub(_amount) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":10480:10484  pool */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":10480:10498  pool.totalDeposits */\n      0x04\n      add\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10477:10536  (, pool.totalDeposits) = pool.totalDeposits.trySub(_amount) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":10573:10577  _pid */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":10561:10571  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":10552:10587  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/FarmingC2N.sol\":10579:10586  _amount */\n      dup8\n        /* \"contracts/FarmingC2N.sol\":10552:10587  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FarmingC2N.sol\":9648:10594  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":9592:10594  function withdraw(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":7198:8439  function updatePool(uint256 _pid) public {... */\n    tag_59:\n        /* \"contracts/FarmingC2N.sol\":7249:7270  PoolInfo storage pool */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7273:7281  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":7282:7286  _pid */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":7273:7287  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_160\n      tag_142\n      jump\t// in\n    tag_160:\n    tag_159:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/FarmingC2N.sol\":7249:7287  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":7297:7318  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7339:7351  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":7321:7336  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":7321:7351  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/FarmingC2N.sol\":7321:7408  block.timestamp < endTimestamp... */\n      tag_162\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":7396:7408  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":7321:7408  block.timestamp < endTimestamp... */\n      jump(tag_163)\n    tag_162:\n        /* \"contracts/FarmingC2N.sol\":7366:7381  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":7321:7408  block.timestamp < endTimestamp... */\n    tag_163:\n        /* \"contracts/FarmingC2N.sol\":7297:7408  uint256 lastTimestamp = block.timestamp < endTimestamp... */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":7440:7444  pool */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":7440:7464  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":7423:7436  lastTimestamp */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":7423:7464  lastTimestamp <= pool.lastRewardTimestamp */\n      gt\n        /* \"contracts/FarmingC2N.sol\":7419:7497  if (lastTimestamp <= pool.lastRewardTimestamp) {... */\n      tag_164\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":7480:7487  return; */\n      pop\n      pop\n      jump(tag_158)\n        /* \"contracts/FarmingC2N.sol\":7419:7497  if (lastTimestamp <= pool.lastRewardTimestamp) {... */\n    tag_164:\n        /* \"contracts/FarmingC2N.sol\":7506:7522  uint256 lpSupply */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7525:7529  pool */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":7525:7543  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":7506:7543  uint256 lpSupply = pool.totalDeposits */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":7570:7571  0 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7558:7566  lpSupply */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":7558:7571  lpSupply == 0 */\n      sub\n        /* \"contracts/FarmingC2N.sol\":7554:7658  if (lpSupply == 0) {... */\n      tag_165\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":7614:7627  lastTimestamp */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":7587:7591  pool */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":7587:7611  pool.lastRewardTimestamp */\n      0x02\n      add\n        /* \"contracts/FarmingC2N.sol\":7587:7627  pool.lastRewardTimestamp = lastTimestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":7641:7648  return; */\n      pop\n      pop\n      pop\n      jump(tag_158)\n        /* \"contracts/FarmingC2N.sol\":7554:7658  if (lpSupply == 0) {... */\n    tag_165:\n        /* \"contracts/FarmingC2N.sol\":7671:7690  uint256 nrOfSeconds */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7694:7762  lastTimestamp.trySub(... */\n      tag_166\n        /* \"contracts/FarmingC2N.sol\":7728:7732  pool */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":7728:7752  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":7694:7707  lastTimestamp */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":7694:7714  lastTimestamp.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":7694:7762  lastTimestamp.trySub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/FarmingC2N.sol\":7668:7762  (, uint256 nrOfSeconds) = lastTimestamp.trySub(... */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":7776:7795  uint256 erc20Reward */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7799:7834  nrOfSeconds.tryMul(rewardPerSecond) */\n      tag_167\n        /* \"contracts/FarmingC2N.sol\":7818:7833  rewardPerSecond */\n      sload(0x03)\n        /* \"contracts/FarmingC2N.sol\":7799:7810  nrOfSeconds */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":7799:7817  nrOfSeconds.tryMul */\n      tag_136\n      swap1\n        /* \"contracts/FarmingC2N.sol\":7799:7834  nrOfSeconds.tryMul(rewardPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"contracts/FarmingC2N.sol\":7773:7834  (, uint256 erc20Reward) = nrOfSeconds.tryMul(rewardPerSecond) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":7859:7911  erc20Reward.mulDiv(pool.allocPoint, totalAllocPoint) */\n      tag_168\n        /* \"contracts/FarmingC2N.sol\":7878:7882  pool */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":7878:7893  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":7895:7910  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/FarmingC2N.sol\":7859:7870  erc20Reward */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":7859:7877  erc20Reward.mulDiv */\n      tag_169\n      swap1\n        /* \"contracts/FarmingC2N.sol\":7859:7911  erc20Reward.mulDiv(pool.allocPoint, totalAllocPoint) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"contracts/FarmingC2N.sol\":7845:7911  erc20Reward = erc20Reward.mulDiv(pool.allocPoint, totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":7925:7952  uint256 newAccERC20PerShare */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7956:7984  erc20Reward.tryDiv(lpSupply) */\n      tag_170\n        /* \"contracts/FarmingC2N.sol\":7975:7983  lpSupply */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":7956:7967  erc20Reward */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":7956:7974  erc20Reward.tryDiv */\n      tag_171\n      swap1\n        /* \"contracts/FarmingC2N.sol\":7956:7984  erc20Reward.tryDiv(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"contracts/FarmingC2N.sol\":7922:7984  (, uint256 newAccERC20PerShare) = erc20Reward.tryDiv(lpSupply) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":8023:8094  pool.accERC20PerShare.tryAdd(... */\n      tag_172\n        /* \"contracts/FarmingC2N.sol\":8065:8084  newAccERC20PerShare */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":8023:8027  pool */\n      dup8\n        /* \"contracts/FarmingC2N.sol\":8023:8044  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":8023:8051  pool.accERC20PerShare.tryAdd */\n      tag_127\n      swap1\n        /* \"contracts/FarmingC2N.sol\":8023:8094  pool.accERC20PerShare.tryAdd(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/FarmingC2N.sol\":7995:8094  (, pool.accERC20PerShare) = pool.accERC20PerShare.tryAdd(... */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":7998:8002  pool */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":7998:8019  pool.accERC20PerShare */\n      0x03\n      add\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7995:8094  (, pool.accERC20PerShare) = pool.accERC20PerShare.tryAdd(... */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":8417:8432  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":8390:8394  pool */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":8390:8414  pool.lastRewardTimestamp */\n      0x02\n      add\n        /* \"contracts/FarmingC2N.sol\":8390:8432  pool.lastRewardTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":7239:8439  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":7198:8439  function updatePool(uint256 _pid) public {... */\n    tag_158:\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":10662:11202  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_62:\n        /* \"contracts/FarmingC2N.sol\":10720:10741  PoolInfo storage pool */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10744:10752  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":10753:10757  _pid */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":10744:10758  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_175\n      tag_142\n      jump\t// in\n    tag_175:\n    tag_174:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/FarmingC2N.sol\":10720:10758  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":10768:10789  UserInfo storage user */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10792:10800  userInfo */\n      0x06\n        /* \"contracts/FarmingC2N.sol\":10792:10806  userInfo[_pid] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10801:10805  _pid */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":10792:10806  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":10792:10818  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10807:10817  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":10792:10818  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":10768:10818  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":10828:10887  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_177\n        /* \"contracts/FarmingC2N.sol\":10862:10872  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":10875:10879  user */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":10875:10886  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":10828:10832  pool */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":10828:10840  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FarmingC2N.sol\":10828:10853  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_155\n      swap1\n        /* \"contracts/FarmingC2N.sol\":10828:10887  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"contracts/FarmingC2N.sol\":10991:11029  pool.totalDeposits.trySub(user.amount) */\n      tag_178\n        /* \"contracts/FarmingC2N.sol\":11017:11021  user */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":11017:11028  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":10991:10995  pool */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":10991:11009  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":10991:11016  pool.totalDeposits.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":10991:11029  pool.totalDeposits.trySub(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/FarmingC2N.sol\":10966:11029  (, pool.totalDeposits) = pool.totalDeposits.trySub(user.amount) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":10969:10973  pool */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":10969:10987  pool.totalDeposits */\n      0x04\n      add\n      0x00\n        /* \"contracts/FarmingC2N.sol\":10966:11029  (, pool.totalDeposits) = pool.totalDeposits.trySub(user.amount) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":11074:11078  _pid */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":11062:11072  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":11044:11092  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/FarmingC2N.sol\":11080:11084  user */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":11080:11091  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":11044:11092  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FarmingC2N.sol\":11109:11117  userInfo */\n      0x06\n        /* \"contracts/FarmingC2N.sol\":11109:11123  userInfo[_pid] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":11118:11122  _pid */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":11109:11123  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":11109:11135  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":11124:11134  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":11109:11135  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FarmingC2N.sol\":11102:11135  delete userInfo[_pid][msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":10710:11202  {... */\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":10662:11202  function emergencyWithdraw(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1279:1301  uint256 public paidOut */\n    tag_64:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":6950:7125  function massUpdatePools() public {... */\n    tag_67:\n        /* \"contracts/FarmingC2N.sol\":6994:7008  uint256 length */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7011:7019  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":7011:7026  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":6994:7026  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":7041:7052  uint256 pid */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":7036:7119  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_181:\n        /* \"contracts/FarmingC2N.sol\":7064:7070  length */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":7058:7061  pid */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":7058:7070  pid < length */\n      lt\n        /* \"contracts/FarmingC2N.sol\":7036:7119  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":7093:7108  updatePool(pid) */\n      tag_184\n        /* \"contracts/FarmingC2N.sol\":7104:7107  pid */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":7093:7103  updatePool */\n      tag_59\n        /* \"contracts/FarmingC2N.sol\":7093:7108  updatePool(pid) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/FarmingC2N.sol\":7072:7077  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":7036:7119  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_181)\n    tag_182:\n      pop\n        /* \"contracts/FarmingC2N.sol\":6984:7125  {... */\n      pop\n        /* \"contracts/FarmingC2N.sol\":6950:7125  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":3962:4348  function set(... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/FarmingC2N.sol\":4089:4100  _withUpdate */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":4085:4144  if (_withUpdate) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":4116:4133  massUpdatePools() */\n      tag_189\n        /* \"contracts/FarmingC2N.sol\":4116:4131  massUpdatePools */\n      tag_67\n        /* \"contracts/FarmingC2N.sol\":4116:4133  massUpdatePools() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/FarmingC2N.sol\":4085:4144  if (_withUpdate) {... */\n    tag_188:\n        /* \"contracts/FarmingC2N.sol\":4175:4224  totalAllocPoint.trySub(poolInfo[_pid].allocPoint) */\n      tag_190\n        /* \"contracts/FarmingC2N.sol\":4198:4206  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":4207:4211  _pid */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":4198:4212  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_192\n      tag_142\n      jump\t// in\n    tag_192:\n    tag_191:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/FarmingC2N.sol\":4198:4223  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":4175:4190  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/FarmingC2N.sol\":4175:4197  totalAllocPoint.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":4175:4224  totalAllocPoint.trySub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/FarmingC2N.sol\":4153:4224  (, totalAllocPoint) = totalAllocPoint.trySub(poolInfo[_pid].allocPoint) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":4156:4171  totalAllocPoint */\n      0x07\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4153:4224  (, totalAllocPoint) = totalAllocPoint.trySub(poolInfo[_pid].allocPoint) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":4257:4292  totalAllocPoint.tryAdd(_allocPoint) */\n      tag_194\n        /* \"contracts/FarmingC2N.sol\":4280:4291  _allocPoint */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":4257:4272  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/FarmingC2N.sol\":4257:4279  totalAllocPoint.tryAdd */\n      tag_127\n      swap1\n        /* \"contracts/FarmingC2N.sol\":4257:4292  totalAllocPoint.tryAdd(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/FarmingC2N.sol\":4235:4292  (, totalAllocPoint) = totalAllocPoint.tryAdd(_allocPoint) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":4238:4253  totalAllocPoint */\n      0x07\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4235:4292  (, totalAllocPoint) = totalAllocPoint.tryAdd(_allocPoint) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":4330:4341  _allocPoint */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":4302:4310  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":4311:4315  _pid */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":4302:4316  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_142\n      jump\t// in\n    tag_196:\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/FarmingC2N.sol\":4302:4327  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/FarmingC2N.sol\":4302:4341  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":3962:4348  function set(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1194:1213  IERC20 public erc20 */\n    tag_75:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1348:1378  uint256 public rewardPerSecond */\n    tag_83:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1558:1622  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_88:\n      mstore(0x20, 0x06)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":4407:4605  function deposited(uint256 _pid, address _user)... */\n    tag_93:\n        /* \"contracts/FarmingC2N.sol\":4502:4509  uint256 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4525:4546  UserInfo storage user */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":4549:4557  userInfo */\n      0x06\n        /* \"contracts/FarmingC2N.sol\":4549:4563  userInfo[_pid] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4558:4562  _pid */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":4549:4563  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":4549:4570  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4564:4569  _user */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":4549:4570  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":4525:4570  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":4587:4591  user */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":4587:4598  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":4580:4598  return user.amount */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":4407:4605  function deposited(uint256 _pid, address _user)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1869:1896  uint256 public endTimestamp */\n    tag_96:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":2641:3042  function fund(uint256 _amount) public {... */\n    tag_100:\n        /* \"contracts/FarmingC2N.sol\":2728:2740  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":2710:2725  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":2710:2740  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/FarmingC2N.sol\":2689:2800  require(... */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/FarmingC2N.sol\":2810:2877  erc20.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_209\n        /* \"contracts/FarmingC2N.sol\":2841:2851  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":2862:2866  this */\n      address\n        /* \"contracts/FarmingC2N.sol\":2869:2876  _amount */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":2810:2815  erc20 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FarmingC2N.sol\":2810:2832  erc20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"contracts/FarmingC2N.sol\":2810:2877  erc20.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/FarmingC2N.sol\":2890:2907  uint256 timestamp */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":2911:2942  _amount.tryDiv(rewardPerSecond) */\n      tag_211\n        /* \"contracts/FarmingC2N.sol\":2926:2941  rewardPerSecond */\n      sload(0x03)\n        /* \"contracts/FarmingC2N.sol\":2911:2918  _amount */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":2911:2925  _amount.tryDiv */\n      tag_171\n      swap1\n        /* \"contracts/FarmingC2N.sol\":2911:2942  _amount.tryDiv(rewardPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/FarmingC2N.sol\":2887:2942  (, uint256 timestamp) = _amount.tryDiv(rewardPerSecond) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":2968:2977  timestamp */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":2952:2964  endTimestamp */\n      0x09\n      0x00\n        /* \"contracts/FarmingC2N.sol\":2952:2977  endTimestamp += timestamp */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":3007:3035  totalRewards.tryAdd(_amount) */\n      tag_214\n        /* \"contracts/FarmingC2N.sol\":3027:3034  _amount */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":3007:3019  totalRewards */\n      sload(0x04)\n        /* \"contracts/FarmingC2N.sol\":3007:3026  totalRewards.tryAdd */\n      tag_127\n      swap1\n        /* \"contracts/FarmingC2N.sol\":3007:3035  totalRewards.tryAdd(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/FarmingC2N.sol\":2988:3035  (, totalRewards) = totalRewards.tryAdd(_amount) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":2991:3003  totalRewards */\n      0x04\n      0x00\n        /* \"contracts/FarmingC2N.sol\":2988:3035  (, totalRewards) = totalRewards.tryAdd(_amount) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":2679:3042  {... */\n      pop\n        /* \"contracts/FarmingC2N.sol\":2641:3042  function fund(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":8500:9549  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_103:\n        /* \"contracts/FarmingC2N.sol\":8565:8586  PoolInfo storage pool */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":8589:8597  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":8598:8602  _pid */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":8589:8603  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_142\n      jump\t// in\n    tag_217:\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/FarmingC2N.sol\":8565:8603  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":8613:8634  UserInfo storage user */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":8637:8645  userInfo */\n      0x06\n        /* \"contracts/FarmingC2N.sol\":8637:8651  userInfo[_pid] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":8646:8650  _pid */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":8637:8651  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":8637:8663  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":8652:8662  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":8637:8663  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":8613:8663  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":8674:8690  updatePool(_pid) */\n      tag_219\n        /* \"contracts/FarmingC2N.sol\":8685:8689  _pid */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":8674:8684  updatePool */\n      tag_59\n        /* \"contracts/FarmingC2N.sol\":8674:8690  updatePool(_pid) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/FarmingC2N.sol\":8719:8720  0 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":8705:8709  user */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":8705:8716  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":8705:8720  user.amount > 0 */\n      gt\n        /* \"contracts/FarmingC2N.sol\":8701:9165  if (user.amount > 0) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":8930:8948  uint256 userReward */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":8952:9023  user.amount.tryMul(... */\n      tag_221\n        /* \"contracts/FarmingC2N.sol\":8988:8992  pool */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":8988:9009  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":8952:8956  user */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":8952:8963  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":8952:8970  user.amount.tryMul */\n      tag_136\n      swap1\n        /* \"contracts/FarmingC2N.sol\":8952:9023  user.amount.tryMul(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"contracts/FarmingC2N.sol\":8927:9023  (, uint256 userReward) = user.amount.tryMul(... */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":9040:9061  uint256 pendingAmount */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9065:9099  userReward.trySub(user.rewardDebt) */\n      tag_222\n        /* \"contracts/FarmingC2N.sol\":9083:9087  user */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9083:9098  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":9065:9075  userReward */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9065:9082  userReward.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":9065:9099  userReward.trySub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_222:\n        /* \"contracts/FarmingC2N.sol\":9037:9099  (, uint256 pendingAmount) = userReward.trySub(user.rewardDebt) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":9114:9154  erc20Transfer(msg.sender, pendingAmount) */\n      tag_223\n        /* \"contracts/FarmingC2N.sol\":9128:9138  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":9140:9153  pendingAmount */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":9114:9127  erc20Transfer */\n      tag_151\n        /* \"contracts/FarmingC2N.sol\":9114:9154  erc20Transfer(msg.sender, pendingAmount) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/FarmingC2N.sol\":8722:9165  {... */\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":8701:9165  if (user.amount > 0) {... */\n    tag_220:\n        /* \"contracts/FarmingC2N.sol\":9175:9295  pool.lpToken.safeTransferFrom(... */\n      tag_224\n        /* \"contracts/FarmingC2N.sol\":9226:9236  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":9259:9263  this */\n      address\n        /* \"contracts/FarmingC2N.sol\":9278:9285  _amount */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":9175:9179  pool */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":9175:9187  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FarmingC2N.sol\":9175:9204  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"contracts/FarmingC2N.sol\":9175:9295  pool.lpToken.safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"contracts/FarmingC2N.sol\":9330:9364  pool.totalDeposits.tryAdd(_amount) */\n      tag_225\n        /* \"contracts/FarmingC2N.sol\":9356:9363  _amount */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9330:9334  pool */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9330:9348  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":9330:9355  pool.totalDeposits.tryAdd */\n      tag_127\n      swap1\n        /* \"contracts/FarmingC2N.sol\":9330:9364  pool.totalDeposits.tryAdd(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"contracts/FarmingC2N.sol\":9305:9364  (, pool.totalDeposits) = pool.totalDeposits.tryAdd(_amount) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":9308:9312  pool */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":9308:9326  pool.totalDeposits */\n      0x04\n      add\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9305:9364  (, pool.totalDeposits) = pool.totalDeposits.tryAdd(_amount) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":9393:9420  user.amount.tryAdd(_amount) */\n      tag_226\n        /* \"contracts/FarmingC2N.sol\":9412:9419  _amount */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9393:9397  user */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":9393:9404  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":9393:9411  user.amount.tryAdd */\n      tag_127\n      swap1\n        /* \"contracts/FarmingC2N.sol\":9393:9420  user.amount.tryAdd(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"contracts/FarmingC2N.sol\":9375:9420  (, user.amount) = user.amount.tryAdd(_amount) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":9378:9382  user */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":9378:9389  user.amount */\n      0x00\n      add\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9375:9420  (, user.amount) = user.amount.tryAdd(_amount) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":9452:9493  user.amount.tryMul(pool.accERC20PerShare) */\n      tag_227\n        /* \"contracts/FarmingC2N.sol\":9471:9475  pool */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":9471:9492  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":9452:9456  user */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":9452:9463  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":9452:9470  user.amount.tryMul */\n      tag_136\n      swap1\n        /* \"contracts/FarmingC2N.sol\":9452:9493  user.amount.tryMul(pool.accERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"contracts/FarmingC2N.sol\":9430:9493  (, user.rewardDebt) = user.amount.tryMul(pool.accERC20PerShare) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":9433:9437  user */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":9433:9448  user.rewardDebt */\n      0x01\n      add\n      0x00\n        /* \"contracts/FarmingC2N.sol\":9430:9493  (, user.rewardDebt) = user.amount.tryMul(pool.accERC20PerShare) */\n      dup3\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":9528:9532  _pid */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":9516:9526  msg.sender */\n      caller\n        /* \"contracts/FarmingC2N.sol\":9508:9542  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/FarmingC2N.sol\":9534:9541  _amount */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":9508:9542  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FarmingC2N.sol\":8555:9549  {... */\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":8500:9549  function deposit(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":4666:6340  function pending(uint256 _pid, address _user)... */\n    tag_106:\n        /* \"contracts/FarmingC2N.sol\":4759:4766  uint256 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4782:4803  PoolInfo storage pool */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":4806:4814  poolInfo */\n      0x05\n        /* \"contracts/FarmingC2N.sol\":4815:4819  _pid */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":4806:4820  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_231\n      tag_142\n      jump\t// in\n    tag_231:\n    tag_230:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/FarmingC2N.sol\":4782:4820  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":4830:4851  UserInfo storage user */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4854:4862  userInfo */\n      0x06\n        /* \"contracts/FarmingC2N.sol\":4854:4868  userInfo[_pid] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4863:4867  _pid */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":4854:4868  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":4854:4875  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4869:4874  _user */\n      dup6\n        /* \"contracts/FarmingC2N.sol\":4854:4875  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FarmingC2N.sol\":4830:4875  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":4885:4909  uint256 accERC20PerShare */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4912:4916  pool */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":4912:4933  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":4885:4933  uint256 accERC20PerShare = pool.accERC20PerShare */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":4943:4961  uint256 userAmount */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":4964:4968  user */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":4964:4975  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":4943:4975  uint256 userAmount = user.amount */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":4986:5002  uint256 lpSupply */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":5005:5009  pool */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":5005:5023  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":4986:5023  uint256 lpSupply = pool.totalDeposits */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":5056:5060  pool */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":5056:5080  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":5038:5053  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":5038:5080  block.timestamp > pool.lastRewardTimestamp */\n      gt\n        /* \"contracts/FarmingC2N.sol\":5038:5097  block.timestamp > pool.lastRewardTimestamp && lpSupply != 0 */\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"contracts/FarmingC2N.sol\":5096:5097  0 */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":5084:5092  lpSupply */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":5084:5097  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/FarmingC2N.sol\":5038:5097  block.timestamp > pool.lastRewardTimestamp && lpSupply != 0 */\n    tag_233:\n        /* \"contracts/FarmingC2N.sol\":5034:6172  if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":5113:5134  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":5155:5167  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":5137:5152  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":5137:5167  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/FarmingC2N.sol\":5137:5232  block.timestamp < endTimestamp... */\n      tag_235\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":5220:5232  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":5137:5232  block.timestamp < endTimestamp... */\n      jump(tag_236)\n    tag_235:\n        /* \"contracts/FarmingC2N.sol\":5186:5201  block.timestamp */\n      timestamp\n        /* \"contracts/FarmingC2N.sol\":5137:5232  block.timestamp < endTimestamp... */\n    tag_236:\n        /* \"contracts/FarmingC2N.sol\":5113:5232  uint256 lastTimestamp = block.timestamp < endTimestamp... */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":5246:5272  uint256 timestampToCompare */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":5302:5314  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":5275:5279  pool */\n      dup8\n        /* \"contracts/FarmingC2N.sol\":5275:5299  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":5275:5314  pool.lastRewardTimestamp < endTimestamp */\n      lt\n        /* \"contracts/FarmingC2N.sol\":5275:5388  pool.lastRewardTimestamp < endTimestamp... */\n      tag_237\n      jumpi\n        /* \"contracts/FarmingC2N.sol\":5376:5388  endTimestamp */\n      sload(0x09)\n        /* \"contracts/FarmingC2N.sol\":5275:5388  pool.lastRewardTimestamp < endTimestamp... */\n      jump(tag_238)\n    tag_237:\n        /* \"contracts/FarmingC2N.sol\":5333:5337  pool */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":5333:5357  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":5275:5388  pool.lastRewardTimestamp < endTimestamp... */\n    tag_238:\n        /* \"contracts/FarmingC2N.sol\":5246:5388  uint256 timestampToCompare = pool.lastRewardTimestamp < endTimestamp... */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":5784:5803  uint256 nrOfSeconds */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":5807:5847  lastTimestamp.trySub(timestampToCompare) */\n      tag_239\n        /* \"contracts/FarmingC2N.sol\":5828:5846  timestampToCompare */\n      dup3\n        /* \"contracts/FarmingC2N.sol\":5807:5820  lastTimestamp */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":5807:5827  lastTimestamp.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":5807:5847  lastTimestamp.trySub(timestampToCompare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"contracts/FarmingC2N.sol\":5781:5847  (, uint256 nrOfSeconds) = lastTimestamp.trySub(timestampToCompare) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":5864:5883  uint256 erc20Reward */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":5887:5922  nrOfSeconds.tryMul(rewardPerSecond) */\n      tag_240\n        /* \"contracts/FarmingC2N.sol\":5906:5921  rewardPerSecond */\n      sload(0x03)\n        /* \"contracts/FarmingC2N.sol\":5887:5898  nrOfSeconds */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":5887:5905  nrOfSeconds.tryMul */\n      tag_136\n      swap1\n        /* \"contracts/FarmingC2N.sol\":5887:5922  nrOfSeconds.tryMul(rewardPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/FarmingC2N.sol\":5861:5922  (, uint256 erc20Reward) = nrOfSeconds.tryMul(rewardPerSecond) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":5950:6002  erc20Reward.mulDiv(pool.allocPoint, totalAllocPoint) */\n      tag_241\n        /* \"contracts/FarmingC2N.sol\":5969:5973  pool */\n      dup10\n        /* \"contracts/FarmingC2N.sol\":5969:5984  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":5986:6001  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/FarmingC2N.sol\":5950:5961  erc20Reward */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":5950:5968  erc20Reward.mulDiv */\n      tag_169\n      swap1\n        /* \"contracts/FarmingC2N.sol\":5950:6002  erc20Reward.mulDiv(pool.allocPoint, totalAllocPoint) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"contracts/FarmingC2N.sol\":5936:6002  erc20Reward = erc20Reward.mulDiv(pool.allocPoint, totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/FarmingC2N.sol\":6020:6047  uint256 newAccERC20PerShare */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":6051:6079  erc20Reward.tryDiv(lpSupply) */\n      tag_242\n        /* \"contracts/FarmingC2N.sol\":6070:6078  lpSupply */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":6051:6062  erc20Reward */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":6051:6069  erc20Reward.tryDiv */\n      tag_171\n      swap1\n        /* \"contracts/FarmingC2N.sol\":6051:6079  erc20Reward.tryDiv(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/FarmingC2N.sol\":6017:6079  (, uint256 newAccERC20PerShare) = erc20Reward.tryDiv(lpSupply) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":6117:6161  accERC20PerShare.tryAdd(newAccERC20PerShare) */\n      tag_243\n        /* \"contracts/FarmingC2N.sol\":6141:6160  newAccERC20PerShare */\n      dup2\n        /* \"contracts/FarmingC2N.sol\":6117:6133  accERC20PerShare */\n      dup10\n        /* \"contracts/FarmingC2N.sol\":6117:6140  accERC20PerShare.tryAdd */\n      tag_127\n      swap1\n        /* \"contracts/FarmingC2N.sol\":6117:6161  accERC20PerShare.tryAdd(newAccERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/FarmingC2N.sol\":6094:6161  (, accERC20PerShare) = accERC20PerShare.tryAdd(newAccERC20PerShare) */\n      swap1\n      pop\n      dup1\n      swap9\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":5099:6172  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":5034:6172  if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {... */\n    tag_234:\n        /* \"contracts/FarmingC2N.sol\":6185:6204  uint256 totalReward */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":6208:6243  userAmount.tryMul(accERC20PerShare) */\n      tag_244\n        /* \"contracts/FarmingC2N.sol\":6226:6242  accERC20PerShare */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":6208:6218  userAmount */\n      dup5\n        /* \"contracts/FarmingC2N.sol\":6208:6225  userAmount.tryMul */\n      tag_136\n      swap1\n        /* \"contracts/FarmingC2N.sol\":6208:6243  userAmount.tryMul(accERC20PerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/FarmingC2N.sol\":6182:6243  (, uint256 totalReward) = userAmount.tryMul(accERC20PerShare) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":6256:6270  uint256 result */\n      0x00\n        /* \"contracts/FarmingC2N.sol\":6274:6309  totalReward.trySub(user.rewardDebt) */\n      tag_245\n        /* \"contracts/FarmingC2N.sol\":6293:6297  user */\n      dup7\n        /* \"contracts/FarmingC2N.sol\":6293:6308  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/FarmingC2N.sol\":6274:6285  totalReward */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":6274:6292  totalReward.trySub */\n      tag_138\n      swap1\n        /* \"contracts/FarmingC2N.sol\":6274:6309  totalReward.trySub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"contracts/FarmingC2N.sol\":6253:6309  (, uint256 result) = totalReward.trySub(user.rewardDebt) */\n      swap2\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":6327:6333  result */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":6320:6333  return result */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FarmingC2N.sol\":4666:6340  function pending(uint256 _pid, address _user)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":1794:1823  uint256 public startTimestamp */\n    tag_109:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":585:801  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":646:650  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":652:659  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":695:704  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":711:712  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":707:708  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":707:712  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":695:712  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":734:735  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":730:731  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":730:735  c < a */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":726:754  if (c < a) return (false, 0) */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":745:750  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":752:753  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":737:754  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_259)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":726:754  if (c < a) return (false, 0) */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":776:780  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":782:783  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":768:784  return (true, c) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":585:801  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_259:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1207:1700  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1268:1272  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1274:1281  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1556:1557  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1551:1552  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1551:1557  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1547:1575  if (a == 0) return (true, 0) */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1567:1571  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1559:1575  return (true, 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_261)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1547:1575  if (a == 0) return (true, 0) */\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1589:1598  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1605:1606  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1601:1602  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1601:1606  a * b */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1589:1606  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1633:1634  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1628:1629  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1624:1625  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1624:1629  c / a */\n      dup2\n      tag_263\n      jumpi\n      tag_264\n      tag_265\n      jump\t// in\n    tag_264:\n    tag_263:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1624:1634  c / a != b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1620:1653  if (c / a != b) return (false, 0) */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1644:1649  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1651:1652  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1636:1653  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_261)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1620:1653  if (c / a != b) return (false, 0) */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1675:1679  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1681:1682  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1667:1683  return (true, c) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1207:1700  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_261:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":908:1097  function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":969:973  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":975:982  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1026:1027  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1022:1023  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1022:1027  b > a */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1018:1046  if (b > a) return (false, 0) */\n      iszero\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1037:1042  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1044:1045  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1029:1046  return (false, 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_267)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1018:1046  if (b > a) return (false, 0) */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1068:1072  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1078:1079  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1074:1075  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1074:1079  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1060:1080  return (true, a - b) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":908:1097  function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_267:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FarmingC2N.sol\":11282:11417  function erc20Transfer(address _to, uint256 _amount) internal {... */\n    tag_151:\n        /* \"contracts/FarmingC2N.sol\":11354:11359  erc20 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FarmingC2N.sol\":11354:11368  erc20.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/FarmingC2N.sol\":11369:11372  _to */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":11374:11381  _amount */\n      dup4\n        /* \"contracts/FarmingC2N.sol\":11354:11382  erc20.transfer(_to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap3\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_274\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      pop\n        /* \"contracts/FarmingC2N.sol\":11403:11410  _amount */\n      dup1\n        /* \"contracts/FarmingC2N.sol\":11392:11399  paidOut */\n      0x02\n      0x00\n        /* \"contracts/FarmingC2N.sol\":11392:11410  paidOut += _amount */\n      dup3\n      dup3\n      sload\n      tag_276\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_276:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FarmingC2N.sol\":11282:11417  function erc20Transfer(address _to, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_279\n      swap3\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3803:7919  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3885:3899  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4232:4245  uint256 prod0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4252:4253  y */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4248:4249  x */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4248:4253  x * y */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4232:4253  uint256 prod0 = x * y */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4312:4325  uint256 prod1 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4437:4438  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4433:4439  not(0) */\n      not\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4430:4431  y */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4427:4428  x */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4420:4440  mulmod(x, y, not(0)) */\n      mulmod\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4493:4498  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4489:4491  mm */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4486:4499  lt(mm, prod0) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4478:4483  prod0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4474:4476  mm */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4470:4484  sub(mm, prod0) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4466:4500  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4457:4500  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4392:4514  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4604:4605  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4595:4600  prod1 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4595:4605  prod1 == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4591:4959  if (prod1 == 0) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4933:4944  denominator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4925:4930  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4925:4944  prod0 / denominator */\n      dup2\n      tag_283\n      jumpi\n      tag_284\n      tag_265\n      jump\t// in\n    tag_284:\n    tag_283:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4918:4944  return prod0 / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_281)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4591:4959  if (prod1 == 0) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5080:5085  prod1 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5065:5076  denominator */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5065:5085  denominator <= prod1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5061:5149  if (denominator <= prod1) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5112:5134  MathOverflowedMulDiv() */\n      mload(0x40)\n      0x227bc15300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5061:5149  if (denominator <= prod1) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5404:5421  uint256 remainder */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5539:5550  denominator */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5536:5537  y */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5533:5534  x */\n      dup9\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5526:5551  mulmod(x, y, denominator) */\n      mulmod\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5513:5551  remainder := mulmod(x, y, denominator) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5667:5672  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5656:5665  remainder */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5653:5673  gt(remainder, prod0) */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5646:5651  prod1 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5642:5674  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5633:5674  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5711:5720  remainder */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5704:5709  prod0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5700:5721  sub(prod0, remainder) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5691:5721  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5939:5951  uint256 twos */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5973:5984  denominator */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5969:5970  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5969:5984  0 - denominator */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5954:5965  denominator */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5954:5985  denominator & (0 - denominator) */\n      and\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5939:5985  uint256 twos = denominator & (0 - denominator) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6105:6109  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6092:6103  denominator */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6088:6110  div(denominator, twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6073:6110  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6197:6201  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6190:6195  prod0 */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6186:6202  div(prod0, twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6177:6202  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6354:6355  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6347:6351  twos */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6340:6344  twos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6337:6338  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6333:6345  sub(0, twos) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6329:6352  div(sub(0, twos), twos) */\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6325:6356  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6317:6356  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6453:6457  twos */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6445:6450  prod1 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6445:6457  prod1 * twos */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6436:6457  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6775:6790  uint256 inverse */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6813:6814  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6798:6809  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6794:6795  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6794:6809  3 * denominator */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6793:6814  (3 * denominator) ^ 2 */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6775:6814  uint256 inverse = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7060:7067  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7046:7057  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7046:7067  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7042:7043  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7042:7067  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7031:7067  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7129:7136  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7115:7126  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7115:7136  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7111:7112  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7111:7136  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7100:7136  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7199:7206  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7185:7196  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7185:7206  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7181:7182  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7181:7206  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7170:7206  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7269:7276  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7255:7266  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7255:7276  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7251:7252  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7251:7276  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7240:7276  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7339:7346  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7325:7336  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7325:7346  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7321:7322  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7321:7346  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7310:7346  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7410:7417  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7396:7407  denominator */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7396:7417  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7392:7393  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7392:7417  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7381:7417  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7868:7875  inverse */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7860:7865  prod0 */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7860:7875  prod0 * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7851:7875  result = prod0 * inverse */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7889:7902  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3803:7919  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_281:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1811:2001  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1872:1876  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1878:1885  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1930:1931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1925:1926  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1925:1931  b == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1921:1950  if (b == 0) return (false, 0) */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1941:1946  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1948:1949  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1933:1950  return (false, 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_286)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1921:1950  if (b == 0) return (false, 0) */\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1972:1976  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1982:1983  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1978:1979  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1978:1983  a / b */\n      dup2\n      tag_288\n      jumpi\n      tag_289\n      tag_265\n      jump\t// in\n    tag_289:\n    tag_288:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1964:1984  return (true, a / b) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1811:2001  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_286:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_293\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_298\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_309\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_313\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_312)\n    tag_313:\n      0x60\n      swap2\n      pop\n    tag_312:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_314\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_315\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_318\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_319\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_320)\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_321\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_316)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_316:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_327:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_328:\n        /* \"#utility.yul\":177:201   */\n      tag_364\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_327\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_33:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_366\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_328\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_330:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_332:\n        /* \"#utility.yul\":842:866   */\n      tag_371\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_327\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_372:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_333:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_374\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_332\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_39:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_377\n      tag_330\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1118:1237   */\n    tag_376:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_378\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_333\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_334:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_335:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_336:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_382\n        /* \"#utility.yul\":1676:1710   */\n      tag_383\n        /* \"#utility.yul\":1685:1709   */\n      tag_384\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_334\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":1676:1710   */\n      tag_335\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1658:1711   */\n      tag_334\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_337:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_386\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_336\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1995   */\n    tag_338:\n        /* \"#utility.yul\":1919:1928   */\n      0x00\n        /* \"#utility.yul\":1952:1989   */\n      tag_388\n        /* \"#utility.yul\":1983:1988   */\n      dup3\n        /* \"#utility.yul\":1952:1989   */\n      tag_337\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":1939:1989   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2160   */\n    tag_339:\n        /* \"#utility.yul\":2102:2153   */\n      tag_390\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2102:2153   */\n      tag_338\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2090:2154   */\n      mstore\n        /* \"#utility.yul\":2001:2160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2858   */\n    tag_42:\n        /* \"#utility.yul\":2385:2389   */\n      0x00\n        /* \"#utility.yul\":2423:2426   */\n      0xa0\n        /* \"#utility.yul\":2412:2421   */\n      dup3\n        /* \"#utility.yul\":2408:2427   */\n      add\n        /* \"#utility.yul\":2400:2427   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2522   */\n      tag_392\n        /* \"#utility.yul\":2519:2520   */\n      0x00\n        /* \"#utility.yul\":2508:2517   */\n      dup4\n        /* \"#utility.yul\":2504:2521   */\n      add\n        /* \"#utility.yul\":2495:2501   */\n      dup9\n        /* \"#utility.yul\":2437:2522   */\n      tag_339\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2532:2604   */\n      tag_393\n        /* \"#utility.yul\":2600:2602   */\n      0x20\n        /* \"#utility.yul\":2589:2598   */\n      dup4\n        /* \"#utility.yul\":2585:2603   */\n      add\n        /* \"#utility.yul\":2576:2582   */\n      dup8\n        /* \"#utility.yul\":2532:2604   */\n      tag_328\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2614:2686   */\n      tag_394\n        /* \"#utility.yul\":2682:2684   */\n      0x40\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2667:2685   */\n      add\n        /* \"#utility.yul\":2658:2664   */\n      dup7\n        /* \"#utility.yul\":2614:2686   */\n      tag_328\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2696:2768   */\n      tag_395\n        /* \"#utility.yul\":2764:2766   */\n      0x60\n        /* \"#utility.yul\":2753:2762   */\n      dup4\n        /* \"#utility.yul\":2749:2767   */\n      add\n        /* \"#utility.yul\":2740:2746   */\n      dup6\n        /* \"#utility.yul\":2696:2768   */\n      tag_328\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2778:2851   */\n      tag_396\n        /* \"#utility.yul\":2846:2849   */\n      0x80\n        /* \"#utility.yul\":2835:2844   */\n      dup4\n        /* \"#utility.yul\":2831:2850   */\n      add\n        /* \"#utility.yul\":2822:2828   */\n      dup5\n        /* \"#utility.yul\":2778:2851   */\n      tag_328\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2166:2858   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:2960   */\n    tag_340:\n        /* \"#utility.yul\":2901:2908   */\n      0x00\n        /* \"#utility.yul\":2930:2954   */\n      tag_398\n        /* \"#utility.yul\":2948:2953   */\n      dup3\n        /* \"#utility.yul\":2930:2954   */\n      tag_334\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2919:2954   */\n      swap1\n      pop\n        /* \"#utility.yul\":2864:2960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2966:3076   */\n    tag_341:\n        /* \"#utility.yul\":3017:3024   */\n      0x00\n        /* \"#utility.yul\":3046:3070   */\n      tag_400\n        /* \"#utility.yul\":3064:3069   */\n      dup3\n        /* \"#utility.yul\":3046:3070   */\n      tag_340\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3035:3070   */\n      swap1\n      pop\n        /* \"#utility.yul\":2966:3076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3082:3232   */\n    tag_342:\n        /* \"#utility.yul\":3169:3207   */\n      tag_402\n        /* \"#utility.yul\":3201:3206   */\n      dup2\n        /* \"#utility.yul\":3169:3207   */\n      tag_341\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3162:3167   */\n      dup2\n        /* \"#utility.yul\":3159:3208   */\n      eq\n        /* \"#utility.yul\":3149:3226   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3222:3223   */\n      0x00\n        /* \"#utility.yul\":3219:3220   */\n      dup1\n        /* \"#utility.yul\":3212:3224   */\n      revert\n        /* \"#utility.yul\":3149:3226   */\n    tag_403:\n        /* \"#utility.yul\":3082:3232   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3238:3405   */\n    tag_343:\n        /* \"#utility.yul\":3298:3303   */\n      0x00\n        /* \"#utility.yul\":3336:3342   */\n      dup2\n        /* \"#utility.yul\":3323:3343   */\n      calldataload\n        /* \"#utility.yul\":3314:3343   */\n      swap1\n      pop\n        /* \"#utility.yul\":3352:3399   */\n      tag_405\n        /* \"#utility.yul\":3393:3398   */\n      dup2\n        /* \"#utility.yul\":3352:3399   */\n      tag_342\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3238:3405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3411:3501   */\n    tag_344:\n        /* \"#utility.yul\":3445:3452   */\n      0x00\n        /* \"#utility.yul\":3488:3493   */\n      dup2\n        /* \"#utility.yul\":3481:3494   */\n      iszero\n        /* \"#utility.yul\":3474:3495   */\n      iszero\n        /* \"#utility.yul\":3463:3495   */\n      swap1\n      pop\n        /* \"#utility.yul\":3411:3501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3507:3623   */\n    tag_345:\n        /* \"#utility.yul\":3577:3598   */\n      tag_408\n        /* \"#utility.yul\":3592:3597   */\n      dup2\n        /* \"#utility.yul\":3577:3598   */\n      tag_344\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3570:3575   */\n      dup2\n        /* \"#utility.yul\":3567:3599   */\n      eq\n        /* \"#utility.yul\":3557:3617   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":3613:3614   */\n      0x00\n        /* \"#utility.yul\":3610:3611   */\n      dup1\n        /* \"#utility.yul\":3603:3615   */\n      revert\n        /* \"#utility.yul\":3557:3617   */\n    tag_409:\n        /* \"#utility.yul\":3507:3623   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3629:3762   */\n    tag_346:\n        /* \"#utility.yul\":3672:3677   */\n      0x00\n        /* \"#utility.yul\":3710:3716   */\n      dup2\n        /* \"#utility.yul\":3697:3717   */\n      calldataload\n        /* \"#utility.yul\":3688:3717   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:3756   */\n      tag_411\n        /* \"#utility.yul\":3750:3755   */\n      dup2\n        /* \"#utility.yul\":3726:3756   */\n      tag_345\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3629:3762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3768:4409   */\n    tag_48:\n        /* \"#utility.yul\":3856:3862   */\n      0x00\n        /* \"#utility.yul\":3864:3870   */\n      dup1\n        /* \"#utility.yul\":3872:3878   */\n      0x00\n        /* \"#utility.yul\":3921:3923   */\n      0x60\n        /* \"#utility.yul\":3909:3918   */\n      dup5\n        /* \"#utility.yul\":3900:3907   */\n      dup7\n        /* \"#utility.yul\":3896:3919   */\n      sub\n        /* \"#utility.yul\":3892:3924   */\n      slt\n        /* \"#utility.yul\":3889:4008   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3927:4006   */\n      tag_414\n      tag_330\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3889:4008   */\n    tag_413:\n        /* \"#utility.yul\":4047:4048   */\n      0x00\n        /* \"#utility.yul\":4072:4125   */\n      tag_415\n        /* \"#utility.yul\":4117:4124   */\n      dup7\n        /* \"#utility.yul\":4108:4114   */\n      dup3\n        /* \"#utility.yul\":4097:4106   */\n      dup8\n        /* \"#utility.yul\":4093:4115   */\n      add\n        /* \"#utility.yul\":4072:4125   */\n      tag_333\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4062:4125   */\n      swap4\n      pop\n        /* \"#utility.yul\":4018:4135   */\n      pop\n        /* \"#utility.yul\":4174:4176   */\n      0x20\n        /* \"#utility.yul\":4200:4267   */\n      tag_416\n        /* \"#utility.yul\":4259:4266   */\n      dup7\n        /* \"#utility.yul\":4250:4256   */\n      dup3\n        /* \"#utility.yul\":4239:4248   */\n      dup8\n        /* \"#utility.yul\":4235:4257   */\n      add\n        /* \"#utility.yul\":4200:4267   */\n      tag_343\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4190:4267   */\n      swap3\n      pop\n        /* \"#utility.yul\":4145:4277   */\n      pop\n        /* \"#utility.yul\":4316:4318   */\n      0x40\n        /* \"#utility.yul\":4342:4392   */\n      tag_417\n        /* \"#utility.yul\":4384:4391   */\n      dup7\n        /* \"#utility.yul\":4375:4381   */\n      dup3\n        /* \"#utility.yul\":4364:4373   */\n      dup8\n        /* \"#utility.yul\":4360:4382   */\n      add\n        /* \"#utility.yul\":4342:4392   */\n      tag_346\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4332:4392   */\n      swap2\n      pop\n        /* \"#utility.yul\":4287:4402   */\n      pop\n        /* \"#utility.yul\":3768:4409   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4415:4889   */\n    tag_55:\n        /* \"#utility.yul\":4483:4489   */\n      0x00\n        /* \"#utility.yul\":4491:4497   */\n      dup1\n        /* \"#utility.yul\":4540:4542   */\n      0x40\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4519:4526   */\n      dup6\n        /* \"#utility.yul\":4515:4538   */\n      sub\n        /* \"#utility.yul\":4511:4543   */\n      slt\n        /* \"#utility.yul\":4508:4627   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4546:4625   */\n      tag_420\n      tag_330\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4508:4627   */\n    tag_419:\n        /* \"#utility.yul\":4666:4667   */\n      0x00\n        /* \"#utility.yul\":4691:4744   */\n      tag_421\n        /* \"#utility.yul\":4736:4743   */\n      dup6\n        /* \"#utility.yul\":4727:4733   */\n      dup3\n        /* \"#utility.yul\":4716:4725   */\n      dup7\n        /* \"#utility.yul\":4712:4734   */\n      add\n        /* \"#utility.yul\":4691:4744   */\n      tag_333\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4681:4744   */\n      swap3\n      pop\n        /* \"#utility.yul\":4637:4754   */\n      pop\n        /* \"#utility.yul\":4793:4795   */\n      0x20\n        /* \"#utility.yul\":4819:4872   */\n      tag_422\n        /* \"#utility.yul\":4864:4871   */\n      dup6\n        /* \"#utility.yul\":4855:4861   */\n      dup3\n        /* \"#utility.yul\":4844:4853   */\n      dup7\n        /* \"#utility.yul\":4840:4862   */\n      add\n        /* \"#utility.yul\":4819:4872   */\n      tag_333\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4809:4872   */\n      swap2\n      pop\n        /* \"#utility.yul\":4764:4882   */\n      pop\n        /* \"#utility.yul\":4415:4889   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4895:5508   */\n    tag_70:\n        /* \"#utility.yul\":4969:4975   */\n      0x00\n        /* \"#utility.yul\":4977:4983   */\n      dup1\n        /* \"#utility.yul\":4985:4991   */\n      0x00\n        /* \"#utility.yul\":5034:5036   */\n      0x60\n        /* \"#utility.yul\":5022:5031   */\n      dup5\n        /* \"#utility.yul\":5013:5020   */\n      dup7\n        /* \"#utility.yul\":5009:5032   */\n      sub\n        /* \"#utility.yul\":5005:5037   */\n      slt\n        /* \"#utility.yul\":5002:5121   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":5040:5119   */\n      tag_425\n      tag_330\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5002:5121   */\n    tag_424:\n        /* \"#utility.yul\":5160:5161   */\n      0x00\n        /* \"#utility.yul\":5185:5238   */\n      tag_426\n        /* \"#utility.yul\":5230:5237   */\n      dup7\n        /* \"#utility.yul\":5221:5227   */\n      dup3\n        /* \"#utility.yul\":5210:5219   */\n      dup8\n        /* \"#utility.yul\":5206:5228   */\n      add\n        /* \"#utility.yul\":5185:5238   */\n      tag_333\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5175:5238   */\n      swap4\n      pop\n        /* \"#utility.yul\":5131:5248   */\n      pop\n        /* \"#utility.yul\":5287:5289   */\n      0x20\n        /* \"#utility.yul\":5313:5366   */\n      tag_427\n        /* \"#utility.yul\":5358:5365   */\n      dup7\n        /* \"#utility.yul\":5349:5355   */\n      dup3\n        /* \"#utility.yul\":5338:5347   */\n      dup8\n        /* \"#utility.yul\":5334:5356   */\n      add\n        /* \"#utility.yul\":5313:5366   */\n      tag_333\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5303:5366   */\n      swap3\n      pop\n        /* \"#utility.yul\":5258:5376   */\n      pop\n        /* \"#utility.yul\":5415:5417   */\n      0x40\n        /* \"#utility.yul\":5441:5491   */\n      tag_428\n        /* \"#utility.yul\":5483:5490   */\n      dup7\n        /* \"#utility.yul\":5474:5480   */\n      dup3\n        /* \"#utility.yul\":5463:5472   */\n      dup8\n        /* \"#utility.yul\":5459:5481   */\n      add\n        /* \"#utility.yul\":5441:5491   */\n      tag_346\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5431:5491   */\n      swap2\n      pop\n        /* \"#utility.yul\":5386:5501   */\n      pop\n        /* \"#utility.yul\":4895:5508   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5514:5764   */\n    tag_77:\n        /* \"#utility.yul\":5621:5625   */\n      0x00\n        /* \"#utility.yul\":5659:5661   */\n      0x20\n        /* \"#utility.yul\":5648:5657   */\n      dup3\n        /* \"#utility.yul\":5644:5662   */\n      add\n        /* \"#utility.yul\":5636:5662   */\n      swap1\n      pop\n        /* \"#utility.yul\":5672:5757   */\n      tag_430\n        /* \"#utility.yul\":5754:5755   */\n      0x00\n        /* \"#utility.yul\":5743:5752   */\n      dup4\n        /* \"#utility.yul\":5739:5756   */\n      add\n        /* \"#utility.yul\":5730:5736   */\n      dup5\n        /* \"#utility.yul\":5672:5757   */\n      tag_339\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5514:5764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:5888   */\n    tag_347:\n        /* \"#utility.yul\":5857:5881   */\n      tag_432\n        /* \"#utility.yul\":5875:5880   */\n      dup2\n        /* \"#utility.yul\":5857:5881   */\n      tag_340\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5852:5855   */\n      dup3\n        /* \"#utility.yul\":5845:5882   */\n      mstore\n        /* \"#utility.yul\":5770:5888   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5894:6116   */\n    tag_81:\n        /* \"#utility.yul\":5987:5991   */\n      0x00\n        /* \"#utility.yul\":6025:6027   */\n      0x20\n        /* \"#utility.yul\":6014:6023   */\n      dup3\n        /* \"#utility.yul\":6010:6028   */\n      add\n        /* \"#utility.yul\":6002:6028   */\n      swap1\n      pop\n        /* \"#utility.yul\":6038:6109   */\n      tag_434\n        /* \"#utility.yul\":6106:6107   */\n      0x00\n        /* \"#utility.yul\":6095:6104   */\n      dup4\n        /* \"#utility.yul\":6091:6108   */\n      add\n        /* \"#utility.yul\":6082:6088   */\n      dup5\n        /* \"#utility.yul\":6038:6109   */\n      tag_347\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5894:6116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6244   */\n    tag_348:\n        /* \"#utility.yul\":6195:6219   */\n      tag_436\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6195:6219   */\n      tag_340\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6188:6193   */\n      dup2\n        /* \"#utility.yul\":6185:6220   */\n      eq\n        /* \"#utility.yul\":6175:6238   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":6234:6235   */\n      0x00\n        /* \"#utility.yul\":6231:6232   */\n      dup1\n        /* \"#utility.yul\":6224:6236   */\n      revert\n        /* \"#utility.yul\":6175:6238   */\n    tag_437:\n        /* \"#utility.yul\":6122:6244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6389   */\n    tag_349:\n        /* \"#utility.yul\":6296:6301   */\n      0x00\n        /* \"#utility.yul\":6334:6340   */\n      dup2\n        /* \"#utility.yul\":6321:6341   */\n      calldataload\n        /* \"#utility.yul\":6312:6341   */\n      swap1\n      pop\n        /* \"#utility.yul\":6350:6383   */\n      tag_439\n        /* \"#utility.yul\":6377:6382   */\n      dup2\n        /* \"#utility.yul\":6350:6383   */\n      tag_348\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6250:6389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6395:6869   */\n    tag_87:\n        /* \"#utility.yul\":6463:6469   */\n      0x00\n        /* \"#utility.yul\":6471:6477   */\n      dup1\n        /* \"#utility.yul\":6520:6522   */\n      0x40\n        /* \"#utility.yul\":6508:6517   */\n      dup4\n        /* \"#utility.yul\":6499:6506   */\n      dup6\n        /* \"#utility.yul\":6495:6518   */\n      sub\n        /* \"#utility.yul\":6491:6523   */\n      slt\n        /* \"#utility.yul\":6488:6607   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":6526:6605   */\n      tag_442\n      tag_330\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6488:6607   */\n    tag_441:\n        /* \"#utility.yul\":6646:6647   */\n      0x00\n        /* \"#utility.yul\":6671:6724   */\n      tag_443\n        /* \"#utility.yul\":6716:6723   */\n      dup6\n        /* \"#utility.yul\":6707:6713   */\n      dup3\n        /* \"#utility.yul\":6696:6705   */\n      dup7\n        /* \"#utility.yul\":6692:6714   */\n      add\n        /* \"#utility.yul\":6671:6724   */\n      tag_333\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6661:6724   */\n      swap3\n      pop\n        /* \"#utility.yul\":6617:6734   */\n      pop\n        /* \"#utility.yul\":6773:6775   */\n      0x20\n        /* \"#utility.yul\":6799:6852   */\n      tag_444\n        /* \"#utility.yul\":6844:6851   */\n      dup6\n        /* \"#utility.yul\":6835:6841   */\n      dup3\n        /* \"#utility.yul\":6824:6833   */\n      dup7\n        /* \"#utility.yul\":6820:6842   */\n      add\n        /* \"#utility.yul\":6799:6852   */\n      tag_349\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":6789:6852   */\n      swap2\n      pop\n        /* \"#utility.yul\":6744:6862   */\n      pop\n        /* \"#utility.yul\":6395:6869   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6875:7207   */\n    tag_90:\n        /* \"#utility.yul\":6996:7000   */\n      0x00\n        /* \"#utility.yul\":7034:7036   */\n      0x40\n        /* \"#utility.yul\":7023:7032   */\n      dup3\n        /* \"#utility.yul\":7019:7037   */\n      add\n        /* \"#utility.yul\":7011:7037   */\n      swap1\n      pop\n        /* \"#utility.yul\":7047:7118   */\n      tag_446\n        /* \"#utility.yul\":7115:7116   */\n      0x00\n        /* \"#utility.yul\":7104:7113   */\n      dup4\n        /* \"#utility.yul\":7100:7117   */\n      add\n        /* \"#utility.yul\":7091:7097   */\n      dup6\n        /* \"#utility.yul\":7047:7118   */\n      tag_328\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7128:7200   */\n      tag_447\n        /* \"#utility.yul\":7196:7198   */\n      0x20\n        /* \"#utility.yul\":7185:7194   */\n      dup4\n        /* \"#utility.yul\":7181:7199   */\n      add\n        /* \"#utility.yul\":7172:7178   */\n      dup5\n        /* \"#utility.yul\":7128:7200   */\n      tag_328\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6875:7207   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7213:7542   */\n    tag_113:\n        /* \"#utility.yul\":7272:7278   */\n      0x00\n        /* \"#utility.yul\":7321:7323   */\n      0x20\n        /* \"#utility.yul\":7309:7318   */\n      dup3\n        /* \"#utility.yul\":7300:7307   */\n      dup5\n        /* \"#utility.yul\":7296:7319   */\n      sub\n        /* \"#utility.yul\":7292:7324   */\n      slt\n        /* \"#utility.yul\":7289:7408   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":7327:7406   */\n      tag_450\n      tag_330\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7289:7408   */\n    tag_449:\n        /* \"#utility.yul\":7447:7448   */\n      0x00\n        /* \"#utility.yul\":7472:7525   */\n      tag_451\n        /* \"#utility.yul\":7517:7524   */\n      dup5\n        /* \"#utility.yul\":7508:7514   */\n      dup3\n        /* \"#utility.yul\":7497:7506   */\n      dup6\n        /* \"#utility.yul\":7493:7515   */\n      add\n        /* \"#utility.yul\":7472:7525   */\n      tag_349\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7462:7525   */\n      swap2\n      pop\n        /* \"#utility.yul\":7418:7535   */\n      pop\n        /* \"#utility.yul\":7213:7542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7548:7728   */\n    tag_350:\n        /* \"#utility.yul\":7596:7673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7593:7594   */\n      0x00\n        /* \"#utility.yul\":7586:7674   */\n      mstore\n        /* \"#utility.yul\":7693:7697   */\n      0x11\n        /* \"#utility.yul\":7690:7691   */\n      0x04\n        /* \"#utility.yul\":7683:7698   */\n      mstore\n        /* \"#utility.yul\":7717:7721   */\n      0x24\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7707:7722   */\n      revert\n        /* \"#utility.yul\":7734:7928   */\n    tag_135:\n        /* \"#utility.yul\":7774:7778   */\n      0x00\n        /* \"#utility.yul\":7794:7814   */\n      tag_454\n        /* \"#utility.yul\":7812:7813   */\n      dup3\n        /* \"#utility.yul\":7794:7814   */\n      tag_327\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7789:7814   */\n      swap2\n      pop\n        /* \"#utility.yul\":7828:7848   */\n      tag_455\n        /* \"#utility.yul\":7846:7847   */\n      dup4\n        /* \"#utility.yul\":7828:7848   */\n      tag_327\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7823:7848   */\n      swap3\n      pop\n        /* \"#utility.yul\":7872:7873   */\n      dup3\n        /* \"#utility.yul\":7869:7870   */\n      dup3\n        /* \"#utility.yul\":7865:7874   */\n      sub\n        /* \"#utility.yul\":7857:7874   */\n      swap1\n      pop\n        /* \"#utility.yul\":7896:7897   */\n      dup2\n        /* \"#utility.yul\":7890:7894   */\n      dup2\n        /* \"#utility.yul\":7887:7898   */\n      gt\n        /* \"#utility.yul\":7884:7921   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":7901:7919   */\n      tag_457\n      tag_350\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":7884:7921   */\n    tag_456:\n        /* \"#utility.yul\":7734:7928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7934:8114   */\n    tag_142:\n        /* \"#utility.yul\":7982:8059   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7979:7980   */\n      0x00\n        /* \"#utility.yul\":7972:8060   */\n      mstore\n        /* \"#utility.yul\":8079:8083   */\n      0x32\n        /* \"#utility.yul\":8076:8077   */\n      0x04\n        /* \"#utility.yul\":8069:8084   */\n      mstore\n        /* \"#utility.yul\":8103:8107   */\n      0x24\n        /* \"#utility.yul\":8100:8101   */\n      0x00\n        /* \"#utility.yul\":8093:8108   */\n      revert\n        /* \"#utility.yul\":8120:8289   */\n    tag_351:\n        /* \"#utility.yul\":8204:8215   */\n      0x00\n        /* \"#utility.yul\":8238:8244   */\n      dup3\n        /* \"#utility.yul\":8233:8236   */\n      dup3\n        /* \"#utility.yul\":8226:8245   */\n      mstore\n        /* \"#utility.yul\":8278:8282   */\n      0x20\n        /* \"#utility.yul\":8273:8276   */\n      dup3\n        /* \"#utility.yul\":8269:8283   */\n      add\n        /* \"#utility.yul\":8254:8283   */\n      swap1\n      pop\n        /* \"#utility.yul\":8120:8289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8295:8524   */\n    tag_352:\n        /* \"#utility.yul\":8435:8469   */\n      0x77697468647261773a2063616e2774207769746864726177206d6f7265207468\n        /* \"#utility.yul\":8431:8432   */\n      0x00\n        /* \"#utility.yul\":8423:8429   */\n      dup3\n        /* \"#utility.yul\":8419:8433   */\n      add\n        /* \"#utility.yul\":8412:8470   */\n      mstore\n        /* \"#utility.yul\":8504:8516   */\n      0x616e206465706f73697400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8499:8501   */\n      0x20\n        /* \"#utility.yul\":8491:8497   */\n      dup3\n        /* \"#utility.yul\":8487:8502   */\n      add\n        /* \"#utility.yul\":8480:8517   */\n      mstore\n        /* \"#utility.yul\":8295:8524   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8530:8896   */\n    tag_353:\n        /* \"#utility.yul\":8672:8675   */\n      0x00\n        /* \"#utility.yul\":8693:8760   */\n      tag_462\n        /* \"#utility.yul\":8757:8759   */\n      0x2a\n        /* \"#utility.yul\":8752:8755   */\n      dup4\n        /* \"#utility.yul\":8693:8760   */\n      tag_351\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8686:8760   */\n      swap2\n      pop\n        /* \"#utility.yul\":8769:8862   */\n      tag_463\n        /* \"#utility.yul\":8858:8861   */\n      dup3\n        /* \"#utility.yul\":8769:8862   */\n      tag_352\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":8887:8889   */\n      0x40\n        /* \"#utility.yul\":8882:8885   */\n      dup3\n        /* \"#utility.yul\":8878:8890   */\n      add\n        /* \"#utility.yul\":8871:8890   */\n      swap1\n      pop\n        /* \"#utility.yul\":8530:8896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8902:9321   */\n    tag_146:\n        /* \"#utility.yul\":9068:9072   */\n      0x00\n        /* \"#utility.yul\":9106:9108   */\n      0x20\n        /* \"#utility.yul\":9095:9104   */\n      dup3\n        /* \"#utility.yul\":9091:9109   */\n      add\n        /* \"#utility.yul\":9083:9109   */\n      swap1\n      pop\n        /* \"#utility.yul\":9155:9164   */\n      dup2\n        /* \"#utility.yul\":9149:9153   */\n      dup2\n        /* \"#utility.yul\":9145:9165   */\n      sub\n        /* \"#utility.yul\":9141:9142   */\n      0x00\n        /* \"#utility.yul\":9130:9139   */\n      dup4\n        /* \"#utility.yul\":9126:9143   */\n      add\n        /* \"#utility.yul\":9119:9166   */\n      mstore\n        /* \"#utility.yul\":9183:9314   */\n      tag_465\n        /* \"#utility.yul\":9309:9313   */\n      dup2\n        /* \"#utility.yul\":9183:9314   */\n      tag_353\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9175:9314   */\n      swap1\n      pop\n        /* \"#utility.yul\":8902:9321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9327:9548   */\n    tag_354:\n        /* \"#utility.yul\":9467:9501   */\n      0x66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73\n        /* \"#utility.yul\":9463:9464   */\n      0x00\n        /* \"#utility.yul\":9455:9461   */\n      dup3\n        /* \"#utility.yul\":9451:9465   */\n      add\n        /* \"#utility.yul\":9444:9502   */\n      mstore\n        /* \"#utility.yul\":9536:9540   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9531:9533   */\n      0x20\n        /* \"#utility.yul\":9523:9529   */\n      dup3\n        /* \"#utility.yul\":9519:9534   */\n      add\n        /* \"#utility.yul\":9512:9541   */\n      mstore\n        /* \"#utility.yul\":9327:9548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9554:9920   */\n    tag_355:\n        /* \"#utility.yul\":9696:9699   */\n      0x00\n        /* \"#utility.yul\":9717:9784   */\n      tag_468\n        /* \"#utility.yul\":9781:9783   */\n      0x22\n        /* \"#utility.yul\":9776:9779   */\n      dup4\n        /* \"#utility.yul\":9717:9784   */\n      tag_351\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9710:9784   */\n      swap2\n      pop\n        /* \"#utility.yul\":9793:9886   */\n      tag_469\n        /* \"#utility.yul\":9882:9885   */\n      dup3\n        /* \"#utility.yul\":9793:9886   */\n      tag_354\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9911:9913   */\n      0x40\n        /* \"#utility.yul\":9906:9909   */\n      dup3\n        /* \"#utility.yul\":9902:9914   */\n      add\n        /* \"#utility.yul\":9895:9914   */\n      swap1\n      pop\n        /* \"#utility.yul\":9554:9920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9926:10345   */\n    tag_208:\n        /* \"#utility.yul\":10092:10096   */\n      0x00\n        /* \"#utility.yul\":10130:10132   */\n      0x20\n        /* \"#utility.yul\":10119:10128   */\n      dup3\n        /* \"#utility.yul\":10115:10133   */\n      add\n        /* \"#utility.yul\":10107:10133   */\n      swap1\n      pop\n        /* \"#utility.yul\":10179:10188   */\n      dup2\n        /* \"#utility.yul\":10173:10177   */\n      dup2\n        /* \"#utility.yul\":10169:10189   */\n      sub\n        /* \"#utility.yul\":10165:10166   */\n      0x00\n        /* \"#utility.yul\":10154:10163   */\n      dup4\n        /* \"#utility.yul\":10150:10167   */\n      add\n        /* \"#utility.yul\":10143:10190   */\n      mstore\n        /* \"#utility.yul\":10207:10338   */\n      tag_471\n        /* \"#utility.yul\":10333:10337   */\n      dup2\n        /* \"#utility.yul\":10207:10338   */\n      tag_355\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10199:10338   */\n      swap1\n      pop\n        /* \"#utility.yul\":9926:10345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10351:10542   */\n    tag_213:\n        /* \"#utility.yul\":10391:10394   */\n      0x00\n        /* \"#utility.yul\":10410:10430   */\n      tag_473\n        /* \"#utility.yul\":10428:10429   */\n      dup3\n        /* \"#utility.yul\":10410:10430   */\n      tag_327\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10405:10430   */\n      swap2\n      pop\n        /* \"#utility.yul\":10444:10464   */\n      tag_474\n        /* \"#utility.yul\":10462:10463   */\n      dup4\n        /* \"#utility.yul\":10444:10464   */\n      tag_327\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10439:10464   */\n      swap3\n      pop\n        /* \"#utility.yul\":10487:10488   */\n      dup3\n        /* \"#utility.yul\":10484:10485   */\n      dup3\n        /* \"#utility.yul\":10480:10489   */\n      add\n        /* \"#utility.yul\":10473:10489   */\n      swap1\n      pop\n        /* \"#utility.yul\":10508:10511   */\n      dup1\n        /* \"#utility.yul\":10505:10506   */\n      dup3\n        /* \"#utility.yul\":10502:10512   */\n      gt\n        /* \"#utility.yul\":10499:10535   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":10515:10533   */\n      tag_476\n      tag_350\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10499:10535   */\n    tag_475:\n        /* \"#utility.yul\":10351:10542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10548:10728   */\n    tag_265:\n        /* \"#utility.yul\":10596:10673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10593:10594   */\n      0x00\n        /* \"#utility.yul\":10586:10674   */\n      mstore\n        /* \"#utility.yul\":10693:10697   */\n      0x12\n        /* \"#utility.yul\":10690:10691   */\n      0x04\n        /* \"#utility.yul\":10683:10698   */\n      mstore\n        /* \"#utility.yul\":10717:10721   */\n      0x24\n        /* \"#utility.yul\":10714:10715   */\n      0x00\n        /* \"#utility.yul\":10707:10722   */\n      revert\n        /* \"#utility.yul\":10734:11066   */\n    tag_271:\n        /* \"#utility.yul\":10855:10859   */\n      0x00\n        /* \"#utility.yul\":10893:10895   */\n      0x40\n        /* \"#utility.yul\":10882:10891   */\n      dup3\n        /* \"#utility.yul\":10878:10896   */\n      add\n        /* \"#utility.yul\":10870:10896   */\n      swap1\n      pop\n        /* \"#utility.yul\":10906:10977   */\n      tag_479\n        /* \"#utility.yul\":10974:10975   */\n      0x00\n        /* \"#utility.yul\":10963:10972   */\n      dup4\n        /* \"#utility.yul\":10959:10976   */\n      add\n        /* \"#utility.yul\":10950:10956   */\n      dup6\n        /* \"#utility.yul\":10906:10977   */\n      tag_347\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10987:11059   */\n      tag_480\n        /* \"#utility.yul\":11055:11057   */\n      0x20\n        /* \"#utility.yul\":11044:11053   */\n      dup4\n        /* \"#utility.yul\":11040:11058   */\n      add\n        /* \"#utility.yul\":11031:11037   */\n      dup5\n        /* \"#utility.yul\":10987:11059   */\n      tag_328\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10734:11066   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11072:11209   */\n    tag_356:\n        /* \"#utility.yul\":11126:11131   */\n      0x00\n        /* \"#utility.yul\":11157:11163   */\n      dup2\n        /* \"#utility.yul\":11151:11164   */\n      mload\n        /* \"#utility.yul\":11142:11164   */\n      swap1\n      pop\n        /* \"#utility.yul\":11173:11203   */\n      tag_482\n        /* \"#utility.yul\":11197:11202   */\n      dup2\n        /* \"#utility.yul\":11173:11203   */\n      tag_345\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11072:11209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11215:11560   */\n    tag_275:\n        /* \"#utility.yul\":11282:11288   */\n      0x00\n        /* \"#utility.yul\":11331:11333   */\n      0x20\n        /* \"#utility.yul\":11319:11328   */\n      dup3\n        /* \"#utility.yul\":11310:11317   */\n      dup5\n        /* \"#utility.yul\":11306:11329   */\n      sub\n        /* \"#utility.yul\":11302:11334   */\n      slt\n        /* \"#utility.yul\":11299:11418   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":11337:11416   */\n      tag_485\n      tag_330\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11299:11418   */\n    tag_484:\n        /* \"#utility.yul\":11457:11458   */\n      0x00\n        /* \"#utility.yul\":11482:11543   */\n      tag_486\n        /* \"#utility.yul\":11535:11542   */\n      dup5\n        /* \"#utility.yul\":11526:11532   */\n      dup3\n        /* \"#utility.yul\":11515:11524   */\n      dup6\n        /* \"#utility.yul\":11511:11533   */\n      add\n        /* \"#utility.yul\":11482:11543   */\n      tag_356\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11472:11543   */\n      swap2\n      pop\n        /* \"#utility.yul\":11428:11553   */\n      pop\n        /* \"#utility.yul\":11215:11560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11566:12008   */\n    tag_294:\n        /* \"#utility.yul\":11715:11719   */\n      0x00\n        /* \"#utility.yul\":11753:11755   */\n      0x60\n        /* \"#utility.yul\":11742:11751   */\n      dup3\n        /* \"#utility.yul\":11738:11756   */\n      add\n        /* \"#utility.yul\":11730:11756   */\n      swap1\n      pop\n        /* \"#utility.yul\":11766:11837   */\n      tag_488\n        /* \"#utility.yul\":11834:11835   */\n      0x00\n        /* \"#utility.yul\":11823:11832   */\n      dup4\n        /* \"#utility.yul\":11819:11836   */\n      add\n        /* \"#utility.yul\":11810:11816   */\n      dup7\n        /* \"#utility.yul\":11766:11837   */\n      tag_347\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11847:11919   */\n      tag_489\n        /* \"#utility.yul\":11915:11917   */\n      0x20\n        /* \"#utility.yul\":11904:11913   */\n      dup4\n        /* \"#utility.yul\":11900:11918   */\n      add\n        /* \"#utility.yul\":11891:11897   */\n      dup6\n        /* \"#utility.yul\":11847:11919   */\n      tag_347\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":11929:12001   */\n      tag_490\n        /* \"#utility.yul\":11997:11999   */\n      0x40\n        /* \"#utility.yul\":11986:11995   */\n      dup4\n        /* \"#utility.yul\":11982:12000   */\n      add\n        /* \"#utility.yul\":11973:11979   */\n      dup5\n        /* \"#utility.yul\":11929:12001   */\n      tag_328\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":11566:12008   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12014:12112   */\n    tag_357:\n        /* \"#utility.yul\":12065:12071   */\n      0x00\n        /* \"#utility.yul\":12099:12104   */\n      dup2\n        /* \"#utility.yul\":12093:12105   */\n      mload\n        /* \"#utility.yul\":12083:12105   */\n      swap1\n      pop\n        /* \"#utility.yul\":12014:12112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12118:12265   */\n    tag_358:\n        /* \"#utility.yul\":12219:12230   */\n      0x00\n        /* \"#utility.yul\":12256:12259   */\n      dup2\n        /* \"#utility.yul\":12241:12259   */\n      swap1\n      pop\n        /* \"#utility.yul\":12118:12265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12271:12517   */\n    tag_359:\n        /* \"#utility.yul\":12352:12353   */\n      0x00\n        /* \"#utility.yul\":12362:12475   */\n    tag_494:\n        /* \"#utility.yul\":12376:12382   */\n      dup4\n        /* \"#utility.yul\":12373:12374   */\n      dup2\n        /* \"#utility.yul\":12370:12383   */\n      lt\n        /* \"#utility.yul\":12362:12475   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":12461:12462   */\n      dup1\n        /* \"#utility.yul\":12456:12459   */\n      dup3\n        /* \"#utility.yul\":12452:12463   */\n      add\n        /* \"#utility.yul\":12446:12464   */\n      mload\n        /* \"#utility.yul\":12442:12443   */\n      dup2\n        /* \"#utility.yul\":12437:12440   */\n      dup5\n        /* \"#utility.yul\":12433:12444   */\n      add\n        /* \"#utility.yul\":12426:12465   */\n      mstore\n        /* \"#utility.yul\":12398:12400   */\n      0x20\n        /* \"#utility.yul\":12395:12396   */\n      dup2\n        /* \"#utility.yul\":12391:12401   */\n      add\n        /* \"#utility.yul\":12386:12401   */\n      swap1\n      pop\n        /* \"#utility.yul\":12362:12475   */\n      jump(tag_494)\n    tag_496:\n        /* \"#utility.yul\":12509:12510   */\n      0x00\n        /* \"#utility.yul\":12500:12506   */\n      dup5\n        /* \"#utility.yul\":12495:12498   */\n      dup5\n        /* \"#utility.yul\":12491:12507   */\n      add\n        /* \"#utility.yul\":12484:12511   */\n      mstore\n        /* \"#utility.yul\":12333:12517   */\n      pop\n        /* \"#utility.yul\":12271:12517   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12523:12909   */\n    tag_360:\n        /* \"#utility.yul\":12627:12630   */\n      0x00\n        /* \"#utility.yul\":12655:12693   */\n      tag_498\n        /* \"#utility.yul\":12687:12692   */\n      dup3\n        /* \"#utility.yul\":12655:12693   */\n      tag_357\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":12709:12797   */\n      tag_499\n        /* \"#utility.yul\":12790:12796   */\n      dup2\n        /* \"#utility.yul\":12785:12788   */\n      dup6\n        /* \"#utility.yul\":12709:12797   */\n      tag_358\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12702:12797   */\n      swap4\n      pop\n        /* \"#utility.yul\":12806:12871   */\n      tag_500\n        /* \"#utility.yul\":12864:12870   */\n      dup2\n        /* \"#utility.yul\":12859:12862   */\n      dup6\n        /* \"#utility.yul\":12852:12856   */\n      0x20\n        /* \"#utility.yul\":12845:12850   */\n      dup7\n        /* \"#utility.yul\":12841:12857   */\n      add\n        /* \"#utility.yul\":12806:12871   */\n      tag_359\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":12896:12902   */\n      dup1\n        /* \"#utility.yul\":12891:12894   */\n      dup5\n        /* \"#utility.yul\":12887:12903   */\n      add\n        /* \"#utility.yul\":12880:12903   */\n      swap2\n      pop\n        /* \"#utility.yul\":12631:12909   */\n      pop\n        /* \"#utility.yul\":12523:12909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12915:13186   */\n    tag_310:\n        /* \"#utility.yul\":13045:13048   */\n      0x00\n        /* \"#utility.yul\":13067:13160   */\n      tag_502\n        /* \"#utility.yul\":13156:13159   */\n      dup3\n        /* \"#utility.yul\":13147:13153   */\n      dup5\n        /* \"#utility.yul\":13067:13160   */\n      tag_360\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13060:13160   */\n      swap2\n      pop\n        /* \"#utility.yul\":13177:13180   */\n      dup2\n        /* \"#utility.yul\":13170:13180   */\n      swap1\n      pop\n        /* \"#utility.yul\":12915:13186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203852f52e7b5a406fec373a239aa07d0230e1a99afacb40ddd9a7e2ed48e9882564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2001": {
									"entryPoint": null,
									"id": 2001,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 282,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$225_fromMemory": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$225t_uint256t_uint256_fromMemory": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$225": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$225": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2423:8",
										"nodeType": "YulBlock",
										"src": "0:2423:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "627:51:8",
													"nodeType": "YulBlock",
													"src": "627:51:8",
													"statements": [
														{
															"nativeSrc": "637:35:8",
															"nodeType": "YulAssignment",
															"src": "637:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:8"
																},
																"nativeSrc": "648:24:8",
																"nodeType": "YulFunctionCall",
																"src": "648:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$225",
												"nativeSrc": "568:110:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:8",
														"nodeType": "YulTypedName",
														"src": "609:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:8",
														"nodeType": "YulTypedName",
														"src": "619:7:8",
														"type": ""
													}
												],
												"src": "568:110:8"
											},
											{
												"body": {
													"nativeSrc": "741:93:8",
													"nodeType": "YulBlock",
													"src": "741:93:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:8",
																"nodeType": "YulBlock",
																"src": "812:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:8",
																					"nodeType": "YulLiteral",
																					"src": "821:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:8",
																					"nodeType": "YulLiteral",
																					"src": "824:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:8"
																			},
																			"nativeSrc": "814:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:8"
																		},
																		"nativeSrc": "814:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$225",
																					"nativeSrc": "771:31:8",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:8"
																				},
																				"nativeSrc": "771:38:8",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:8"
																		},
																		"nativeSrc": "761:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:8"
																},
																"nativeSrc": "754:57:8",
																"nodeType": "YulFunctionCall",
																"src": "754:57:8"
															},
															"nativeSrc": "751:77:8",
															"nodeType": "YulIf",
															"src": "751:77:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$225",
												"nativeSrc": "684:150:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:8",
														"nodeType": "YulTypedName",
														"src": "734:5:8",
														"type": ""
													}
												],
												"src": "684:150:8"
											},
											{
												"body": {
													"nativeSrc": "917:94:8",
													"nodeType": "YulBlock",
													"src": "917:94:8",
													"statements": [
														{
															"nativeSrc": "927:22:8",
															"nodeType": "YulAssignment",
															"src": "927:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:8"
																},
																"nativeSrc": "936:13:8",
																"nodeType": "YulFunctionCall",
																"src": "936:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$225",
																	"nativeSrc": "958:40:8",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:8"
																},
																"nativeSrc": "958:47:8",
																"nodeType": "YulFunctionCall",
																"src": "958:47:8"
															},
															"nativeSrc": "958:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
												"nativeSrc": "840:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:8",
														"nodeType": "YulTypedName",
														"src": "895:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:8",
														"nodeType": "YulTypedName",
														"src": "903:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:8",
														"nodeType": "YulTypedName",
														"src": "911:5:8",
														"type": ""
													}
												],
												"src": "840:171:8"
											},
											{
												"body": {
													"nativeSrc": "1062:32:8",
													"nodeType": "YulBlock",
													"src": "1062:32:8",
													"statements": [
														{
															"nativeSrc": "1072:16:8",
															"nodeType": "YulAssignment",
															"src": "1072:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1083:5:8",
																"nodeType": "YulIdentifier",
																"src": "1083:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1072:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1072:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1017:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1044:5:8",
														"nodeType": "YulTypedName",
														"src": "1044:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1054:7:8",
														"nodeType": "YulTypedName",
														"src": "1054:7:8",
														"type": ""
													}
												],
												"src": "1017:77:8"
											},
											{
												"body": {
													"nativeSrc": "1143:79:8",
													"nodeType": "YulBlock",
													"src": "1143:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1200:16:8",
																"nodeType": "YulBlock",
																"src": "1200:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1209:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1212:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1202:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:8"
																			},
																			"nativeSrc": "1202:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:8"
																		},
																		"nativeSrc": "1202:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1166:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1166:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1191:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1191:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1173:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1173:17:8"
																				},
																				"nativeSrc": "1173:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1173:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1163:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1163:2:8"
																		},
																		"nativeSrc": "1163:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:8"
																},
																"nativeSrc": "1156:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1156:43:8"
															},
															"nativeSrc": "1153:63:8",
															"nodeType": "YulIf",
															"src": "1153:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1100:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1136:5:8",
														"nodeType": "YulTypedName",
														"src": "1136:5:8",
														"type": ""
													}
												],
												"src": "1100:122:8"
											},
											{
												"body": {
													"nativeSrc": "1291:80:8",
													"nodeType": "YulBlock",
													"src": "1291:80:8",
													"statements": [
														{
															"nativeSrc": "1301:22:8",
															"nodeType": "YulAssignment",
															"src": "1301:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1316:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1316:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1310:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1310:5:8"
																},
																"nativeSrc": "1310:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1310:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1301:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1301:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1359:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1359:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1332:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1332:26:8"
																},
																"nativeSrc": "1332:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1332:33:8"
															},
															"nativeSrc": "1332:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1332:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1228:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1269:6:8",
														"nodeType": "YulTypedName",
														"src": "1269:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1277:3:8",
														"nodeType": "YulTypedName",
														"src": "1277:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1285:5:8",
														"nodeType": "YulTypedName",
														"src": "1285:5:8",
														"type": ""
													}
												],
												"src": "1228:143:8"
											},
											{
												"body": {
													"nativeSrc": "1502:566:8",
													"nodeType": "YulBlock",
													"src": "1502:566:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1548:83:8",
																"nodeType": "YulBlock",
																"src": "1548:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1550:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:77:8"
																			},
																			"nativeSrc": "1550:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1550:79:8"
																		},
																		"nativeSrc": "1550:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1550:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1523:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1523:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1532:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1532:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1519:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:8"
																		},
																		"nativeSrc": "1519:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1519:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1544:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1544:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1515:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:8"
																},
																"nativeSrc": "1515:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1515:32:8"
															},
															"nativeSrc": "1512:119:8",
															"nodeType": "YulIf",
															"src": "1512:119:8"
														},
														{
															"nativeSrc": "1641:142:8",
															"nodeType": "YulBlock",
															"src": "1641:142:8",
															"statements": [
																{
																	"nativeSrc": "1656:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1656:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1670:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1660:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1660:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1685:88:8",
																	"nodeType": "YulAssignment",
																	"src": "1685:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1745:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1745:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1756:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1756:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1741:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1741:3:8"
																				},
																				"nativeSrc": "1741:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1741:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1765:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
																			"nativeSrc": "1695:45:8",
																			"nodeType": "YulIdentifier",
																			"src": "1695:45:8"
																		},
																		"nativeSrc": "1695:78:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1695:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1685:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1685:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1793:129:8",
															"nodeType": "YulBlock",
															"src": "1793:129:8",
															"statements": [
																{
																	"nativeSrc": "1808:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1808:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1822:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1822:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1812:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1812:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1838:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1838:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1884:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1884:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1895:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1895:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1880:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:8"
																				},
																				"nativeSrc": "1880:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1880:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1904:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1904:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1848:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1848:31:8"
																		},
																		"nativeSrc": "1848:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1838:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1838:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1932:129:8",
															"nodeType": "YulBlock",
															"src": "1932:129:8",
															"statements": [
																{
																	"nativeSrc": "1947:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1947:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1961:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1951:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1951:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1977:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1977:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2023:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2023:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2034:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2034:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2019:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2019:3:8"
																				},
																				"nativeSrc": "2019:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2019:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2043:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2043:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1987:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1987:31:8"
																		},
																		"nativeSrc": "1987:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1977:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1977:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$225t_uint256t_uint256_fromMemory",
												"nativeSrc": "1377:691:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1456:9:8",
														"nodeType": "YulTypedName",
														"src": "1456:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1467:7:8",
														"nodeType": "YulTypedName",
														"src": "1467:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1479:6:8",
														"nodeType": "YulTypedName",
														"src": "1479:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1487:6:8",
														"nodeType": "YulTypedName",
														"src": "1487:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1495:6:8",
														"nodeType": "YulTypedName",
														"src": "1495:6:8",
														"type": ""
													}
												],
												"src": "1377:691:8"
											},
											{
												"body": {
													"nativeSrc": "2139:53:8",
													"nodeType": "YulBlock",
													"src": "2139:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2156:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2156:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2179:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2179:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2161:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "2161:17:8"
																		},
																		"nativeSrc": "2161:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2149:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:8"
																},
																"nativeSrc": "2149:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2149:37:8"
															},
															"nativeSrc": "2149:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2149:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2074:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2127:5:8",
														"nodeType": "YulTypedName",
														"src": "2127:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2134:3:8",
														"nodeType": "YulTypedName",
														"src": "2134:3:8",
														"type": ""
													}
												],
												"src": "2074:118:8"
											},
											{
												"body": {
													"nativeSrc": "2296:124:8",
													"nodeType": "YulBlock",
													"src": "2296:124:8",
													"statements": [
														{
															"nativeSrc": "2306:26:8",
															"nodeType": "YulAssignment",
															"src": "2306:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2318:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2318:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2314:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2314:3:8"
																},
																"nativeSrc": "2314:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2314:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2306:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2386:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2386:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2399:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2399:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2410:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2410:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2395:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2395:3:8"
																		},
																		"nativeSrc": "2395:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2395:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2342:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2342:43:8"
																},
																"nativeSrc": "2342:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2342:71:8"
															},
															"nativeSrc": "2342:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "2342:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2198:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2268:9:8",
														"nodeType": "YulTypedName",
														"src": "2268:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2280:6:8",
														"nodeType": "YulTypedName",
														"src": "2280:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2291:4:8",
														"nodeType": "YulTypedName",
														"src": "2291:4:8",
														"type": ""
													}
												],
												"src": "2198:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$225(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$225(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$225(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$225_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$225(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$225t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$225_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620023153803806200231583398181016040528101906200003691906200028b565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620002f5565b60405180910390fd5b620000bb816200011a60201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550806008819055508060098190555050505062000310565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200020a82620001df565b9050919050565b5f6200021d82620001fe565b9050919050565b6200022f8162000211565b81146200023a575f80fd5b50565b5f815190506200024d8162000224565b92915050565b5f819050919050565b620002678162000253565b811462000272575f80fd5b50565b5f8151905062000285816200025c565b92915050565b5f805f60608486031215620002a557620002a4620001db565b5b5f620002b4868287016200023d565b9350506020620002c78682870162000275565b9250506040620002da8682870162000275565b9150509250925092565b620002ef81620001fe565b82525050565b5f6020820190506200030a5f830184620002e4565b92915050565b611ff7806200031e5f395ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063715018a6116100c1578063a85adeab1161007a578063a85adeab1461037f578063ca1d209d1461039d578063e2bbb158146103b9578063e4c75c27146103d5578063e6fd48bc14610405578063f2fde38b1461042357610156565b8063715018a6146102ba578063785e9e86146102c45780638da5cb5b146102e25780638f10369a1461030057806393f1a40b1461031e578063a23831061461034f57610156565b8063441a3e7011610113578063441a3e701461022257806351eb05a61461023e5780635312ea8e1461025a5780635c76ca2d14610276578063630b5ba11461029457806364482f791461029e57610156565b8063081e3eda1461015a5780630e15561a146101785780631526fe271461019657806317caf6f1146101ca5780631eaaa045146101e85780633f90916a14610204575b5f80fd5b61016261043f565b60405161016f91906118f4565b60405180910390f35b61018061044b565b60405161018d91906118f4565b60405180910390f35b6101b060048036038101906101ab919061193b565b610451565b6040516101c19594939291906119e0565b60405180910390f35b6101d26104b1565b6040516101df91906118f4565b60405180910390f35b61020260048036038101906101fd9190611ab2565b6104b7565b005b61020c6105dd565b60405161021991906118f4565b60405180910390f35b61023c60048036038101906102379190611b02565b61064e565b005b6102586004803603810190610253919061193b565b610863565b005b610274600480360381019061026f919061193b565b61096d565b005b61027e610b09565b60405161028b91906118f4565b60405180910390f35b61029c610b0f565b005b6102b860048036038101906102b39190611b40565b610b3a565b005b6102c2610be1565b005b6102cc610bf4565b6040516102d99190611b90565b60405180910390f35b6102ea610c19565b6040516102f79190611bb8565b60405180910390f35b610308610c40565b60405161031591906118f4565b60405180910390f35b61033860048036038101906103339190611bfb565b610c46565b604051610346929190611c39565b60405180910390f35b61036960048036038101906103649190611bfb565b610c71565b60405161037691906118f4565b60405180910390f35b610387610cce565b60405161039491906118f4565b60405180910390f35b6103b760048036038101906103b2919061193b565b610cd4565b005b6103d360048036038101906103ce9190611b02565b610dbb565b005b6103ef60048036038101906103ea9190611bfb565b610f98565b6040516103fc91906118f4565b60405180910390f35b61040d611133565b60405161041a91906118f4565b60405180910390f35b61043d60048036038101906104389190611c60565b611139565b005b5f600580549050905090565b60045481565b60058181548110610460575f80fd5b905f5260205f2090600502015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b60075481565b6104bf6111bd565b80156104ce576104cd610b0f565b5b5f60085442116104e0576008546104e2565b425b90506104f98460075461124490919063ffffffff16565b905060075f82919050555060056040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020015f81526020015f815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040155505050505050565b5f60085442116105ef575f905061064b565b5f600954421061060157600954610603565b425b90505f610628600854836106179190611cb8565b60035461127090919063ffffffff16565b9150505f610641600254836112be90919063ffffffff16565b9150508093505050505b90565b5f6005838154811061066357610662611ceb565b5b905f5260205f20906005020190505f60065f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f01541015610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611d98565b60405180910390fd5b61070f84610863565b5f61072a8360030154835f015461127090919063ffffffff16565b9150505f6107458360010154836112be90919063ffffffff16565b91505061075233826112e4565b61076885845f01546112be90919063ffffffff16565b9050835f015f82919050555061078e8460030154845f015461127090919063ffffffff16565b9050836001015f8291905055506107e83386865f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661139d9092919063ffffffff16565b6107ff8585600401546112be90919063ffffffff16565b9050846004015f829190505550853373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688760405161085391906118f4565b60405180910390a3505050505050565b5f6005828154811061087857610877611ceb565b5b905f5260205f20906005020190505f60095442106108985760095461089a565b425b9050816002015481116108ae57505061096a565b5f826004015490505f81036108ce5781836002018190555050505061096a565b5f6108e68460020154846112be90919063ffffffff16565b9150505f6108ff6003548361127090919063ffffffff16565b91505061091d85600101546007548361141c9092919063ffffffff16565b90505f610933848361151b90919063ffffffff16565b91505061094d81876003015461124490919063ffffffff16565b9050866003015f8291905055504286600201819055505050505050505b50565b5f6005828154811061098257610981611ceb565b5b905f5260205f20906005020190505f60065f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610a2f33825f0154845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661139d9092919063ffffffff16565b610a49815f015483600401546112be90919063ffffffff16565b9050826004015f829190505550823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595835f0154604051610aa091906118f4565b60405180910390a360065f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f90555050505050565b60025481565b5f60058054905090505f5b81811015610b3657610b2b81610863565b806001019050610b1a565b5050565b610b426111bd565b8015610b5157610b50610b0f565b5b610b8960058481548110610b6857610b67611ceb565b5b905f5260205f209060050201600101546007546112be90919063ffffffff16565b905060075f829190505550610ba98260075461124490919063ffffffff16565b905060075f8291905055508160058481548110610bc957610bc8611ceb565b5b905f5260205f20906005020160010181905550505050565b610be96111bd565b610bf25f61154e565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6006602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b5f8060065f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f015491505092915050565b60095481565b6009544210610d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0f90611e26565b60405180910390fd5b610d6633308360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661160f909392919063ffffffff16565b5f610d7c6003548361151b90919063ffffffff16565b9150508060095f828254610d909190611e44565b92505081905550610dac8260045461124490919063ffffffff16565b905060045f8291905055505050565b5f60058381548110610dd057610dcf611ceb565b5b905f5260205f20906005020190505f60065f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610e3684610863565b5f815f01541115610e87575f610e5c8360030154835f015461127090919063ffffffff16565b9150505f610e778360010154836112be90919063ffffffff16565b915050610e8433826112e4565b50505b610ed6333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661160f909392919063ffffffff16565b610eed83836004015461124490919063ffffffff16565b9050826004015f829190505550610f1083825f015461124490919063ffffffff16565b9050815f015f829190505550610f368260030154825f015461127090919063ffffffff16565b9050816001015f829190505550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051610f8a91906118f4565b60405180910390a350505050565b5f8060058481548110610fae57610fad611ceb565b5b905f5260205f20906005020190505f60065f8681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f826003015490505f825f015490505f8460040154905084600201544211801561103557505f8114155b156110f1575f600954421061104c5760095461104e565b425b90505f6009548760020154106110665760095461106c565b86600201545b90505f61108282846112be90919063ffffffff16565b9150505f61109b6003548361127090919063ffffffff16565b9150506110b989600101546007548361141c9092919063ffffffff16565b90505f6110cf868361151b90919063ffffffff16565b9150506110e5818961124490919063ffffffff16565b90508098505050505050505b5f611105848461127090919063ffffffff16565b9150505f6111208660010154836112be90919063ffffffff16565b9150508097505050505050505092915050565b60085481565b6111416111bd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111b1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111a89190611bb8565b60405180910390fd5b6111ba8161154e565b50565b6111c5611691565b73ffffffffffffffffffffffffffffffffffffffff166111e3610c19565b73ffffffffffffffffffffffffffffffffffffffff161461124257611206611691565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112399190611bb8565b60405180910390fd5b565b5f805f838501905084811015611260575f809250925050611269565b60018192509250505b9250929050565b5f805f84036112855760015f915091506112b7565b5f83850290508385828161129c5761129b611e77565b5b04146112ae575f8092509250506112b7565b60018192509250505b9250929050565b5f80838311156112d3575f80915091506112dd565b6001838503915091505b9250929050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401611340929190611ea4565b6020604051808303815f875af115801561135c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113809190611edf565b508060025f8282546113929190611e44565b925050819055505050565b611417838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016113d0929190611ea4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611698565b505050565b5f8083850290505f8019858709828110838203039150505f81036114545783828161144a57611449611e77565b5b0492505050611514565b80841161148d576040517f227bc15300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8486880990508281118203915080830392505f855f038616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f805f830361152f575f8091509150611547565b600183858161154157611540611e77565b5b04915091505b9250929050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61168b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161164493929190611f0a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611698565b50505050565b5f33905090565b5f6116c2828473ffffffffffffffffffffffffffffffffffffffff1661172d90919063ffffffff16565b90505f8151141580156116e65750808060200190518101906116e49190611edf565b155b1561172857826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161171f9190611bb8565b60405180910390fd5b505050565b606061173a83835f611742565b905092915050565b60608147101561178957306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016117809190611bb8565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516117b19190611fab565b5f6040518083038185875af1925050503d805f81146117eb576040519150601f19603f3d011682016040523d82523d5f602084013e6117f0565b606091505b509150915061180086838361180b565b925050509392505050565b6060826118205761181b82611898565b611890565b5f825114801561184657505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561188857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161187f9190611bb8565b60405180910390fd5b819050611891565b5b9392505050565b5f815111156118aa5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b6118ee816118dc565b82525050565b5f6020820190506119075f8301846118e5565b92915050565b5f80fd5b61191a816118dc565b8114611924575f80fd5b50565b5f8135905061193581611911565b92915050565b5f602082840312156119505761194f61190d565b5b5f61195d84828501611927565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6119a86119a361199e84611966565b611985565b611966565b9050919050565b5f6119b98261198e565b9050919050565b5f6119ca826119af565b9050919050565b6119da816119c0565b82525050565b5f60a0820190506119f35f8301886119d1565b611a0060208301876118e5565b611a0d60408301866118e5565b611a1a60608301856118e5565b611a2760808301846118e5565b9695505050505050565b5f611a3b82611966565b9050919050565b5f611a4c82611a31565b9050919050565b611a5c81611a42565b8114611a66575f80fd5b50565b5f81359050611a7781611a53565b92915050565b5f8115159050919050565b611a9181611a7d565b8114611a9b575f80fd5b50565b5f81359050611aac81611a88565b92915050565b5f805f60608486031215611ac957611ac861190d565b5b5f611ad686828701611927565b9350506020611ae786828701611a69565b9250506040611af886828701611a9e565b9150509250925092565b5f8060408385031215611b1857611b1761190d565b5b5f611b2585828601611927565b9250506020611b3685828601611927565b9150509250929050565b5f805f60608486031215611b5757611b5661190d565b5b5f611b6486828701611927565b9350506020611b7586828701611927565b9250506040611b8686828701611a9e565b9150509250925092565b5f602082019050611ba35f8301846119d1565b92915050565b611bb281611a31565b82525050565b5f602082019050611bcb5f830184611ba9565b92915050565b611bda81611a31565b8114611be4575f80fd5b50565b5f81359050611bf581611bd1565b92915050565b5f8060408385031215611c1157611c1061190d565b5b5f611c1e85828601611927565b9250506020611c2f85828601611be7565b9150509250929050565b5f604082019050611c4c5f8301856118e5565b611c5960208301846118e5565b9392505050565b5f60208284031215611c7557611c7461190d565b5b5f611c8284828501611be7565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611cc2826118dc565b9150611ccd836118dc565b9250828203905081811115611ce557611ce4611c8b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f77697468647261773a2063616e2774207769746864726177206d6f72652074685f8201527f616e206465706f73697400000000000000000000000000000000000000000000602082015250565b5f611d82602a83611d18565b9150611d8d82611d28565b604082019050919050565b5f6020820190508181035f830152611daf81611d76565b9050919050565b7f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f735f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611e10602283611d18565b9150611e1b82611db6565b604082019050919050565b5f6020820190508181035f830152611e3d81611e04565b9050919050565b5f611e4e826118dc565b9150611e59836118dc565b9250828201905080821115611e7157611e70611c8b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050611eb75f830185611ba9565b611ec460208301846118e5565b9392505050565b5f81519050611ed981611a88565b92915050565b5f60208284031215611ef457611ef361190d565b5b5f611f0184828501611ecb565b91505092915050565b5f606082019050611f1d5f830186611ba9565b611f2a6020830185611ba9565b611f3760408301846118e5565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b83811015611f70578082015181840152602081019050611f55565b5f8484015250505050565b5f611f8582611f3f565b611f8f8185611f49565b9350611f9f818560208601611f53565b80840191505092915050565b5f611fb68284611f7b565b91508190509291505056fea26469706673582212203852f52e7b5a406fec373a239aa07d0230e1a99afacb40ddd9a7e2ed48e9882564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2315 CODESIZE SUB DUP1 PUSH3 0x2315 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x28B JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x11A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x310 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x20A DUP3 PUSH3 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x21D DUP3 PUSH3 0x1FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x22F DUP2 PUSH3 0x211 JUMP JUMPDEST DUP2 EQ PUSH3 0x23A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x24D DUP2 PUSH3 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x267 DUP2 PUSH3 0x253 JUMP JUMPDEST DUP2 EQ PUSH3 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x285 DUP2 PUSH3 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2A5 JUMPI PUSH3 0x2A4 PUSH3 0x1DB JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2B4 DUP7 DUP3 DUP8 ADD PUSH3 0x23D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2C7 DUP7 DUP3 DUP8 ADD PUSH3 0x275 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2DA DUP7 DUP3 DUP8 ADD PUSH3 0x275 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x2EF DUP2 PUSH3 0x1FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x30A PUSH0 DUP4 ADD DUP5 PUSH3 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FF7 DUP1 PUSH3 0x31E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA85ADEAB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x423 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x34F JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x29E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0x204 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0xB0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH2 0xBE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0xCD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x1139 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x11BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH2 0x4CD PUSH2 0xB0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x4E0 JUMPI PUSH1 0x8 SLOAD PUSH2 0x4E2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH2 0x4F9 DUP5 PUSH1 0x7 SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x5EF JUMPI PUSH0 SWAP1 POP PUSH2 0x64B JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x601 JUMPI PUSH1 0x9 SLOAD PUSH2 0x603 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x628 PUSH1 0x8 SLOAD DUP4 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x641 PUSH1 0x2 SLOAD DUP4 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x663 JUMPI PUSH2 0x662 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70F DUP5 PUSH2 0x863 JUMP JUMPDEST PUSH0 PUSH2 0x72A DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x745 DUP4 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x752 CALLER DUP3 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0x768 DUP6 DUP5 PUSH0 ADD SLOAD PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH0 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0x78E DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0x7E8 CALLER DUP7 DUP7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x139D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7FF DUP6 DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x4 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x878 JUMPI PUSH2 0x877 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x898 JUMPI PUSH1 0x9 SLOAD PUSH2 0x89A JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 GT PUSH2 0x8AE JUMPI POP POP PUSH2 0x96A JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x8CE JUMPI DUP2 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x96A JUMP JUMPDEST PUSH0 PUSH2 0x8E6 DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x8FF PUSH1 0x3 SLOAD DUP4 PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91D DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0x141C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x933 DUP5 DUP4 PUSH2 0x151B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x94D DUP2 DUP8 PUSH1 0x3 ADD SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x3 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP TIMESTAMP DUP7 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x982 JUMPI PUSH2 0x981 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xA2F CALLER DUP3 PUSH0 ADD SLOAD DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x139D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA49 DUP2 PUSH0 ADD SLOAD DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x4 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB36 JUMPI PUSH2 0xB2B DUP2 PUSH2 0x863 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xB1A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB42 PUSH2 0x11BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB51 JUMPI PUSH2 0xB50 PUSH2 0xB0F JUMP JUMPDEST JUMPDEST PUSH2 0xB89 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0xBA9 DUP3 PUSH1 0x7 SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xBC9 JUMPI PUSH2 0xBC8 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xBE9 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0xBF2 PUSH0 PUSH2 0x154E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0F SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD66 CALLER ADDRESS DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH2 0xD7C PUSH1 0x3 SLOAD DUP4 PUSH2 0x151B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD90 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDAC DUP3 PUSH1 0x4 SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDD0 JUMPI PUSH2 0xDCF PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xE36 DUP5 PUSH2 0x863 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xE87 JUMPI PUSH0 PUSH2 0xE5C DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0xE77 DUP4 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE84 CALLER DUP3 PUSH2 0x12E4 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xED6 CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEED DUP4 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x4 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0xF10 DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0xF36 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFAE JUMPI PUSH2 0xFAD PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP5 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP5 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1035 JUMPI POP PUSH0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x10F1 JUMPI PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x104C JUMPI PUSH1 0x9 SLOAD PUSH2 0x104E JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 SLOAD DUP8 PUSH1 0x2 ADD SLOAD LT PUSH2 0x1066 JUMPI PUSH1 0x9 SLOAD PUSH2 0x106C JUMP JUMPDEST DUP7 PUSH1 0x2 ADD SLOAD JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1082 DUP3 DUP5 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x109B PUSH1 0x3 SLOAD DUP4 PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B9 DUP10 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0x141C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10CF DUP7 DUP4 PUSH2 0x151B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E5 DUP2 DUP10 PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP9 POP POP POP POP POP POP POP JUMPDEST PUSH0 PUSH2 0x1105 DUP5 DUP5 PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x1120 DUP7 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP8 POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x11BD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A8 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11BA DUP2 PUSH2 0x154E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11C5 PUSH2 0x1691 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11E3 PUSH2 0xC19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1242 JUMPI PUSH2 0x1206 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP6 ADD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x1260 JUMPI PUSH0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 SUB PUSH2 0x1285 JUMPI PUSH1 0x1 PUSH0 SWAP2 POP SWAP2 POP PUSH2 0x12B7 JUMP JUMPDEST PUSH0 DUP4 DUP6 MUL SWAP1 POP DUP4 DUP6 DUP3 DUP2 PUSH2 0x129C JUMPI PUSH2 0x129B PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV EQ PUSH2 0x12AE JUMPI PUSH0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x12D3 JUMPI PUSH0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 SUB SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1340 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x135C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1380 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1392 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1417 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13D0 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1698 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP6 MUL SWAP1 POP PUSH0 DUP1 NOT DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH0 DUP2 SUB PUSH2 0x1454 JUMPI DUP4 DUP3 DUP2 PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1514 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x148D JUMPI PUSH1 0x40 MLOAD PUSH32 0x227BC15300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH0 DUP6 PUSH0 SUB DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SUB PUSH2 0x152F JUMPI PUSH0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x1541 JUMPI PUSH2 0x1540 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x168B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1644 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1698 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x16C2 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x16E6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x16E4 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1728 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171F SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x173A DUP4 DUP4 PUSH0 PUSH2 0x1742 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1789 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1780 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x17B1 SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1800 DUP7 DUP4 DUP4 PUSH2 0x180B JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1820 JUMPI PUSH2 0x181B DUP3 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1846 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1888 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187F SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1891 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x18AA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1907 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x191A DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1924 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1935 DUP2 PUSH2 0x1911 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1950 JUMPI PUSH2 0x194F PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195D DUP5 DUP3 DUP6 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A8 PUSH2 0x19A3 PUSH2 0x199E DUP5 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x1966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19B9 DUP3 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19CA DUP3 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DA DUP2 PUSH2 0x19C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19F3 PUSH0 DUP4 ADD DUP9 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x1A00 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1A0D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1A1A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1A27 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3B DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C DUP3 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x1A42 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A77 DUP2 PUSH2 0x1A53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A7D JUMP JUMPDEST DUP2 EQ PUSH2 0x1A9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AAC DUP2 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AC9 JUMPI PUSH2 0x1AC8 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD6 DUP7 DUP3 DUP8 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AE7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A69 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AF8 DUP7 DUP3 DUP8 ADD PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B18 JUMPI PUSH2 0x1B17 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B25 DUP6 DUP3 DUP7 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B36 DUP6 DUP3 DUP7 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B57 JUMPI PUSH2 0x1B56 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B64 DUP7 DUP3 DUP8 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B75 DUP7 DUP3 DUP8 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B86 DUP7 DUP3 DUP8 ADD PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA3 PUSH0 DUP4 ADD DUP5 PUSH2 0x19D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB2 DUP2 PUSH2 0x1A31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCB PUSH0 DUP4 ADD DUP5 PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BDA DUP2 PUSH2 0x1A31 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF5 DUP2 PUSH2 0x1BD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C11 JUMPI PUSH2 0x1C10 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C1E DUP6 DUP3 DUP7 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C2F DUP6 DUP3 DUP7 ADD PUSH2 0x1BE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1C59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C82 DUP5 DUP3 DUP6 ADD PUSH2 0x1BE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CC2 DUP3 PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP4 PUSH2 0x18DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x1C8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E206465706F73697400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D82 PUSH1 0x2A DUP4 PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8D DUP3 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DAF DUP2 PUSH2 0x1D76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E10 PUSH1 0x22 DUP4 PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1B DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E3D DUP2 PUSH2 0x1E04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E4E DUP3 PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E59 DUP4 PUSH2 0x18DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x1C8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EB7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1EC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F01 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F1D PUSH0 DUP4 ADD DUP7 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1F2A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1F37 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F70 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F55 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F85 DUP3 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x1F8F DUP2 DUP6 PUSH2 0x1F49 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F9F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F53 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB6 DUP3 DUP5 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE MSTORE CREATE2 0x2E PUSH28 0x5A406FEC373A239AA07D0230E1A99AFACB40DDD9A7E2ED48E9882564 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "406:11013:7:-:0;;;2179:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2296:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2326:6:7::1;2318:5;;:14;;;;;;;;;;;;;;;;;;2360:16;2342:15;:34;;;;2403:15;2386:14;:32;;;;2443:15;2428:12;:30;;;;2179:286:::0;;;406:11013;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:77::-;1054:7;1083:5;1072:16;;1017:77;;;:::o;1100:122::-;1173:24;1191:5;1173:24;:::i;:::-;1166:5;1163:35;1153:63;;1212:1;1209;1202:12;1153:63;1100:122;:::o;1228:143::-;1285:5;1316:6;1310:13;1301:22;;1332:33;1359:5;1332:33;:::i;:::-;1228:143;;;;:::o;1377:691::-;1479:6;1487;1495;1544:2;1532:9;1523:7;1519:23;1515:32;1512:119;;;1550:79;;:::i;:::-;1512:119;1670:1;1695:78;1765:7;1756:6;1745:9;1741:22;1695:78;:::i;:::-;1685:88;;1641:142;1822:2;1848:64;1904:7;1895:6;1884:9;1880:22;1848:64;:::i;:::-;1838:74;;1793:129;1961:2;1987:64;2043:7;2034:6;2023:9;2019:22;1987:64;:::i;:::-;1977:74;;1932:129;1377:691;;;;;:::o;2074:118::-;2161:24;2179:5;2161:24;:::i;:::-;2156:3;2149:37;2074:118;;:::o;2198:222::-;2291:4;2329:2;2318:9;2314:18;2306:26;;2342:71;2410:1;2399:9;2395:17;2386:6;2342:71;:::i;:::-;2198:222;;;;:::o;406:11013:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_501": {
									"entryPoint": 5784,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4541,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": 5777,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_803": {
									"entryPoint": 6296,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5454,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2108": {
									"entryPoint": 1207,
									"id": 2108,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@deposit_2584": {
									"entryPoint": 3515,
									"id": 2584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposited_2174": {
									"entryPoint": 3185,
									"id": 2174,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2763": {
									"entryPoint": 2413,
									"id": 2763,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@endTimestamp_1946": {
									"entryPoint": 3278,
									"id": 1946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Transfer_2782": {
									"entryPoint": 4836,
									"id": 2782,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@erc20_1923": {
									"entryPoint": 3060,
									"id": 1923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_671": {
									"entryPoint": 5954,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_625": {
									"entryPoint": 5933,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@fund_2058": {
									"entryPoint": 3284,
									"id": 2058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@massUpdatePools_2371": {
									"entryPoint": 2831,
									"id": 2371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mulDiv_1222": {
									"entryPoint": 5148,
									"id": 1222,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3097,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paidOut_1925": {
									"entryPoint": 2825,
									"id": 1925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pending_2303": {
									"entryPoint": 3992,
									"id": 2303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_1933": {
									"entryPoint": 1105,
									"id": 1933,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_2010": {
									"entryPoint": 1087,
									"id": 2010,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3041,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerSecond_1927": {
									"entryPoint": 3136,
									"id": 1927,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 5647,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_311": {
									"entryPoint": 5021,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@set_2152": {
									"entryPoint": 2874,
									"id": 2152,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startTimestamp_1944": {
									"entryPoint": 4403,
									"id": 1944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAllocPoint_1942": {
									"entryPoint": 1201,
									"id": 1942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalPending_2346": {
									"entryPoint": 1501,
									"id": 2346,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_1929": {
									"entryPoint": 1099,
									"id": 1929,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4409,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tryAdd_877": {
									"entryPoint": 4676,
									"id": 877,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryDiv_975": {
									"entryPoint": 5403,
									"id": 975,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryMul_947": {
									"entryPoint": 4720,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@trySub_905": {
									"entryPoint": 4798,
									"id": 905,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@updatePool_2468": {
									"entryPoint": 2147,
									"id": 2468,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_1940": {
									"entryPoint": 3142,
									"id": 1940,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_763": {
									"entryPoint": 6155,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_2698": {
									"entryPoint": 1614,
									"id": 2698,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$225": {
									"entryPoint": 6761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$225t_bool": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7946,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7844,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 7056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$225": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 6592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$225": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13189:8",
										"nodeType": "YulBlock",
										"src": "0:13189:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:8",
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nativeSrc": "62:16:8",
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:8",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nativeSrc": "155:53:8",
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nativeSrc": "177:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nativeSrc": "165:37:8",
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nativeSrc": "165:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:8",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:8",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nativeSrc": "312:124:8",
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nativeSrc": "322:26:8",
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:8",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nativeSrc": "330:18:8",
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:8",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nativeSrc": "411:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nativeSrc": "358:71:8",
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nativeSrc": "358:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:8",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:8",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:8",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nativeSrc": "482:35:8",
													"nodeType": "YulBlock",
													"src": "482:35:8",
													"statements": [
														{
															"nativeSrc": "492:19:8",
															"nodeType": "YulAssignment",
															"src": "492:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:8",
																		"nodeType": "YulLiteral",
																		"src": "508:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:8"
																},
																"nativeSrc": "502:9:8",
																"nodeType": "YulFunctionCall",
																"src": "502:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:8",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"src": "442:75:8"
											},
											{
												"body": {
													"nativeSrc": "612:28:8",
													"nodeType": "YulBlock",
													"src": "612:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:8",
																		"nodeType": "YulLiteral",
																		"src": "629:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:8",
																		"nodeType": "YulLiteral",
																		"src": "632:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:8"
																},
																"nativeSrc": "622:12:8",
																"nodeType": "YulFunctionCall",
																"src": "622:12:8"
															},
															"nativeSrc": "622:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:8"
											},
											{
												"body": {
													"nativeSrc": "735:28:8",
													"nodeType": "YulBlock",
													"src": "735:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:8",
																		"nodeType": "YulLiteral",
																		"src": "752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:8",
																		"nodeType": "YulLiteral",
																		"src": "755:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:8"
																},
																"nativeSrc": "745:12:8",
																"nodeType": "YulFunctionCall",
																"src": "745:12:8"
															},
															"nativeSrc": "745:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:8"
											},
											{
												"body": {
													"nativeSrc": "812:79:8",
													"nodeType": "YulBlock",
													"src": "812:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:8",
																"nodeType": "YulBlock",
																"src": "869:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:8",
																					"nodeType": "YulLiteral",
																					"src": "878:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:8",
																					"nodeType": "YulLiteral",
																					"src": "881:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:8"
																			},
																			"nativeSrc": "871:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:8"
																		},
																		"nativeSrc": "871:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:8"
																				},
																				"nativeSrc": "842:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:8"
																		},
																		"nativeSrc": "832:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:8"
																},
																"nativeSrc": "825:43:8",
																"nodeType": "YulFunctionCall",
																"src": "825:43:8"
															},
															"nativeSrc": "822:63:8",
															"nodeType": "YulIf",
															"src": "822:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:8",
														"nodeType": "YulTypedName",
														"src": "805:5:8",
														"type": ""
													}
												],
												"src": "769:122:8"
											},
											{
												"body": {
													"nativeSrc": "949:87:8",
													"nodeType": "YulBlock",
													"src": "949:87:8",
													"statements": [
														{
															"nativeSrc": "959:29:8",
															"nodeType": "YulAssignment",
															"src": "959:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:8"
																},
																"nativeSrc": "968:20:8",
																"nodeType": "YulFunctionCall",
																"src": "968:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:8"
																},
																"nativeSrc": "997:33:8",
																"nodeType": "YulFunctionCall",
																"src": "997:33:8"
															},
															"nativeSrc": "997:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:8",
														"nodeType": "YulTypedName",
														"src": "927:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:8",
														"nodeType": "YulTypedName",
														"src": "935:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:8",
														"nodeType": "YulTypedName",
														"src": "943:5:8",
														"type": ""
													}
												],
												"src": "897:139:8"
											},
											{
												"body": {
													"nativeSrc": "1108:263:8",
													"nodeType": "YulBlock",
													"src": "1108:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:8",
																"nodeType": "YulBlock",
																"src": "1154:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:8"
																			},
																			"nativeSrc": "1156:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:8"
																		},
																		"nativeSrc": "1156:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:8"
																		},
																		"nativeSrc": "1125:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:8"
																},
																"nativeSrc": "1121:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:8"
															},
															"nativeSrc": "1118:119:8",
															"nodeType": "YulIf",
															"src": "1118:119:8"
														},
														{
															"nativeSrc": "1247:117:8",
															"nodeType": "YulBlock",
															"src": "1247:117:8",
															"statements": [
																{
																	"nativeSrc": "1262:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:8"
																				},
																				"nativeSrc": "1322:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:8"
																		},
																		"nativeSrc": "1301:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:8",
														"nodeType": "YulTypedName",
														"src": "1078:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:8",
														"nodeType": "YulTypedName",
														"src": "1089:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:8",
														"nodeType": "YulTypedName",
														"src": "1101:6:8",
														"type": ""
													}
												],
												"src": "1042:329:8"
											},
											{
												"body": {
													"nativeSrc": "1422:81:8",
													"nodeType": "YulBlock",
													"src": "1422:81:8",
													"statements": [
														{
															"nativeSrc": "1432:65:8",
															"nodeType": "YulAssignment",
															"src": "1432:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:8"
																},
																"nativeSrc": "1443:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:8",
														"nodeType": "YulTypedName",
														"src": "1404:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:8",
														"nodeType": "YulTypedName",
														"src": "1414:7:8",
														"type": ""
													}
												],
												"src": "1377:126:8"
											},
											{
												"body": {
													"nativeSrc": "1541:28:8",
													"nodeType": "YulBlock",
													"src": "1541:28:8",
													"statements": [
														{
															"nativeSrc": "1551:12:8",
															"nodeType": "YulAssignment",
															"src": "1551:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1558:5:8",
																"nodeType": "YulIdentifier",
																"src": "1558:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1551:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1509:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1527:5:8",
														"nodeType": "YulTypedName",
														"src": "1527:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1537:3:8",
														"nodeType": "YulTypedName",
														"src": "1537:3:8",
														"type": ""
													}
												],
												"src": "1509:60:8"
											},
											{
												"body": {
													"nativeSrc": "1635:82:8",
													"nodeType": "YulBlock",
													"src": "1635:82:8",
													"statements": [
														{
															"nativeSrc": "1645:66:8",
															"nodeType": "YulAssignment",
															"src": "1645:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1703:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1685:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:8"
																				},
																				"nativeSrc": "1685:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1676:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:8"
																		},
																		"nativeSrc": "1676:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1658:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:8"
																},
																"nativeSrc": "1658:53:8",
																"nodeType": "YulFunctionCall",
																"src": "1658:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1645:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1575:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1615:5:8",
														"nodeType": "YulTypedName",
														"src": "1615:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1625:9:8",
														"nodeType": "YulTypedName",
														"src": "1625:9:8",
														"type": ""
													}
												],
												"src": "1575:142:8"
											},
											{
												"body": {
													"nativeSrc": "1783:66:8",
													"nodeType": "YulBlock",
													"src": "1783:66:8",
													"statements": [
														{
															"nativeSrc": "1793:50:8",
															"nodeType": "YulAssignment",
															"src": "1793:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1837:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1806:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:8"
																},
																"nativeSrc": "1806:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1806:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1793:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1723:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1763:5:8",
														"nodeType": "YulTypedName",
														"src": "1763:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1773:9:8",
														"nodeType": "YulTypedName",
														"src": "1773:9:8",
														"type": ""
													}
												],
												"src": "1723:126:8"
											},
											{
												"body": {
													"nativeSrc": "1929:66:8",
													"nodeType": "YulBlock",
													"src": "1929:66:8",
													"statements": [
														{
															"nativeSrc": "1939:50:8",
															"nodeType": "YulAssignment",
															"src": "1939:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1983:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1983:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1952:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "1952:30:8"
																},
																"nativeSrc": "1952:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1952:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1939:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1939:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "1855:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1909:5:8",
														"nodeType": "YulTypedName",
														"src": "1909:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1919:9:8",
														"nodeType": "YulTypedName",
														"src": "1919:9:8",
														"type": ""
													}
												],
												"src": "1855:140:8"
											},
											{
												"body": {
													"nativeSrc": "2080:80:8",
													"nodeType": "YulBlock",
													"src": "2080:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2097:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2147:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2147:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "2102:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "2102:44:8"
																		},
																		"nativeSrc": "2102:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																},
																"nativeSrc": "2090:64:8",
																"nodeType": "YulFunctionCall",
																"src": "2090:64:8"
															},
															"nativeSrc": "2090:64:8",
															"nodeType": "YulExpressionStatement",
															"src": "2090:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "2001:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2068:5:8",
														"nodeType": "YulTypedName",
														"src": "2068:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2075:3:8",
														"nodeType": "YulTypedName",
														"src": "2075:3:8",
														"type": ""
													}
												],
												"src": "2001:159:8"
											},
											{
												"body": {
													"nativeSrc": "2390:468:8",
													"nodeType": "YulBlock",
													"src": "2390:468:8",
													"statements": [
														{
															"nativeSrc": "2400:27:8",
															"nodeType": "YulAssignment",
															"src": "2400:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2412:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2423:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2408:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:8"
																},
																"nativeSrc": "2408:19:8",
																"nodeType": "YulFunctionCall",
																"src": "2408:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2400:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2495:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2495:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2508:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2508:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2519:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2519:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2504:3:8"
																		},
																		"nativeSrc": "2504:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2504:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "2437:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "2437:57:8"
																},
																"nativeSrc": "2437:85:8",
																"nodeType": "YulFunctionCall",
																"src": "2437:85:8"
															},
															"nativeSrc": "2437:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "2437:85:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2576:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2589:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2589:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2600:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2600:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2585:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2585:3:8"
																		},
																		"nativeSrc": "2585:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2585:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2532:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2532:43:8"
																},
																"nativeSrc": "2532:72:8",
																"nodeType": "YulFunctionCall",
																"src": "2532:72:8"
															},
															"nativeSrc": "2532:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "2532:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2658:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2658:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2671:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2671:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2682:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2682:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2667:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2667:3:8"
																		},
																		"nativeSrc": "2667:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2667:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2614:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2614:43:8"
																},
																"nativeSrc": "2614:72:8",
																"nodeType": "YulFunctionCall",
																"src": "2614:72:8"
															},
															"nativeSrc": "2614:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "2614:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2740:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2740:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2753:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2764:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2764:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2749:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2749:3:8"
																		},
																		"nativeSrc": "2749:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2749:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2696:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2696:43:8"
																},
																"nativeSrc": "2696:72:8",
																"nodeType": "YulFunctionCall",
																"src": "2696:72:8"
															},
															"nativeSrc": "2696:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "2696:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "2822:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2822:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2835:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2835:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2846:3:8",
																				"nodeType": "YulLiteral",
																				"src": "2846:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2831:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2831:3:8"
																		},
																		"nativeSrc": "2831:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2831:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2778:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2778:43:8"
																},
																"nativeSrc": "2778:73:8",
																"nodeType": "YulFunctionCall",
																"src": "2778:73:8"
															},
															"nativeSrc": "2778:73:8",
															"nodeType": "YulExpressionStatement",
															"src": "2778:73:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2166:692:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2330:9:8",
														"nodeType": "YulTypedName",
														"src": "2330:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2342:6:8",
														"nodeType": "YulTypedName",
														"src": "2342:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2350:6:8",
														"nodeType": "YulTypedName",
														"src": "2350:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2358:6:8",
														"nodeType": "YulTypedName",
														"src": "2358:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2366:6:8",
														"nodeType": "YulTypedName",
														"src": "2366:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2374:6:8",
														"nodeType": "YulTypedName",
														"src": "2374:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2385:4:8",
														"nodeType": "YulTypedName",
														"src": "2385:4:8",
														"type": ""
													}
												],
												"src": "2166:692:8"
											},
											{
												"body": {
													"nativeSrc": "2909:51:8",
													"nodeType": "YulBlock",
													"src": "2909:51:8",
													"statements": [
														{
															"nativeSrc": "2919:35:8",
															"nodeType": "YulAssignment",
															"src": "2919:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2948:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2948:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2930:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2930:17:8"
																},
																"nativeSrc": "2930:24:8",
																"nodeType": "YulFunctionCall",
																"src": "2930:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2919:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2919:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2864:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2891:5:8",
														"nodeType": "YulTypedName",
														"src": "2891:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2901:7:8",
														"nodeType": "YulTypedName",
														"src": "2901:7:8",
														"type": ""
													}
												],
												"src": "2864:96:8"
											},
											{
												"body": {
													"nativeSrc": "3025:51:8",
													"nodeType": "YulBlock",
													"src": "3025:51:8",
													"statements": [
														{
															"nativeSrc": "3035:35:8",
															"nodeType": "YulAssignment",
															"src": "3035:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3064:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3064:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "3046:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3046:17:8"
																},
																"nativeSrc": "3046:24:8",
																"nodeType": "YulFunctionCall",
																"src": "3046:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3035:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3035:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$225",
												"nativeSrc": "2966:110:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3007:5:8",
														"nodeType": "YulTypedName",
														"src": "3007:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3017:7:8",
														"nodeType": "YulTypedName",
														"src": "3017:7:8",
														"type": ""
													}
												],
												"src": "2966:110:8"
											},
											{
												"body": {
													"nativeSrc": "3139:93:8",
													"nodeType": "YulBlock",
													"src": "3139:93:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3210:16:8",
																"nodeType": "YulBlock",
																"src": "3210:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3219:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3219:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3222:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3222:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3212:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:8"
																			},
																			"nativeSrc": "3212:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3212:12:8"
																		},
																		"nativeSrc": "3212:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3212:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3162:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3162:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3201:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3201:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$225",
																					"nativeSrc": "3169:31:8",
																					"nodeType": "YulIdentifier",
																					"src": "3169:31:8"
																				},
																				"nativeSrc": "3169:38:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3169:38:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3159:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3159:2:8"
																		},
																		"nativeSrc": "3159:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3159:49:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3152:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:8"
																},
																"nativeSrc": "3152:57:8",
																"nodeType": "YulFunctionCall",
																"src": "3152:57:8"
															},
															"nativeSrc": "3149:77:8",
															"nodeType": "YulIf",
															"src": "3149:77:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$225",
												"nativeSrc": "3082:150:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3132:5:8",
														"nodeType": "YulTypedName",
														"src": "3132:5:8",
														"type": ""
													}
												],
												"src": "3082:150:8"
											},
											{
												"body": {
													"nativeSrc": "3304:101:8",
													"nodeType": "YulBlock",
													"src": "3304:101:8",
													"statements": [
														{
															"nativeSrc": "3314:29:8",
															"nodeType": "YulAssignment",
															"src": "3314:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3336:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3336:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3323:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3323:12:8"
																},
																"nativeSrc": "3323:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3323:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3314:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3314:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3393:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3393:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$225",
																	"nativeSrc": "3352:40:8",
																	"nodeType": "YulIdentifier",
																	"src": "3352:40:8"
																},
																"nativeSrc": "3352:47:8",
																"nodeType": "YulFunctionCall",
																"src": "3352:47:8"
															},
															"nativeSrc": "3352:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "3352:47:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$225",
												"nativeSrc": "3238:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3282:6:8",
														"nodeType": "YulTypedName",
														"src": "3282:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3290:3:8",
														"nodeType": "YulTypedName",
														"src": "3290:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3298:5:8",
														"nodeType": "YulTypedName",
														"src": "3298:5:8",
														"type": ""
													}
												],
												"src": "3238:167:8"
											},
											{
												"body": {
													"nativeSrc": "3453:48:8",
													"nodeType": "YulBlock",
													"src": "3453:48:8",
													"statements": [
														{
															"nativeSrc": "3463:32:8",
															"nodeType": "YulAssignment",
															"src": "3463:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3488:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3488:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3481:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3481:6:8"
																		},
																		"nativeSrc": "3481:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3474:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:8"
																},
																"nativeSrc": "3474:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3474:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3463:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3463:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3411:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3435:5:8",
														"nodeType": "YulTypedName",
														"src": "3435:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3445:7:8",
														"nodeType": "YulTypedName",
														"src": "3445:7:8",
														"type": ""
													}
												],
												"src": "3411:90:8"
											},
											{
												"body": {
													"nativeSrc": "3547:76:8",
													"nodeType": "YulBlock",
													"src": "3547:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3601:16:8",
																"nodeType": "YulBlock",
																"src": "3601:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3610:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3613:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3613:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3603:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3603:6:8"
																			},
																			"nativeSrc": "3603:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3603:12:8"
																		},
																		"nativeSrc": "3603:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3603:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3570:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3570:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3592:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3592:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3577:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "3577:14:8"
																				},
																				"nativeSrc": "3577:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3577:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3567:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3567:2:8"
																		},
																		"nativeSrc": "3567:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3567:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3560:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3560:6:8"
																},
																"nativeSrc": "3560:40:8",
																"nodeType": "YulFunctionCall",
																"src": "3560:40:8"
															},
															"nativeSrc": "3557:60:8",
															"nodeType": "YulIf",
															"src": "3557:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3507:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3540:5:8",
														"nodeType": "YulTypedName",
														"src": "3540:5:8",
														"type": ""
													}
												],
												"src": "3507:116:8"
											},
											{
												"body": {
													"nativeSrc": "3678:84:8",
													"nodeType": "YulBlock",
													"src": "3678:84:8",
													"statements": [
														{
															"nativeSrc": "3688:29:8",
															"nodeType": "YulAssignment",
															"src": "3688:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3710:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3710:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3697:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3697:12:8"
																},
																"nativeSrc": "3697:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3697:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3688:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3688:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3750:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3750:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3726:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "3726:23:8"
																},
																"nativeSrc": "3726:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3726:30:8"
															},
															"nativeSrc": "3726:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3726:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3629:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3656:6:8",
														"nodeType": "YulTypedName",
														"src": "3656:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3664:3:8",
														"nodeType": "YulTypedName",
														"src": "3664:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3672:5:8",
														"nodeType": "YulTypedName",
														"src": "3672:5:8",
														"type": ""
													}
												],
												"src": "3629:133:8"
											},
											{
												"body": {
													"nativeSrc": "3879:530:8",
													"nodeType": "YulBlock",
													"src": "3879:530:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3925:83:8",
																"nodeType": "YulBlock",
																"src": "3925:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3927:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3927:77:8"
																			},
																			"nativeSrc": "3927:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3927:79:8"
																		},
																		"nativeSrc": "3927:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3927:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3900:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3900:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3909:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3909:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3896:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:8"
																		},
																		"nativeSrc": "3896:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3896:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3921:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3921:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3892:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:3:8"
																},
																"nativeSrc": "3892:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3892:32:8"
															},
															"nativeSrc": "3889:119:8",
															"nodeType": "YulIf",
															"src": "3889:119:8"
														},
														{
															"nativeSrc": "4018:117:8",
															"nodeType": "YulBlock",
															"src": "4018:117:8",
															"statements": [
																{
																	"nativeSrc": "4033:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4033:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4047:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4047:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4037:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4037:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4062:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4062:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4097:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4097:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4108:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4108:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4093:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4093:3:8"
																				},
																				"nativeSrc": "4093:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4093:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4117:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4117:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4072:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4072:20:8"
																		},
																		"nativeSrc": "4072:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4062:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4062:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4145:132:8",
															"nodeType": "YulBlock",
															"src": "4145:132:8",
															"statements": [
																{
																	"nativeSrc": "4160:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4160:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4174:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4174:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4164:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4164:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4190:77:8",
																	"nodeType": "YulAssignment",
																	"src": "4190:77:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4239:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4239:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4250:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4250:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4235:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4235:3:8"
																				},
																				"nativeSrc": "4235:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4235:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4259:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4259:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$225",
																			"nativeSrc": "4200:34:8",
																			"nodeType": "YulIdentifier",
																			"src": "4200:34:8"
																		},
																		"nativeSrc": "4200:67:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:67:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4190:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4190:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4287:115:8",
															"nodeType": "YulBlock",
															"src": "4287:115:8",
															"statements": [
																{
																	"nativeSrc": "4302:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4302:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4316:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4316:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4306:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4306:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4332:60:8",
																	"nodeType": "YulAssignment",
																	"src": "4332:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4364:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4364:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4375:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4375:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4360:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4360:3:8"
																				},
																				"nativeSrc": "4360:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4360:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4384:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4384:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4342:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4342:17:8"
																		},
																		"nativeSrc": "4342:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4342:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4332:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4332:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$225t_bool",
												"nativeSrc": "3768:641:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3833:9:8",
														"nodeType": "YulTypedName",
														"src": "3833:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3844:7:8",
														"nodeType": "YulTypedName",
														"src": "3844:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3856:6:8",
														"nodeType": "YulTypedName",
														"src": "3856:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3864:6:8",
														"nodeType": "YulTypedName",
														"src": "3864:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3872:6:8",
														"nodeType": "YulTypedName",
														"src": "3872:6:8",
														"type": ""
													}
												],
												"src": "3768:641:8"
											},
											{
												"body": {
													"nativeSrc": "4498:391:8",
													"nodeType": "YulBlock",
													"src": "4498:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4544:83:8",
																"nodeType": "YulBlock",
																"src": "4544:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4546:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4546:77:8"
																			},
																			"nativeSrc": "4546:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4546:79:8"
																		},
																		"nativeSrc": "4546:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4546:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4519:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4519:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4528:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4515:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4515:3:8"
																		},
																		"nativeSrc": "4515:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4515:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4540:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4540:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4511:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:8"
																},
																"nativeSrc": "4511:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4511:32:8"
															},
															"nativeSrc": "4508:119:8",
															"nodeType": "YulIf",
															"src": "4508:119:8"
														},
														{
															"nativeSrc": "4637:117:8",
															"nodeType": "YulBlock",
															"src": "4637:117:8",
															"statements": [
																{
																	"nativeSrc": "4652:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4652:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4666:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4666:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4656:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4656:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4681:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4681:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4716:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4716:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4727:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4727:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4712:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4712:3:8"
																				},
																				"nativeSrc": "4712:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4712:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4736:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4736:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4691:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4691:20:8"
																		},
																		"nativeSrc": "4691:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4681:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4681:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4764:118:8",
															"nodeType": "YulBlock",
															"src": "4764:118:8",
															"statements": [
																{
																	"nativeSrc": "4779:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4779:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4793:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4783:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4783:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4809:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4809:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4844:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4844:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4855:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4855:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4840:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4840:3:8"
																				},
																				"nativeSrc": "4840:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4840:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4864:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4864:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4819:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4819:20:8"
																		},
																		"nativeSrc": "4819:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4819:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4809:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4809:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4415:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4460:9:8",
														"nodeType": "YulTypedName",
														"src": "4460:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4471:7:8",
														"nodeType": "YulTypedName",
														"src": "4471:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4483:6:8",
														"nodeType": "YulTypedName",
														"src": "4483:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4491:6:8",
														"nodeType": "YulTypedName",
														"src": "4491:6:8",
														"type": ""
													}
												],
												"src": "4415:474:8"
											},
											{
												"body": {
													"nativeSrc": "4992:516:8",
													"nodeType": "YulBlock",
													"src": "4992:516:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5038:83:8",
																"nodeType": "YulBlock",
																"src": "5038:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5040:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5040:77:8"
																			},
																			"nativeSrc": "5040:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5040:79:8"
																		},
																		"nativeSrc": "5040:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5040:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5013:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5013:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5022:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5022:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5009:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:8"
																		},
																		"nativeSrc": "5009:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5009:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5034:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5034:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5005:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:8"
																},
																"nativeSrc": "5005:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5005:32:8"
															},
															"nativeSrc": "5002:119:8",
															"nodeType": "YulIf",
															"src": "5002:119:8"
														},
														{
															"nativeSrc": "5131:117:8",
															"nodeType": "YulBlock",
															"src": "5131:117:8",
															"statements": [
																{
																	"nativeSrc": "5146:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5146:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5160:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5160:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5150:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5150:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5175:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5175:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5210:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5210:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5221:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5221:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5206:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5206:3:8"
																				},
																				"nativeSrc": "5206:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5206:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5230:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5230:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5185:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5185:20:8"
																		},
																		"nativeSrc": "5185:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5185:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5175:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5175:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5258:118:8",
															"nodeType": "YulBlock",
															"src": "5258:118:8",
															"statements": [
																{
																	"nativeSrc": "5273:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5273:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5287:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5287:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5277:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5277:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5303:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5303:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5338:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5338:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5349:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5349:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5334:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5334:3:8"
																				},
																				"nativeSrc": "5334:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5334:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5358:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5358:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5313:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5313:20:8"
																		},
																		"nativeSrc": "5313:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5313:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5303:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5303:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5386:115:8",
															"nodeType": "YulBlock",
															"src": "5386:115:8",
															"statements": [
																{
																	"nativeSrc": "5401:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5401:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5415:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5405:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5405:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5431:60:8",
																	"nodeType": "YulAssignment",
																	"src": "5431:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5463:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5463:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5474:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5474:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5459:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5459:3:8"
																				},
																				"nativeSrc": "5459:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5459:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5483:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5483:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5441:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5441:17:8"
																		},
																		"nativeSrc": "5441:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5441:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5431:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5431:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nativeSrc": "4895:613:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4946:9:8",
														"nodeType": "YulTypedName",
														"src": "4946:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4957:7:8",
														"nodeType": "YulTypedName",
														"src": "4957:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4969:6:8",
														"nodeType": "YulTypedName",
														"src": "4969:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4977:6:8",
														"nodeType": "YulTypedName",
														"src": "4977:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4985:6:8",
														"nodeType": "YulTypedName",
														"src": "4985:6:8",
														"type": ""
													}
												],
												"src": "4895:613:8"
											},
											{
												"body": {
													"nativeSrc": "5626:138:8",
													"nodeType": "YulBlock",
													"src": "5626:138:8",
													"statements": [
														{
															"nativeSrc": "5636:26:8",
															"nodeType": "YulAssignment",
															"src": "5636:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5648:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5648:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5659:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5659:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5644:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5644:3:8"
																},
																"nativeSrc": "5644:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5644:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5636:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5636:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5730:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5730:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5743:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5743:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5754:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5754:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5739:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5739:3:8"
																		},
																		"nativeSrc": "5739:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5739:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "5672:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "5672:57:8"
																},
																"nativeSrc": "5672:85:8",
																"nodeType": "YulFunctionCall",
																"src": "5672:85:8"
															},
															"nativeSrc": "5672:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "5672:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "5514:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5598:9:8",
														"nodeType": "YulTypedName",
														"src": "5598:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5610:6:8",
														"nodeType": "YulTypedName",
														"src": "5610:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5621:4:8",
														"nodeType": "YulTypedName",
														"src": "5621:4:8",
														"type": ""
													}
												],
												"src": "5514:250:8"
											},
											{
												"body": {
													"nativeSrc": "5835:53:8",
													"nodeType": "YulBlock",
													"src": "5835:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5852:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5852:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5875:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5875:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5857:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5857:17:8"
																		},
																		"nativeSrc": "5857:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5857:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5845:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5845:6:8"
																},
																"nativeSrc": "5845:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5845:37:8"
															},
															"nativeSrc": "5845:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5845:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5770:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5823:5:8",
														"nodeType": "YulTypedName",
														"src": "5823:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5830:3:8",
														"nodeType": "YulTypedName",
														"src": "5830:3:8",
														"type": ""
													}
												],
												"src": "5770:118:8"
											},
											{
												"body": {
													"nativeSrc": "5992:124:8",
													"nodeType": "YulBlock",
													"src": "5992:124:8",
													"statements": [
														{
															"nativeSrc": "6002:26:8",
															"nodeType": "YulAssignment",
															"src": "6002:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6014:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6014:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6025:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6025:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6010:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6010:3:8"
																},
																"nativeSrc": "6010:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6010:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6002:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6002:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6082:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6082:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6095:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6095:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6106:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6106:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6091:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6091:3:8"
																		},
																		"nativeSrc": "6091:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6091:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6038:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6038:43:8"
																},
																"nativeSrc": "6038:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6038:71:8"
															},
															"nativeSrc": "6038:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6038:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5894:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5964:9:8",
														"nodeType": "YulTypedName",
														"src": "5964:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5976:6:8",
														"nodeType": "YulTypedName",
														"src": "5976:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5987:4:8",
														"nodeType": "YulTypedName",
														"src": "5987:4:8",
														"type": ""
													}
												],
												"src": "5894:222:8"
											},
											{
												"body": {
													"nativeSrc": "6165:79:8",
													"nodeType": "YulBlock",
													"src": "6165:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6222:16:8",
																"nodeType": "YulBlock",
																"src": "6222:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6231:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6231:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6234:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6234:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6224:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6224:6:8"
																			},
																			"nativeSrc": "6224:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6224:12:8"
																		},
																		"nativeSrc": "6224:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6224:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6188:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6188:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6213:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6195:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6195:17:8"
																				},
																				"nativeSrc": "6195:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6195:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6185:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6185:2:8"
																		},
																		"nativeSrc": "6185:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6185:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6178:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:8"
																},
																"nativeSrc": "6178:43:8",
																"nodeType": "YulFunctionCall",
																"src": "6178:43:8"
															},
															"nativeSrc": "6175:63:8",
															"nodeType": "YulIf",
															"src": "6175:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6122:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6158:5:8",
														"nodeType": "YulTypedName",
														"src": "6158:5:8",
														"type": ""
													}
												],
												"src": "6122:122:8"
											},
											{
												"body": {
													"nativeSrc": "6302:87:8",
													"nodeType": "YulBlock",
													"src": "6302:87:8",
													"statements": [
														{
															"nativeSrc": "6312:29:8",
															"nodeType": "YulAssignment",
															"src": "6312:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6334:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6334:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6321:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6321:12:8"
																},
																"nativeSrc": "6321:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6321:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6312:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6312:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6377:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6377:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6350:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "6350:26:8"
																},
																"nativeSrc": "6350:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6350:33:8"
															},
															"nativeSrc": "6350:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6350:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "6250:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6280:6:8",
														"nodeType": "YulTypedName",
														"src": "6280:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6288:3:8",
														"nodeType": "YulTypedName",
														"src": "6288:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6296:5:8",
														"nodeType": "YulTypedName",
														"src": "6296:5:8",
														"type": ""
													}
												],
												"src": "6250:139:8"
											},
											{
												"body": {
													"nativeSrc": "6478:391:8",
													"nodeType": "YulBlock",
													"src": "6478:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6524:83:8",
																"nodeType": "YulBlock",
																"src": "6524:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6526:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6526:77:8"
																			},
																			"nativeSrc": "6526:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6526:79:8"
																		},
																		"nativeSrc": "6526:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6526:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6499:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6499:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6508:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6508:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6495:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6495:3:8"
																		},
																		"nativeSrc": "6495:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6495:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6520:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6520:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6491:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6491:3:8"
																},
																"nativeSrc": "6491:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6491:32:8"
															},
															"nativeSrc": "6488:119:8",
															"nodeType": "YulIf",
															"src": "6488:119:8"
														},
														{
															"nativeSrc": "6617:117:8",
															"nodeType": "YulBlock",
															"src": "6617:117:8",
															"statements": [
																{
																	"nativeSrc": "6632:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6632:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6646:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6646:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6636:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6636:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6661:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6661:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6696:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6696:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6707:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6707:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6692:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6692:3:8"
																				},
																				"nativeSrc": "6692:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6692:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6716:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6716:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6671:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6671:20:8"
																		},
																		"nativeSrc": "6671:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6671:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6661:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6661:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6744:118:8",
															"nodeType": "YulBlock",
															"src": "6744:118:8",
															"statements": [
																{
																	"nativeSrc": "6759:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6759:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6773:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6773:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6763:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6763:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6789:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6789:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6824:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6824:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6835:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6835:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6820:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6820:3:8"
																				},
																				"nativeSrc": "6820:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6820:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6844:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6844:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6799:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6799:20:8"
																		},
																		"nativeSrc": "6799:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6799:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6789:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6789:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "6395:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6440:9:8",
														"nodeType": "YulTypedName",
														"src": "6440:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6451:7:8",
														"nodeType": "YulTypedName",
														"src": "6451:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6463:6:8",
														"nodeType": "YulTypedName",
														"src": "6463:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6471:6:8",
														"nodeType": "YulTypedName",
														"src": "6471:6:8",
														"type": ""
													}
												],
												"src": "6395:474:8"
											},
											{
												"body": {
													"nativeSrc": "7001:206:8",
													"nodeType": "YulBlock",
													"src": "7001:206:8",
													"statements": [
														{
															"nativeSrc": "7011:26:8",
															"nodeType": "YulAssignment",
															"src": "7011:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7023:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7023:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7034:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7034:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7019:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:8"
																},
																"nativeSrc": "7019:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7019:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7011:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7011:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7091:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7091:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7104:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7104:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7115:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7115:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7100:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7100:3:8"
																		},
																		"nativeSrc": "7100:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7100:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7047:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7047:43:8"
																},
																"nativeSrc": "7047:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7047:71:8"
															},
															"nativeSrc": "7047:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7047:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7172:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7172:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7185:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7185:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7196:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7196:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7181:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7181:3:8"
																		},
																		"nativeSrc": "7181:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7181:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7128:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7128:43:8"
																},
																"nativeSrc": "7128:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7128:72:8"
															},
															"nativeSrc": "7128:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7128:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6875:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6965:9:8",
														"nodeType": "YulTypedName",
														"src": "6965:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6977:6:8",
														"nodeType": "YulTypedName",
														"src": "6977:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6985:6:8",
														"nodeType": "YulTypedName",
														"src": "6985:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6996:4:8",
														"nodeType": "YulTypedName",
														"src": "6996:4:8",
														"type": ""
													}
												],
												"src": "6875:332:8"
											},
											{
												"body": {
													"nativeSrc": "7279:263:8",
													"nodeType": "YulBlock",
													"src": "7279:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7325:83:8",
																"nodeType": "YulBlock",
																"src": "7325:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7327:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7327:77:8"
																			},
																			"nativeSrc": "7327:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7327:79:8"
																		},
																		"nativeSrc": "7327:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7327:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7300:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7300:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7309:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7309:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7296:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7296:3:8"
																		},
																		"nativeSrc": "7296:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7296:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7321:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7321:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7292:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:8"
																},
																"nativeSrc": "7292:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7292:32:8"
															},
															"nativeSrc": "7289:119:8",
															"nodeType": "YulIf",
															"src": "7289:119:8"
														},
														{
															"nativeSrc": "7418:117:8",
															"nodeType": "YulBlock",
															"src": "7418:117:8",
															"statements": [
																{
																	"nativeSrc": "7433:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7433:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7447:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7447:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7437:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7437:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7462:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7462:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7497:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7497:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7508:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7508:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7493:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7493:3:8"
																				},
																				"nativeSrc": "7493:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7493:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7517:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7517:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7472:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7472:20:8"
																		},
																		"nativeSrc": "7472:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7472:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7462:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7462:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7213:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7249:9:8",
														"nodeType": "YulTypedName",
														"src": "7249:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7260:7:8",
														"nodeType": "YulTypedName",
														"src": "7260:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7272:6:8",
														"nodeType": "YulTypedName",
														"src": "7272:6:8",
														"type": ""
													}
												],
												"src": "7213:329:8"
											},
											{
												"body": {
													"nativeSrc": "7576:152:8",
													"nodeType": "YulBlock",
													"src": "7576:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7593:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7593:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7596:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7596:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7586:6:8"
																},
																"nativeSrc": "7586:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7586:88:8"
															},
															"nativeSrc": "7586:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7586:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7690:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7690:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7693:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7693:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7683:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7683:6:8"
																},
																"nativeSrc": "7683:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7683:15:8"
															},
															"nativeSrc": "7683:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7683:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7714:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7714:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7717:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7717:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7707:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:8"
																},
																"nativeSrc": "7707:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7707:15:8"
															},
															"nativeSrc": "7707:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7707:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7548:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7548:180:8"
											},
											{
												"body": {
													"nativeSrc": "7779:149:8",
													"nodeType": "YulBlock",
													"src": "7779:149:8",
													"statements": [
														{
															"nativeSrc": "7789:25:8",
															"nodeType": "YulAssignment",
															"src": "7789:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7812:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7812:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7794:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7794:17:8"
																},
																"nativeSrc": "7794:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7794:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7789:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7789:1:8"
																}
															]
														},
														{
															"nativeSrc": "7823:25:8",
															"nodeType": "YulAssignment",
															"src": "7823:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7846:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7846:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7828:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7828:17:8"
																},
																"nativeSrc": "7828:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7828:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7823:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7823:1:8"
																}
															]
														},
														{
															"nativeSrc": "7857:17:8",
															"nodeType": "YulAssignment",
															"src": "7857:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7869:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7869:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7872:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7872:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7865:3:8"
																},
																"nativeSrc": "7865:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7865:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7857:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7857:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7899:22:8",
																"nodeType": "YulBlock",
																"src": "7899:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7901:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7901:16:8"
																			},
																			"nativeSrc": "7901:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7901:18:8"
																		},
																		"nativeSrc": "7901:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7901:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7890:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7890:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7896:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7896:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7887:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7887:2:8"
																},
																"nativeSrc": "7887:11:8",
																"nodeType": "YulFunctionCall",
																"src": "7887:11:8"
															},
															"nativeSrc": "7884:37:8",
															"nodeType": "YulIf",
															"src": "7884:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7734:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7765:1:8",
														"nodeType": "YulTypedName",
														"src": "7765:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7768:1:8",
														"nodeType": "YulTypedName",
														"src": "7768:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7774:4:8",
														"nodeType": "YulTypedName",
														"src": "7774:4:8",
														"type": ""
													}
												],
												"src": "7734:194:8"
											},
											{
												"body": {
													"nativeSrc": "7962:152:8",
													"nodeType": "YulBlock",
													"src": "7962:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7979:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7979:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7982:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7982:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7972:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7972:6:8"
																},
																"nativeSrc": "7972:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7972:88:8"
															},
															"nativeSrc": "7972:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7972:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8076:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8076:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8079:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8079:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8069:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8069:6:8"
																},
																"nativeSrc": "8069:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8069:15:8"
															},
															"nativeSrc": "8069:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8069:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8100:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8100:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8103:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8103:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8093:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8093:6:8"
																},
																"nativeSrc": "8093:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8093:15:8"
															},
															"nativeSrc": "8093:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8093:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7934:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7934:180:8"
											},
											{
												"body": {
													"nativeSrc": "8216:73:8",
													"nodeType": "YulBlock",
													"src": "8216:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8233:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8233:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8238:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8226:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8226:6:8"
																},
																"nativeSrc": "8226:19:8",
																"nodeType": "YulFunctionCall",
																"src": "8226:19:8"
															},
															"nativeSrc": "8226:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "8226:19:8"
														},
														{
															"nativeSrc": "8254:29:8",
															"nodeType": "YulAssignment",
															"src": "8254:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8273:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8273:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8278:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8278:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8269:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8269:3:8"
																},
																"nativeSrc": "8269:14:8",
																"nodeType": "YulFunctionCall",
																"src": "8269:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8254:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8254:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8120:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8188:3:8",
														"nodeType": "YulTypedName",
														"src": "8188:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8193:6:8",
														"nodeType": "YulTypedName",
														"src": "8193:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8204:11:8",
														"nodeType": "YulTypedName",
														"src": "8204:11:8",
														"type": ""
													}
												],
												"src": "8120:169:8"
											},
											{
												"body": {
													"nativeSrc": "8401:123:8",
													"nodeType": "YulBlock",
													"src": "8401:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8423:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8423:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8431:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8431:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8419:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8419:3:8"
																		},
																		"nativeSrc": "8419:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8419:14:8"
																	},
																	{
																		"hexValue": "77697468647261773a2063616e2774207769746864726177206d6f7265207468",
																		"kind": "string",
																		"nativeSrc": "8435:34:8",
																		"nodeType": "YulLiteral",
																		"src": "8435:34:8",
																		"type": "",
																		"value": "withdraw: can't withdraw more th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8412:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:8"
																},
																"nativeSrc": "8412:58:8",
																"nodeType": "YulFunctionCall",
																"src": "8412:58:8"
															},
															"nativeSrc": "8412:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "8412:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8491:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8491:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8499:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8499:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8487:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8487:3:8"
																		},
																		"nativeSrc": "8487:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8487:15:8"
																	},
																	{
																		"hexValue": "616e206465706f736974",
																		"kind": "string",
																		"nativeSrc": "8504:12:8",
																		"nodeType": "YulLiteral",
																		"src": "8504:12:8",
																		"type": "",
																		"value": "an deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8480:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8480:6:8"
																},
																"nativeSrc": "8480:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8480:37:8"
															},
															"nativeSrc": "8480:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8480:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
												"nativeSrc": "8295:229:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8393:6:8",
														"nodeType": "YulTypedName",
														"src": "8393:6:8",
														"type": ""
													}
												],
												"src": "8295:229:8"
											},
											{
												"body": {
													"nativeSrc": "8676:220:8",
													"nodeType": "YulBlock",
													"src": "8676:220:8",
													"statements": [
														{
															"nativeSrc": "8686:74:8",
															"nodeType": "YulAssignment",
															"src": "8686:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8752:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8752:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8757:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8757:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8693:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8693:58:8"
																},
																"nativeSrc": "8693:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8693:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8686:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8686:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8858:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8858:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
																	"nativeSrc": "8769:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8769:88:8"
																},
																"nativeSrc": "8769:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8769:93:8"
															},
															"nativeSrc": "8769:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8769:93:8"
														},
														{
															"nativeSrc": "8871:19:8",
															"nodeType": "YulAssignment",
															"src": "8871:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8882:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8882:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8887:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8887:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8878:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8878:3:8"
																},
																"nativeSrc": "8878:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8878:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8871:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8871:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8530:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8664:3:8",
														"nodeType": "YulTypedName",
														"src": "8664:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8672:3:8",
														"nodeType": "YulTypedName",
														"src": "8672:3:8",
														"type": ""
													}
												],
												"src": "8530:366:8"
											},
											{
												"body": {
													"nativeSrc": "9073:248:8",
													"nodeType": "YulBlock",
													"src": "9073:248:8",
													"statements": [
														{
															"nativeSrc": "9083:26:8",
															"nodeType": "YulAssignment",
															"src": "9083:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9095:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9095:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9106:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9106:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9091:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9091:3:8"
																},
																"nativeSrc": "9091:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9091:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9083:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9083:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9130:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9130:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9141:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9141:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9126:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9126:3:8"
																		},
																		"nativeSrc": "9126:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9149:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9149:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9155:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9155:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9145:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9145:3:8"
																		},
																		"nativeSrc": "9145:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9145:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9119:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9119:6:8"
																},
																"nativeSrc": "9119:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9119:47:8"
															},
															"nativeSrc": "9119:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9119:47:8"
														},
														{
															"nativeSrc": "9175:139:8",
															"nodeType": "YulAssignment",
															"src": "9175:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9309:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9309:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9183:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9183:124:8"
																},
																"nativeSrc": "9183:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9183:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9175:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9175:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8902:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9053:9:8",
														"nodeType": "YulTypedName",
														"src": "9053:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9068:4:8",
														"nodeType": "YulTypedName",
														"src": "9068:4:8",
														"type": ""
													}
												],
												"src": "8902:419:8"
											},
											{
												"body": {
													"nativeSrc": "9433:115:8",
													"nodeType": "YulBlock",
													"src": "9433:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9455:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9455:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9463:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9463:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9451:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9451:3:8"
																		},
																		"nativeSrc": "9451:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9451:14:8"
																	},
																	{
																		"hexValue": "66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73",
																		"kind": "string",
																		"nativeSrc": "9467:34:8",
																		"nodeType": "YulLiteral",
																		"src": "9467:34:8",
																		"type": "",
																		"value": "fund: too late, the farm is clos"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9444:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9444:6:8"
																},
																"nativeSrc": "9444:58:8",
																"nodeType": "YulFunctionCall",
																"src": "9444:58:8"
															},
															"nativeSrc": "9444:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "9444:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9523:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9523:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9531:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9531:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9519:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9519:3:8"
																		},
																		"nativeSrc": "9519:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9519:15:8"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "9536:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9536:4:8",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9512:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9512:6:8"
																},
																"nativeSrc": "9512:29:8",
																"nodeType": "YulFunctionCall",
																"src": "9512:29:8"
															},
															"nativeSrc": "9512:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "9512:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
												"nativeSrc": "9327:221:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9425:6:8",
														"nodeType": "YulTypedName",
														"src": "9425:6:8",
														"type": ""
													}
												],
												"src": "9327:221:8"
											},
											{
												"body": {
													"nativeSrc": "9700:220:8",
													"nodeType": "YulBlock",
													"src": "9700:220:8",
													"statements": [
														{
															"nativeSrc": "9710:74:8",
															"nodeType": "YulAssignment",
															"src": "9710:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9776:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9776:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9781:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9781:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9717:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9717:58:8"
																},
																"nativeSrc": "9717:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9717:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9710:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9710:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9882:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9882:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
																	"nativeSrc": "9793:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9793:88:8"
																},
																"nativeSrc": "9793:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9793:93:8"
															},
															"nativeSrc": "9793:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9793:93:8"
														},
														{
															"nativeSrc": "9895:19:8",
															"nodeType": "YulAssignment",
															"src": "9895:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9906:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9906:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9911:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9911:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9902:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9902:3:8"
																},
																"nativeSrc": "9902:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9902:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9895:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9895:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9554:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9688:3:8",
														"nodeType": "YulTypedName",
														"src": "9688:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9696:3:8",
														"nodeType": "YulTypedName",
														"src": "9696:3:8",
														"type": ""
													}
												],
												"src": "9554:366:8"
											},
											{
												"body": {
													"nativeSrc": "10097:248:8",
													"nodeType": "YulBlock",
													"src": "10097:248:8",
													"statements": [
														{
															"nativeSrc": "10107:26:8",
															"nodeType": "YulAssignment",
															"src": "10107:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10119:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10119:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10130:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10130:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10115:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10115:3:8"
																},
																"nativeSrc": "10115:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10115:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10107:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10107:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10154:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10154:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10165:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10165:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10150:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10150:3:8"
																		},
																		"nativeSrc": "10150:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10150:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10173:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10173:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10179:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10179:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10169:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10169:3:8"
																		},
																		"nativeSrc": "10169:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10169:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10143:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10143:6:8"
																},
																"nativeSrc": "10143:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10143:47:8"
															},
															"nativeSrc": "10143:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10143:47:8"
														},
														{
															"nativeSrc": "10199:139:8",
															"nodeType": "YulAssignment",
															"src": "10199:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10333:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10333:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10207:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10207:124:8"
																},
																"nativeSrc": "10207:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10207:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10199:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10199:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9926:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10077:9:8",
														"nodeType": "YulTypedName",
														"src": "10077:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10092:4:8",
														"nodeType": "YulTypedName",
														"src": "10092:4:8",
														"type": ""
													}
												],
												"src": "9926:419:8"
											},
											{
												"body": {
													"nativeSrc": "10395:147:8",
													"nodeType": "YulBlock",
													"src": "10395:147:8",
													"statements": [
														{
															"nativeSrc": "10405:25:8",
															"nodeType": "YulAssignment",
															"src": "10405:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10428:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10428:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10410:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10410:17:8"
																},
																"nativeSrc": "10410:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10410:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10405:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10405:1:8"
																}
															]
														},
														{
															"nativeSrc": "10439:25:8",
															"nodeType": "YulAssignment",
															"src": "10439:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10462:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10462:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10444:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10444:17:8"
																},
																"nativeSrc": "10444:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10444:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10439:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10439:1:8"
																}
															]
														},
														{
															"nativeSrc": "10473:16:8",
															"nodeType": "YulAssignment",
															"src": "10473:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10484:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10484:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10487:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10487:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10480:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10480:3:8"
																},
																"nativeSrc": "10480:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10480:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10473:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10473:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10513:22:8",
																"nodeType": "YulBlock",
																"src": "10513:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10515:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10515:16:8"
																			},
																			"nativeSrc": "10515:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10515:18:8"
																		},
																		"nativeSrc": "10515:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10515:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10505:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10505:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10508:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10508:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10502:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10502:2:8"
																},
																"nativeSrc": "10502:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10502:10:8"
															},
															"nativeSrc": "10499:36:8",
															"nodeType": "YulIf",
															"src": "10499:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10351:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10382:1:8",
														"nodeType": "YulTypedName",
														"src": "10382:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10385:1:8",
														"nodeType": "YulTypedName",
														"src": "10385:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10391:3:8",
														"nodeType": "YulTypedName",
														"src": "10391:3:8",
														"type": ""
													}
												],
												"src": "10351:191:8"
											},
											{
												"body": {
													"nativeSrc": "10576:152:8",
													"nodeType": "YulBlock",
													"src": "10576:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10593:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10593:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10596:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10596:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10586:6:8"
																},
																"nativeSrc": "10586:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10586:88:8"
															},
															"nativeSrc": "10586:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10586:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10690:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10690:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10693:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10693:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10683:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:8"
																},
																"nativeSrc": "10683:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10683:15:8"
															},
															"nativeSrc": "10683:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10683:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10714:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10714:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10717:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10717:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10707:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10707:6:8"
																},
																"nativeSrc": "10707:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10707:15:8"
															},
															"nativeSrc": "10707:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10707:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10548:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10548:180:8"
											},
											{
												"body": {
													"nativeSrc": "10860:206:8",
													"nodeType": "YulBlock",
													"src": "10860:206:8",
													"statements": [
														{
															"nativeSrc": "10870:26:8",
															"nodeType": "YulAssignment",
															"src": "10870:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10882:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10882:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10893:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10893:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10878:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10878:3:8"
																},
																"nativeSrc": "10878:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10878:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10870:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10870:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10950:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10950:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10963:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10963:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10974:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10974:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10959:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10959:3:8"
																		},
																		"nativeSrc": "10959:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10959:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10906:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10906:43:8"
																},
																"nativeSrc": "10906:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10906:71:8"
															},
															"nativeSrc": "10906:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10906:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11031:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11031:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11044:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11044:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11055:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11055:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11040:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11040:3:8"
																		},
																		"nativeSrc": "11040:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11040:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10987:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10987:43:8"
																},
																"nativeSrc": "10987:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10987:72:8"
															},
															"nativeSrc": "10987:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10987:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10734:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10824:9:8",
														"nodeType": "YulTypedName",
														"src": "10824:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10836:6:8",
														"nodeType": "YulTypedName",
														"src": "10836:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10844:6:8",
														"nodeType": "YulTypedName",
														"src": "10844:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10855:4:8",
														"nodeType": "YulTypedName",
														"src": "10855:4:8",
														"type": ""
													}
												],
												"src": "10734:332:8"
											},
											{
												"body": {
													"nativeSrc": "11132:77:8",
													"nodeType": "YulBlock",
													"src": "11132:77:8",
													"statements": [
														{
															"nativeSrc": "11142:22:8",
															"nodeType": "YulAssignment",
															"src": "11142:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11157:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11157:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11151:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11151:5:8"
																},
																"nativeSrc": "11151:13:8",
																"nodeType": "YulFunctionCall",
																"src": "11151:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11142:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11142:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11197:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11197:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11173:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "11173:23:8"
																},
																"nativeSrc": "11173:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11173:30:8"
															},
															"nativeSrc": "11173:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11173:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11072:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11110:6:8",
														"nodeType": "YulTypedName",
														"src": "11110:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11118:3:8",
														"nodeType": "YulTypedName",
														"src": "11118:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11126:5:8",
														"nodeType": "YulTypedName",
														"src": "11126:5:8",
														"type": ""
													}
												],
												"src": "11072:137:8"
											},
											{
												"body": {
													"nativeSrc": "11289:271:8",
													"nodeType": "YulBlock",
													"src": "11289:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "11335:83:8",
																"nodeType": "YulBlock",
																"src": "11335:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11337:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "11337:77:8"
																			},
																			"nativeSrc": "11337:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11337:79:8"
																		},
																		"nativeSrc": "11337:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11337:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11310:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11310:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11319:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11319:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11306:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:8"
																		},
																		"nativeSrc": "11306:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11306:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11331:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11331:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11302:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11302:3:8"
																},
																"nativeSrc": "11302:32:8",
																"nodeType": "YulFunctionCall",
																"src": "11302:32:8"
															},
															"nativeSrc": "11299:119:8",
															"nodeType": "YulIf",
															"src": "11299:119:8"
														},
														{
															"nativeSrc": "11428:125:8",
															"nodeType": "YulBlock",
															"src": "11428:125:8",
															"statements": [
																{
																	"nativeSrc": "11443:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11443:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11457:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11457:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11447:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11447:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11472:71:8",
																	"nodeType": "YulAssignment",
																	"src": "11472:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11515:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "11515:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11526:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11526:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11511:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11511:3:8"
																				},
																				"nativeSrc": "11511:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11511:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11535:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11535:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11482:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "11482:28:8"
																		},
																		"nativeSrc": "11482:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11482:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11472:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11472:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11215:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11259:9:8",
														"nodeType": "YulTypedName",
														"src": "11259:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11270:7:8",
														"nodeType": "YulTypedName",
														"src": "11270:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11282:6:8",
														"nodeType": "YulTypedName",
														"src": "11282:6:8",
														"type": ""
													}
												],
												"src": "11215:345:8"
											},
											{
												"body": {
													"nativeSrc": "11720:288:8",
													"nodeType": "YulBlock",
													"src": "11720:288:8",
													"statements": [
														{
															"nativeSrc": "11730:26:8",
															"nodeType": "YulAssignment",
															"src": "11730:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11742:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11742:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11753:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11753:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11738:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11738:3:8"
																},
																"nativeSrc": "11738:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11738:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11730:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11730:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11810:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11810:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11823:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11823:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11834:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11834:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11819:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11819:3:8"
																		},
																		"nativeSrc": "11819:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11819:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11766:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11766:43:8"
																},
																"nativeSrc": "11766:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11766:71:8"
															},
															"nativeSrc": "11766:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11766:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11891:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11891:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11904:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11904:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11915:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11915:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11900:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11900:3:8"
																		},
																		"nativeSrc": "11900:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11900:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11847:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11847:43:8"
																},
																"nativeSrc": "11847:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11847:72:8"
															},
															"nativeSrc": "11847:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11847:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11973:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11973:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11986:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11986:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11997:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11997:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11982:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11982:3:8"
																		},
																		"nativeSrc": "11982:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11982:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11929:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11929:43:8"
																},
																"nativeSrc": "11929:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11929:72:8"
															},
															"nativeSrc": "11929:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11929:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11566:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11676:9:8",
														"nodeType": "YulTypedName",
														"src": "11676:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11688:6:8",
														"nodeType": "YulTypedName",
														"src": "11688:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11696:6:8",
														"nodeType": "YulTypedName",
														"src": "11696:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11704:6:8",
														"nodeType": "YulTypedName",
														"src": "11704:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11715:4:8",
														"nodeType": "YulTypedName",
														"src": "11715:4:8",
														"type": ""
													}
												],
												"src": "11566:442:8"
											},
											{
												"body": {
													"nativeSrc": "12072:40:8",
													"nodeType": "YulBlock",
													"src": "12072:40:8",
													"statements": [
														{
															"nativeSrc": "12083:22:8",
															"nodeType": "YulAssignment",
															"src": "12083:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12099:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12099:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12093:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12093:5:8"
																},
																"nativeSrc": "12093:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12093:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12083:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12083:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12014:98:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12055:5:8",
														"nodeType": "YulTypedName",
														"src": "12055:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12065:6:8",
														"nodeType": "YulTypedName",
														"src": "12065:6:8",
														"type": ""
													}
												],
												"src": "12014:98:8"
											},
											{
												"body": {
													"nativeSrc": "12231:34:8",
													"nodeType": "YulBlock",
													"src": "12231:34:8",
													"statements": [
														{
															"nativeSrc": "12241:18:8",
															"nodeType": "YulAssignment",
															"src": "12241:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "12256:3:8",
																"nodeType": "YulIdentifier",
																"src": "12256:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12241:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "12241:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12118:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12203:3:8",
														"nodeType": "YulTypedName",
														"src": "12203:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12208:6:8",
														"nodeType": "YulTypedName",
														"src": "12208:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12219:11:8",
														"nodeType": "YulTypedName",
														"src": "12219:11:8",
														"type": ""
													}
												],
												"src": "12118:147:8"
											},
											{
												"body": {
													"nativeSrc": "12333:184:8",
													"nodeType": "YulBlock",
													"src": "12333:184:8",
													"statements": [
														{
															"nativeSrc": "12343:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12343:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "12352:1:8",
																"nodeType": "YulLiteral",
																"src": "12352:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "12347:1:8",
																	"nodeType": "YulTypedName",
																	"src": "12347:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12412:63:8",
																"nodeType": "YulBlock",
																"src": "12412:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "12437:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12437:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "12442:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "12442:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12433:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "12433:3:8"
																					},
																					"nativeSrc": "12433:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "12433:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "12456:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "12456:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "12461:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "12461:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12452:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "12452:3:8"
																							},
																							"nativeSrc": "12452:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "12452:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "12446:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "12446:5:8"
																					},
																					"nativeSrc": "12446:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "12446:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12426:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12426:6:8"
																			},
																			"nativeSrc": "12426:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12426:39:8"
																		},
																		"nativeSrc": "12426:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12426:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12373:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12373:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12376:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12370:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12370:2:8"
																},
																"nativeSrc": "12370:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12370:13:8"
															},
															"nativeSrc": "12362:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12384:19:8",
																"nodeType": "YulBlock",
																"src": "12384:19:8",
																"statements": [
																	{
																		"nativeSrc": "12386:15:8",
																		"nodeType": "YulAssignment",
																		"src": "12386:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12395:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "12395:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12398:2:8",
																					"nodeType": "YulLiteral",
																					"src": "12398:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12391:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12391:3:8"
																			},
																			"nativeSrc": "12391:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12391:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12386:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "12386:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12366:3:8",
																"nodeType": "YulBlock",
																"src": "12366:3:8",
																"statements": []
															},
															"src": "12362:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12495:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12495:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12500:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12500:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12491:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12491:3:8"
																		},
																		"nativeSrc": "12491:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12491:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12509:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12509:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12484:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12484:6:8"
																},
																"nativeSrc": "12484:27:8",
																"nodeType": "YulFunctionCall",
																"src": "12484:27:8"
															},
															"nativeSrc": "12484:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "12484:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12271:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12315:3:8",
														"nodeType": "YulTypedName",
														"src": "12315:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12320:3:8",
														"nodeType": "YulTypedName",
														"src": "12320:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12325:6:8",
														"nodeType": "YulTypedName",
														"src": "12325:6:8",
														"type": ""
													}
												],
												"src": "12271:246:8"
											},
											{
												"body": {
													"nativeSrc": "12631:278:8",
													"nodeType": "YulBlock",
													"src": "12631:278:8",
													"statements": [
														{
															"nativeSrc": "12641:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12641:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12687:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12687:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12655:31:8",
																	"nodeType": "YulIdentifier",
																	"src": "12655:31:8"
																},
																"nativeSrc": "12655:38:8",
																"nodeType": "YulFunctionCall",
																"src": "12655:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12645:6:8",
																	"nodeType": "YulTypedName",
																	"src": "12645:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12702:95:8",
															"nodeType": "YulAssignment",
															"src": "12702:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12785:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12785:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12790:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12790:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12709:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "12709:75:8"
																},
																"nativeSrc": "12709:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12709:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12702:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12702:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12845:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12845:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12852:4:8",
																				"nodeType": "YulLiteral",
																				"src": "12852:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12841:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12841:3:8"
																		},
																		"nativeSrc": "12841:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12841:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12859:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12859:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12864:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12864:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12806:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "12806:34:8"
																},
																"nativeSrc": "12806:65:8",
																"nodeType": "YulFunctionCall",
																"src": "12806:65:8"
															},
															"nativeSrc": "12806:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "12806:65:8"
														},
														{
															"nativeSrc": "12880:23:8",
															"nodeType": "YulAssignment",
															"src": "12880:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12891:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12891:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12896:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12896:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12887:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12887:3:8"
																},
																"nativeSrc": "12887:16:8",
																"nodeType": "YulFunctionCall",
																"src": "12887:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12880:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12880:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12523:386:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12612:5:8",
														"nodeType": "YulTypedName",
														"src": "12612:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12619:3:8",
														"nodeType": "YulTypedName",
														"src": "12619:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12627:3:8",
														"nodeType": "YulTypedName",
														"src": "12627:3:8",
														"type": ""
													}
												],
												"src": "12523:386:8"
											},
											{
												"body": {
													"nativeSrc": "13049:137:8",
													"nodeType": "YulBlock",
													"src": "13049:137:8",
													"statements": [
														{
															"nativeSrc": "13060:100:8",
															"nodeType": "YulAssignment",
															"src": "13060:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13147:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13147:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13156:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13156:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13067:79:8",
																	"nodeType": "YulIdentifier",
																	"src": "13067:79:8"
																},
																"nativeSrc": "13067:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13067:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13060:3:8"
																}
															]
														},
														{
															"nativeSrc": "13170:10:8",
															"nodeType": "YulAssignment",
															"src": "13170:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "13177:3:8",
																"nodeType": "YulIdentifier",
																"src": "13177:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13170:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12915:271:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13028:3:8",
														"nodeType": "YulTypedName",
														"src": "13028:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13034:6:8",
														"nodeType": "YulTypedName",
														"src": "13034:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13045:3:8",
														"nodeType": "YulTypedName",
														"src": "13045:3:8",
														"type": ""
													}
												],
												"src": "12915:271:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$225(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$225(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$225(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$225(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$225(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$225t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$225(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: can't withdraw more th\")\n\n        mstore(add(memPtr, 32), \"an deposit\")\n\n    }\n\n    function abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"fund: too late, the farm is clos\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063715018a6116100c1578063a85adeab1161007a578063a85adeab1461037f578063ca1d209d1461039d578063e2bbb158146103b9578063e4c75c27146103d5578063e6fd48bc14610405578063f2fde38b1461042357610156565b8063715018a6146102ba578063785e9e86146102c45780638da5cb5b146102e25780638f10369a1461030057806393f1a40b1461031e578063a23831061461034f57610156565b8063441a3e7011610113578063441a3e701461022257806351eb05a61461023e5780635312ea8e1461025a5780635c76ca2d14610276578063630b5ba11461029457806364482f791461029e57610156565b8063081e3eda1461015a5780630e15561a146101785780631526fe271461019657806317caf6f1146101ca5780631eaaa045146101e85780633f90916a14610204575b5f80fd5b61016261043f565b60405161016f91906118f4565b60405180910390f35b61018061044b565b60405161018d91906118f4565b60405180910390f35b6101b060048036038101906101ab919061193b565b610451565b6040516101c19594939291906119e0565b60405180910390f35b6101d26104b1565b6040516101df91906118f4565b60405180910390f35b61020260048036038101906101fd9190611ab2565b6104b7565b005b61020c6105dd565b60405161021991906118f4565b60405180910390f35b61023c60048036038101906102379190611b02565b61064e565b005b6102586004803603810190610253919061193b565b610863565b005b610274600480360381019061026f919061193b565b61096d565b005b61027e610b09565b60405161028b91906118f4565b60405180910390f35b61029c610b0f565b005b6102b860048036038101906102b39190611b40565b610b3a565b005b6102c2610be1565b005b6102cc610bf4565b6040516102d99190611b90565b60405180910390f35b6102ea610c19565b6040516102f79190611bb8565b60405180910390f35b610308610c40565b60405161031591906118f4565b60405180910390f35b61033860048036038101906103339190611bfb565b610c46565b604051610346929190611c39565b60405180910390f35b61036960048036038101906103649190611bfb565b610c71565b60405161037691906118f4565b60405180910390f35b610387610cce565b60405161039491906118f4565b60405180910390f35b6103b760048036038101906103b2919061193b565b610cd4565b005b6103d360048036038101906103ce9190611b02565b610dbb565b005b6103ef60048036038101906103ea9190611bfb565b610f98565b6040516103fc91906118f4565b60405180910390f35b61040d611133565b60405161041a91906118f4565b60405180910390f35b61043d60048036038101906104389190611c60565b611139565b005b5f600580549050905090565b60045481565b60058181548110610460575f80fd5b905f5260205f2090600502015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b60075481565b6104bf6111bd565b80156104ce576104cd610b0f565b5b5f60085442116104e0576008546104e2565b425b90506104f98460075461124490919063ffffffff16565b905060075f82919050555060056040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020015f81526020015f815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040155505050505050565b5f60085442116105ef575f905061064b565b5f600954421061060157600954610603565b425b90505f610628600854836106179190611cb8565b60035461127090919063ffffffff16565b9150505f610641600254836112be90919063ffffffff16565b9150508093505050505b90565b5f6005838154811061066357610662611ceb565b5b905f5260205f20906005020190505f60065f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f01541015610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611d98565b60405180910390fd5b61070f84610863565b5f61072a8360030154835f015461127090919063ffffffff16565b9150505f6107458360010154836112be90919063ffffffff16565b91505061075233826112e4565b61076885845f01546112be90919063ffffffff16565b9050835f015f82919050555061078e8460030154845f015461127090919063ffffffff16565b9050836001015f8291905055506107e83386865f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661139d9092919063ffffffff16565b6107ff8585600401546112be90919063ffffffff16565b9050846004015f829190505550853373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688760405161085391906118f4565b60405180910390a3505050505050565b5f6005828154811061087857610877611ceb565b5b905f5260205f20906005020190505f60095442106108985760095461089a565b425b9050816002015481116108ae57505061096a565b5f826004015490505f81036108ce5781836002018190555050505061096a565b5f6108e68460020154846112be90919063ffffffff16565b9150505f6108ff6003548361127090919063ffffffff16565b91505061091d85600101546007548361141c9092919063ffffffff16565b90505f610933848361151b90919063ffffffff16565b91505061094d81876003015461124490919063ffffffff16565b9050866003015f8291905055504286600201819055505050505050505b50565b5f6005828154811061098257610981611ceb565b5b905f5260205f20906005020190505f60065f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610a2f33825f0154845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661139d9092919063ffffffff16565b610a49815f015483600401546112be90919063ffffffff16565b9050826004015f829190505550823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595835f0154604051610aa091906118f4565b60405180910390a360065f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f90555050505050565b60025481565b5f60058054905090505f5b81811015610b3657610b2b81610863565b806001019050610b1a565b5050565b610b426111bd565b8015610b5157610b50610b0f565b5b610b8960058481548110610b6857610b67611ceb565b5b905f5260205f209060050201600101546007546112be90919063ffffffff16565b905060075f829190505550610ba98260075461124490919063ffffffff16565b905060075f8291905055508160058481548110610bc957610bc8611ceb565b5b905f5260205f20906005020160010181905550505050565b610be96111bd565b610bf25f61154e565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6006602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b5f8060065f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f015491505092915050565b60095481565b6009544210610d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0f90611e26565b60405180910390fd5b610d6633308360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661160f909392919063ffffffff16565b5f610d7c6003548361151b90919063ffffffff16565b9150508060095f828254610d909190611e44565b92505081905550610dac8260045461124490919063ffffffff16565b905060045f8291905055505050565b5f60058381548110610dd057610dcf611ceb565b5b905f5260205f20906005020190505f60065f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610e3684610863565b5f815f01541115610e87575f610e5c8360030154835f015461127090919063ffffffff16565b9150505f610e778360010154836112be90919063ffffffff16565b915050610e8433826112e4565b50505b610ed6333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661160f909392919063ffffffff16565b610eed83836004015461124490919063ffffffff16565b9050826004015f829190505550610f1083825f015461124490919063ffffffff16565b9050815f015f829190505550610f368260030154825f015461127090919063ffffffff16565b9050816001015f829190505550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051610f8a91906118f4565b60405180910390a350505050565b5f8060058481548110610fae57610fad611ceb565b5b905f5260205f20906005020190505f60065f8681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f826003015490505f825f015490505f8460040154905084600201544211801561103557505f8114155b156110f1575f600954421061104c5760095461104e565b425b90505f6009548760020154106110665760095461106c565b86600201545b90505f61108282846112be90919063ffffffff16565b9150505f61109b6003548361127090919063ffffffff16565b9150506110b989600101546007548361141c9092919063ffffffff16565b90505f6110cf868361151b90919063ffffffff16565b9150506110e5818961124490919063ffffffff16565b90508098505050505050505b5f611105848461127090919063ffffffff16565b9150505f6111208660010154836112be90919063ffffffff16565b9150508097505050505050505092915050565b60085481565b6111416111bd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111b1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111a89190611bb8565b60405180910390fd5b6111ba8161154e565b50565b6111c5611691565b73ffffffffffffffffffffffffffffffffffffffff166111e3610c19565b73ffffffffffffffffffffffffffffffffffffffff161461124257611206611691565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112399190611bb8565b60405180910390fd5b565b5f805f838501905084811015611260575f809250925050611269565b60018192509250505b9250929050565b5f805f84036112855760015f915091506112b7565b5f83850290508385828161129c5761129b611e77565b5b04146112ae575f8092509250506112b7565b60018192509250505b9250929050565b5f80838311156112d3575f80915091506112dd565b6001838503915091505b9250929050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401611340929190611ea4565b6020604051808303815f875af115801561135c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113809190611edf565b508060025f8282546113929190611e44565b925050819055505050565b611417838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016113d0929190611ea4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611698565b505050565b5f8083850290505f8019858709828110838203039150505f81036114545783828161144a57611449611e77565b5b0492505050611514565b80841161148d576040517f227bc15300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8486880990508281118203915080830392505f855f038616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f805f830361152f575f8091509150611547565b600183858161154157611540611e77565b5b04915091505b9250929050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61168b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161164493929190611f0a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611698565b50505050565b5f33905090565b5f6116c2828473ffffffffffffffffffffffffffffffffffffffff1661172d90919063ffffffff16565b90505f8151141580156116e65750808060200190518101906116e49190611edf565b155b1561172857826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161171f9190611bb8565b60405180910390fd5b505050565b606061173a83835f611742565b905092915050565b60608147101561178957306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016117809190611bb8565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516117b19190611fab565b5f6040518083038185875af1925050503d805f81146117eb576040519150601f19603f3d011682016040523d82523d5f602084013e6117f0565b606091505b509150915061180086838361180b565b925050509392505050565b6060826118205761181b82611898565b611890565b5f825114801561184657505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561188857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161187f9190611bb8565b60405180910390fd5b819050611891565b5b9392505050565b5f815111156118aa5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b6118ee816118dc565b82525050565b5f6020820190506119075f8301846118e5565b92915050565b5f80fd5b61191a816118dc565b8114611924575f80fd5b50565b5f8135905061193581611911565b92915050565b5f602082840312156119505761194f61190d565b5b5f61195d84828501611927565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6119a86119a361199e84611966565b611985565b611966565b9050919050565b5f6119b98261198e565b9050919050565b5f6119ca826119af565b9050919050565b6119da816119c0565b82525050565b5f60a0820190506119f35f8301886119d1565b611a0060208301876118e5565b611a0d60408301866118e5565b611a1a60608301856118e5565b611a2760808301846118e5565b9695505050505050565b5f611a3b82611966565b9050919050565b5f611a4c82611a31565b9050919050565b611a5c81611a42565b8114611a66575f80fd5b50565b5f81359050611a7781611a53565b92915050565b5f8115159050919050565b611a9181611a7d565b8114611a9b575f80fd5b50565b5f81359050611aac81611a88565b92915050565b5f805f60608486031215611ac957611ac861190d565b5b5f611ad686828701611927565b9350506020611ae786828701611a69565b9250506040611af886828701611a9e565b9150509250925092565b5f8060408385031215611b1857611b1761190d565b5b5f611b2585828601611927565b9250506020611b3685828601611927565b9150509250929050565b5f805f60608486031215611b5757611b5661190d565b5b5f611b6486828701611927565b9350506020611b7586828701611927565b9250506040611b8686828701611a9e565b9150509250925092565b5f602082019050611ba35f8301846119d1565b92915050565b611bb281611a31565b82525050565b5f602082019050611bcb5f830184611ba9565b92915050565b611bda81611a31565b8114611be4575f80fd5b50565b5f81359050611bf581611bd1565b92915050565b5f8060408385031215611c1157611c1061190d565b5b5f611c1e85828601611927565b9250506020611c2f85828601611be7565b9150509250929050565b5f604082019050611c4c5f8301856118e5565b611c5960208301846118e5565b9392505050565b5f60208284031215611c7557611c7461190d565b5b5f611c8284828501611be7565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611cc2826118dc565b9150611ccd836118dc565b9250828203905081811115611ce557611ce4611c8b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f77697468647261773a2063616e2774207769746864726177206d6f72652074685f8201527f616e206465706f73697400000000000000000000000000000000000000000000602082015250565b5f611d82602a83611d18565b9150611d8d82611d28565b604082019050919050565b5f6020820190508181035f830152611daf81611d76565b9050919050565b7f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f735f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611e10602283611d18565b9150611e1b82611db6565b604082019050919050565b5f6020820190508181035f830152611e3d81611e04565b9050919050565b5f611e4e826118dc565b9150611e59836118dc565b9250828201905080821115611e7157611e70611c8b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050611eb75f830185611ba9565b611ec460208301846118e5565b9392505050565b5f81519050611ed981611a88565b92915050565b5f60208284031215611ef457611ef361190d565b5b5f611f0184828501611ecb565b91505092915050565b5f606082019050611f1d5f830186611ba9565b611f2a6020830185611ba9565b611f3760408301846118e5565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b83811015611f70578082015181840152602081019050611f55565b5f8484015250505050565b5f611f8582611f3f565b611f8f8185611f49565b9350611f9f818560208601611f53565b80840191505092915050565b5f611fb68284611f7b565b91508190509291505056fea26469706673582212203852f52e7b5a406fec373a239aa07d0230e1a99afacb40ddd9a7e2ed48e9882564736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA85ADEAB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x423 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x34F JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x29E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0x204 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0xB0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH2 0xBE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH2 0xCD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0x1139 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x11BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH2 0x4CD PUSH2 0xB0F JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x4E0 JUMPI PUSH1 0x8 SLOAD PUSH2 0x4E2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH2 0x4F9 DUP5 PUSH1 0x7 SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x5EF JUMPI PUSH0 SWAP1 POP PUSH2 0x64B JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x601 JUMPI PUSH1 0x9 SLOAD PUSH2 0x603 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x628 PUSH1 0x8 SLOAD DUP4 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x641 PUSH1 0x2 SLOAD DUP4 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x663 JUMPI PUSH2 0x662 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70F DUP5 PUSH2 0x863 JUMP JUMPDEST PUSH0 PUSH2 0x72A DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x745 DUP4 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x752 CALLER DUP3 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0x768 DUP6 DUP5 PUSH0 ADD SLOAD PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH0 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0x78E DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0x7E8 CALLER DUP7 DUP7 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x139D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7FF DUP6 DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x4 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x878 JUMPI PUSH2 0x877 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x898 JUMPI PUSH1 0x9 SLOAD PUSH2 0x89A JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 GT PUSH2 0x8AE JUMPI POP POP PUSH2 0x96A JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x8CE JUMPI DUP2 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x96A JUMP JUMPDEST PUSH0 PUSH2 0x8E6 DUP5 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x8FF PUSH1 0x3 SLOAD DUP4 PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91D DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0x141C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x933 DUP5 DUP4 PUSH2 0x151B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x94D DUP2 DUP8 PUSH1 0x3 ADD SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x3 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP TIMESTAMP DUP7 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x982 JUMPI PUSH2 0x981 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xA2F CALLER DUP3 PUSH0 ADD SLOAD DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x139D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA49 DUP2 PUSH0 ADD SLOAD DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x4 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAA0 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB36 JUMPI PUSH2 0xB2B DUP2 PUSH2 0x863 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xB1A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB42 PUSH2 0x11BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB51 JUMPI PUSH2 0xB50 PUSH2 0xB0F JUMP JUMPDEST JUMPDEST PUSH2 0xB89 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0xBA9 DUP3 PUSH1 0x7 SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xBC9 JUMPI PUSH2 0xBC8 PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xBE9 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0xBF2 PUSH0 PUSH2 0x154E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0F SWAP1 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD66 CALLER ADDRESS DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH2 0xD7C PUSH1 0x3 SLOAD DUP4 PUSH2 0x151B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD90 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDAC DUP3 PUSH1 0x4 SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDD0 JUMPI PUSH2 0xDCF PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xE36 DUP5 PUSH2 0x863 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xE87 JUMPI PUSH0 PUSH2 0xE5C DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0xE77 DUP4 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE84 CALLER DUP3 PUSH2 0x12E4 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xED6 CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160F SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEED DUP4 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x4 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0xF10 DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH0 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP PUSH2 0xF36 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD PUSH0 DUP3 SWAP2 SWAP1 POP SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFAE JUMPI PUSH2 0xFAD PUSH2 0x1CEB JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP5 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP5 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1035 JUMPI POP PUSH0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x10F1 JUMPI PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x104C JUMPI PUSH1 0x9 SLOAD PUSH2 0x104E JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 SLOAD DUP8 PUSH1 0x2 ADD SLOAD LT PUSH2 0x1066 JUMPI PUSH1 0x9 SLOAD PUSH2 0x106C JUMP JUMPDEST DUP7 PUSH1 0x2 ADD SLOAD JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1082 DUP3 DUP5 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x109B PUSH1 0x3 SLOAD DUP4 PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B9 DUP10 PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD DUP4 PUSH2 0x141C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10CF DUP7 DUP4 PUSH2 0x151B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E5 DUP2 DUP10 PUSH2 0x1244 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP9 POP POP POP POP POP POP POP JUMPDEST PUSH0 PUSH2 0x1105 DUP5 DUP5 PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH0 PUSH2 0x1120 DUP7 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x12BE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP8 POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x11BD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A8 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11BA DUP2 PUSH2 0x154E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11C5 PUSH2 0x1691 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11E3 PUSH2 0xC19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1242 JUMPI PUSH2 0x1206 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1239 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP6 ADD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x1260 JUMPI PUSH0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 SUB PUSH2 0x1285 JUMPI PUSH1 0x1 PUSH0 SWAP2 POP SWAP2 POP PUSH2 0x12B7 JUMP JUMPDEST PUSH0 DUP4 DUP6 MUL SWAP1 POP DUP4 DUP6 DUP3 DUP2 PUSH2 0x129C JUMPI PUSH2 0x129B PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV EQ PUSH2 0x12AE JUMPI PUSH0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x12D3 JUMPI PUSH0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 SUB SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1340 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x135C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1380 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1392 SWAP2 SWAP1 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1417 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13D0 SWAP3 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1698 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 DUP6 MUL SWAP1 POP PUSH0 DUP1 NOT DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH0 DUP2 SUB PUSH2 0x1454 JUMPI DUP4 DUP3 DUP2 PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1514 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x148D JUMPI PUSH1 0x40 MLOAD PUSH32 0x227BC15300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH0 DUP6 PUSH0 SUB DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 SUB PUSH2 0x152F JUMPI PUSH0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x1541 JUMPI PUSH2 0x1540 PUSH2 0x1E77 JUMP JUMPDEST JUMPDEST DIV SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x168B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1644 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1698 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x16C2 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x16E6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x16E4 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1728 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171F SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x173A DUP4 DUP4 PUSH0 PUSH2 0x1742 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1789 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1780 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x17B1 SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1800 DUP7 DUP4 DUP4 PUSH2 0x180B JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1820 JUMPI PUSH2 0x181B DUP3 PUSH2 0x1898 JUMP JUMPDEST PUSH2 0x1890 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1846 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1888 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187F SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1891 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x18AA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1907 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x191A DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1924 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1935 DUP2 PUSH2 0x1911 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1950 JUMPI PUSH2 0x194F PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195D DUP5 DUP3 DUP6 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19A8 PUSH2 0x19A3 PUSH2 0x199E DUP5 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x1966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19B9 DUP3 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19CA DUP3 PUSH2 0x19AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DA DUP2 PUSH2 0x19C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19F3 PUSH0 DUP4 ADD DUP9 PUSH2 0x19D1 JUMP JUMPDEST PUSH2 0x1A00 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1A0D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1A1A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1A27 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3B DUP3 PUSH2 0x1966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C DUP3 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x1A42 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A77 DUP2 PUSH2 0x1A53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A7D JUMP JUMPDEST DUP2 EQ PUSH2 0x1A9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AAC DUP2 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AC9 JUMPI PUSH2 0x1AC8 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD6 DUP7 DUP3 DUP8 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AE7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A69 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AF8 DUP7 DUP3 DUP8 ADD PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B18 JUMPI PUSH2 0x1B17 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B25 DUP6 DUP3 DUP7 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B36 DUP6 DUP3 DUP7 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B57 JUMPI PUSH2 0x1B56 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B64 DUP7 DUP3 DUP8 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B75 DUP7 DUP3 DUP8 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B86 DUP7 DUP3 DUP8 ADD PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA3 PUSH0 DUP4 ADD DUP5 PUSH2 0x19D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB2 DUP2 PUSH2 0x1A31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCB PUSH0 DUP4 ADD DUP5 PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BDA DUP2 PUSH2 0x1A31 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF5 DUP2 PUSH2 0x1BD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C11 JUMPI PUSH2 0x1C10 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C1E DUP6 DUP3 DUP7 ADD PUSH2 0x1927 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C2F DUP6 DUP3 DUP7 ADD PUSH2 0x1BE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP6 PUSH2 0x18E5 JUMP JUMPDEST PUSH2 0x1C59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C82 DUP5 DUP3 DUP6 ADD PUSH2 0x1BE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CC2 DUP3 PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCD DUP4 PUSH2 0x18DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x1C8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E206465706F73697400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D82 PUSH1 0x2A DUP4 PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8D DUP3 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DAF DUP2 PUSH2 0x1D76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E10 PUSH1 0x22 DUP4 PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1B DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E3D DUP2 PUSH2 0x1E04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E4E DUP3 PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1E59 DUP4 PUSH2 0x18DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x1C8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EB7 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1EC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ED9 DUP2 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F01 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F1D PUSH0 DUP4 ADD DUP7 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1F2A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x1F37 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F70 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F55 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F85 DUP3 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x1F8F DUP2 DUP6 PUSH2 0x1F49 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F9F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F53 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB6 DUP3 DUP5 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE MSTORE CREATE2 0x2E PUSH28 0x5A406FEC373A239AA07D0230E1A99AFACB40DDD9A7E2ED48E9882564 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "406:11013:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1419:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1478:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1715:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3203:665;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6413:457;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9592:1002;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7198:1241;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10662:540;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1279:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6950:175;;;:::i;:::-;;3962:386;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1194:19:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1348:30:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1558:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4407:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1869:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2641:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8500:1049;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4666:1674;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1794:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2497:93:7;2542:7;2568:8;:15;;;;2561:22;;2497:93;:::o;1419:27::-;;;;:::o;1478:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1715:30::-;;;;:::o;3203:665::-;1531:13:0;:11;:13::i;:::-;3333:11:7::1;3329:59;;;3360:17;:15;:17::i;:::-;3329:59;3397:27;3445:14;;3427:15;:32;:91;;3504:14;;3427:91;;;3474:15;3427:91;3397:121;;3550:35;3573:11;3550:15;;:22;;:35;;;;:::i;:::-;3528:57;;3531:15;;3528:57;;;;;;3595:8;3622:229;;;;;;;;3658:8;3622:229;;;;;;3696:11;3622:229;;;;3746:19;3622:229;;;;3801:1;3622:229;;;;3835:1;3622:229;;::::0;3595:266:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3319:549;3203:665:::0;;;:::o;6413:457::-;6460:7;6502:14;;6483:15;:33;6479:72;;6539:1;6532:8;;;;6479:72;6561:21;6603:12;;6585:15;:30;:87;;6660:12;;6585:87;;;6630:15;6585:87;6561:111;;6686:17;6707:76;6759:14;;6743:13;:30;;;;:::i;:::-;6707:15;;:22;;:76;;;;:::i;:::-;6683:100;;;6796:14;6814:25;6831:7;;6814:9;:16;;:25;;;;:::i;:::-;6793:46;;;6857:6;6850:13;;;;;6413:457;;:::o;9592:1002::-;9658:21;9682:8;9691:4;9682:14;;;;;;;;:::i;:::-;;;;;;;;;;;;9658:38;;9706:21;9730:8;:14;9739:4;9730:14;;;;;;;;;;;:26;9745:10;9730:26;;;;;;;;;;;;;;;9706:50;;9802:7;9787:4;:11;;;:22;;9766:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;9887:16;9898:4;9887:10;:16::i;:::-;9917:18;9939:41;9958:4;:21;;;9939:4;:11;;;:18;;:41;;;;:::i;:::-;9914:66;;;9993:21;10018:34;10036:4;:15;;;10018:10;:17;;:34;;;;:::i;:::-;9990:62;;;10234:40;10248:10;10260:13;10234;:40::i;:::-;10302:27;10321:7;10302:4;:11;;;:18;;:27;;;;:::i;:::-;10284:45;;10287:4;:11;;;10284:45;;;;;;10361:41;10380:4;:21;;;10361:4;:11;;;:18;;:41;;;;:::i;:::-;10339:63;;10342:4;:15;;;10339:63;;;;;;10412:55;10446:10;10459:7;10412:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;10502:34;10528:7;10502:4;:18;;;:25;;:34;;;;:::i;:::-;10477:59;;10480:4;:18;;;10477:59;;;;;;10573:4;10561:10;10552:35;;;10579:7;10552:35;;;;;;:::i;:::-;;;;;;;;9648:946;;;;9592:1002;;:::o;7198:1241::-;7249:21;7273:8;7282:4;7273:14;;;;;;;;:::i;:::-;;;;;;;;;;;;7249:38;;7297:21;7339:12;;7321:15;:30;:87;;7396:12;;7321:87;;;7366:15;7321:87;7297:111;;7440:4;:24;;;7423:13;:41;7419:78;;7480:7;;;;7419:78;7506:16;7525:4;:18;;;7506:37;;7570:1;7558:8;:13;7554:104;;7614:13;7587:4;:24;;:40;;;;7641:7;;;;;7554:104;7671:19;7694:68;7728:4;:24;;;7694:13;:20;;:68;;;;:::i;:::-;7668:94;;;7776:19;7799:35;7818:15;;7799:11;:18;;:35;;;;:::i;:::-;7773:61;;;7859:52;7878:4;:15;;;7895;;7859:11;:18;;:52;;;;;:::i;:::-;7845:66;;7925:27;7956:28;7975:8;7956:11;:18;;:28;;;;:::i;:::-;7922:62;;;8023:71;8065:19;8023:4;:21;;;:28;;:71;;;;:::i;:::-;7995:99;;7998:4;:21;;;7995:99;;;;;;8417:15;8390:4;:24;;:42;;;;7239:1200;;;;;;7198:1241;;:::o;10662:540::-;10720:21;10744:8;10753:4;10744:14;;;;;;;;:::i;:::-;;;;;;;;;;;;10720:38;;10768:21;10792:8;:14;10801:4;10792:14;;;;;;;;;;;:26;10807:10;10792:26;;;;;;;;;;;;;;;10768:50;;10828:59;10862:10;10875:4;:11;;;10828:4;:12;;;;;;;;;;;;:25;;;;:59;;;;;:::i;:::-;10991:38;11017:4;:11;;;10991:4;:18;;;:25;;:38;;;;:::i;:::-;10966:63;;10969:4;:18;;;10966:63;;;;;;11074:4;11062:10;11044:48;;;11080:4;:11;;;11044:48;;;;;;:::i;:::-;;;;;;;;11109:8;:14;11118:4;11109:14;;;;;;;;;;;:26;11124:10;11109:26;;;;;;;;;;;;;;;;11102:33;;;;;;;;;;;;;;10710:492;;10662:540;:::o;1279:22::-;;;;:::o;6950:175::-;6994:14;7011:8;:15;;;;6994:32;;7041:11;7036:83;7064:6;7058:3;:12;7036:83;;;7093:15;7104:3;7093:10;:15::i;:::-;7072:5;;;;;7036:83;;;;6984:141;6950:175::o;3962:386::-;1531:13:0;:11;:13::i;:::-;4089:11:7::1;4085:59;;;4116:17;:15;:17::i;:::-;4085:59;4175:49;4198:8;4207:4;4198:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;4175:15;;:22;;:49;;;;:::i;:::-;4153:71;;4156:15;;4153:71;;;;;;4257:35;4280:11;4257:15;;:22;;:35;;;;:::i;:::-;4235:57;;4238:15;;4235:57;;;;;;4330:11;4302:8;4311:4;4302:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;3962:386:::0;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1194:19:7:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1348:30:7:-;;;;:::o;1558:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4407:198::-;4502:7;4525:21;4549:8;:14;4558:4;4549:14;;;;;;;;;;;:21;4564:5;4549:21;;;;;;;;;;;;;;;4525:45;;4587:4;:11;;;4580:18;;;4407:198;;;;:::o;1869:27::-;;;;:::o;2641:401::-;2728:12;;2710:15;:30;2689:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;2810:67;2841:10;2862:4;2869:7;2810:5;;;;;;;;;;;:22;;;;:67;;;;;;:::i;:::-;2890:17;2911:31;2926:15;;2911:7;:14;;:31;;;;:::i;:::-;2887:55;;;2968:9;2952:12;;:25;;;;;;;:::i;:::-;;;;;;;;3007:28;3027:7;3007:12;;:19;;:28;;;;:::i;:::-;2988:47;;2991:12;;2988:47;;;;;;2679:363;2641:401;:::o;8500:1049::-;8565:21;8589:8;8598:4;8589:14;;;;;;;;:::i;:::-;;;;;;;;;;;;8565:38;;8613:21;8637:8;:14;8646:4;8637:14;;;;;;;;;;;:26;8652:10;8637:26;;;;;;;;;;;;;;;8613:50;;8674:16;8685:4;8674:10;:16::i;:::-;8719:1;8705:4;:11;;;:15;8701:464;;;8930:18;8952:71;8988:4;:21;;;8952:4;:11;;;:18;;:71;;;;:::i;:::-;8927:96;;;9040:21;9065:34;9083:4;:15;;;9065:10;:17;;:34;;;;:::i;:::-;9037:62;;;9114:40;9128:10;9140:13;9114;:40::i;:::-;8722:443;;8701:464;9175:120;9226:10;9259:4;9278:7;9175:4;:12;;;;;;;;;;;;:29;;;;:120;;;;;;:::i;:::-;9330:34;9356:7;9330:4;:18;;;:25;;:34;;;;:::i;:::-;9305:59;;9308:4;:18;;;9305:59;;;;;;9393:27;9412:7;9393:4;:11;;;:18;;:27;;;;:::i;:::-;9375:45;;9378:4;:11;;;9375:45;;;;;;9452:41;9471:4;:21;;;9452:4;:11;;;:18;;:41;;;;:::i;:::-;9430:63;;9433:4;:15;;;9430:63;;;;;;9528:4;9516:10;9508:34;;;9534:7;9508:34;;;;;;:::i;:::-;;;;;;;;8555:994;;8500:1049;;:::o;4666:1674::-;4759:7;4782:21;4806:8;4815:4;4806:14;;;;;;;;:::i;:::-;;;;;;;;;;;;4782:38;;4830:21;4854:8;:14;4863:4;4854:14;;;;;;;;;;;:21;4869:5;4854:21;;;;;;;;;;;;;;;4830:45;;4885:24;4912:4;:21;;;4885:48;;4943:18;4964:4;:11;;;4943:32;;4986:16;5005:4;:18;;;4986:37;;5056:4;:24;;;5038:15;:42;:59;;;;;5096:1;5084:8;:13;;5038:59;5034:1138;;;5113:21;5155:12;;5137:15;:30;:95;;5220:12;;5137:95;;;5186:15;5137:95;5113:119;;5246:26;5302:12;;5275:4;:24;;;:39;:113;;5376:12;;5275:113;;;5333:4;:24;;;5275:113;5246:142;;5784:19;5807:40;5828:18;5807:13;:20;;:40;;;;:::i;:::-;5781:66;;;5864:19;5887:35;5906:15;;5887:11;:18;;:35;;;;:::i;:::-;5861:61;;;5950:52;5969:4;:15;;;5986;;5950:11;:18;;:52;;;;;:::i;:::-;5936:66;;6020:27;6051:28;6070:8;6051:11;:18;;:28;;;;:::i;:::-;6017:62;;;6117:44;6141:19;6117:16;:23;;:44;;;;:::i;:::-;6094:67;;;;;;5099:1073;;;;;5034:1138;6185:19;6208:35;6226:16;6208:10;:17;;:35;;;;:::i;:::-;6182:61;;;6256:14;6274:35;6293:4;:15;;;6274:11;:18;;:35;;;;:::i;:::-;6253:56;;;6327:6;6320:13;;;;;;;;;4666:1674;;;;:::o;1794:29::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;585:216:6:-;646:4;652:7;695:9;711:1;707;:5;695:17;;734:1;730;:5;726:28;;;745:5;752:1;737:17;;;;;;;726:28;776:4;782:1;768:16;;;;;585:216;;;;;;:::o;1207:493::-;1268:4;1274:7;1556:1;1551;:6;1547:28;;1567:4;1573:1;1559:16;;;;;;1547:28;1589:9;1605:1;1601;:5;1589:17;;1633:1;1628;1624;:5;;;;;:::i;:::-;;;:10;1620:33;;1644:5;1651:1;1636:17;;;;;;;1620:33;1675:4;1681:1;1667:16;;;;;1207:493;;;;;;:::o;908:189::-;969:4;975:7;1026:1;1022;:5;1018:28;;;1037:5;1044:1;1029:17;;;;;;1018:28;1068:4;1078:1;1074;:5;1060:20;;;;908:189;;;;;;:::o;11282:135:7:-;11354:5;;;;;;;;;;;:14;;;11369:3;11374:7;11354:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11403:7;11392;;:18;;;;;;;:::i;:::-;;;;;;;;11282:135;;:::o;1303:160:3:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;3803:4116:6:-;3885:14;4232:13;4252:1;4248;:5;4232:21;;4312:13;4437:1;4433:6;4430:1;4427;4420:20;4493:5;4489:2;4486:13;4478:5;4474:2;4470:14;4466:34;4457:43;;4392:122;4604:1;4595:5;:10;4591:368;;4933:11;4925:5;:19;;;;;:::i;:::-;;;4918:26;;;;;;4591:368;5080:5;5065:11;:20;5061:88;;5112:22;;;;;;;;;;;;;;5061:88;5404:17;5539:11;5536:1;5533;5526:25;5513:38;;5667:5;5656:9;5653:20;5646:5;5642:32;5633:41;;5711:9;5704:5;5700:21;5691:30;;5939:12;5973:11;5969:1;:15;5954:11;:31;5939:46;;6105:4;6092:11;6088:22;6073:37;;6197:4;6190:5;6186:16;6177:25;;6354:1;6347:4;6340;6337:1;6333:12;6329:23;6325:31;6317:39;;6453:4;6445:5;:12;6436:21;;;;6775:15;6813:1;6798:11;6794:1;:15;6793:21;6775:39;;7060:7;7046:11;:21;7042:1;:25;7031:36;;;;7129:7;7115:11;:21;7111:1;:25;7100:36;;;;7199:7;7185:11;:21;7181:1;:25;7170:36;;;;7269:7;7255:11;:21;7251:1;:25;7240:36;;;;7339:7;7325:11;:21;7321:1;:25;7310:36;;;;7410:7;7396:11;:21;7392:1;:25;7381:36;;;;7868:7;7860:5;:15;7851:24;;7889:13;;;;;3803:4116;;;;;;:::o;1811:190::-;1872:4;1878:7;1930:1;1925;:6;1921:29;;1941:5;1948:1;1933:17;;;;;;1921:29;1972:4;1982:1;1978;:5;;;;;:::i;:::-;;;1964:20;;;;1811:190;;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1702:188:3:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;4059:629:3:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:4:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:8;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:140::-;1919:9;1952:37;1983:5;1952:37;:::i;:::-;1939:50;;1855:140;;;:::o;2001:159::-;2102:51;2147:5;2102:51;:::i;:::-;2097:3;2090:64;2001:159;;:::o;2166:692::-;2385:4;2423:3;2412:9;2408:19;2400:27;;2437:85;2519:1;2508:9;2504:17;2495:6;2437:85;:::i;:::-;2532:72;2600:2;2589:9;2585:18;2576:6;2532:72;:::i;:::-;2614;2682:2;2671:9;2667:18;2658:6;2614:72;:::i;:::-;2696;2764:2;2753:9;2749:18;2740:6;2696:72;:::i;:::-;2778:73;2846:3;2835:9;2831:19;2822:6;2778:73;:::i;:::-;2166:692;;;;;;;;:::o;2864:96::-;2901:7;2930:24;2948:5;2930:24;:::i;:::-;2919:35;;2864:96;;;:::o;2966:110::-;3017:7;3046:24;3064:5;3046:24;:::i;:::-;3035:35;;2966:110;;;:::o;3082:150::-;3169:38;3201:5;3169:38;:::i;:::-;3162:5;3159:49;3149:77;;3222:1;3219;3212:12;3149:77;3082:150;:::o;3238:167::-;3298:5;3336:6;3323:20;3314:29;;3352:47;3393:5;3352:47;:::i;:::-;3238:167;;;;:::o;3411:90::-;3445:7;3488:5;3481:13;3474:21;3463:32;;3411:90;;;:::o;3507:116::-;3577:21;3592:5;3577:21;:::i;:::-;3570:5;3567:32;3557:60;;3613:1;3610;3603:12;3557:60;3507:116;:::o;3629:133::-;3672:5;3710:6;3697:20;3688:29;;3726:30;3750:5;3726:30;:::i;:::-;3629:133;;;;:::o;3768:641::-;3856:6;3864;3872;3921:2;3909:9;3900:7;3896:23;3892:32;3889:119;;;3927:79;;:::i;:::-;3889:119;4047:1;4072:53;4117:7;4108:6;4097:9;4093:22;4072:53;:::i;:::-;4062:63;;4018:117;4174:2;4200:67;4259:7;4250:6;4239:9;4235:22;4200:67;:::i;:::-;4190:77;;4145:132;4316:2;4342:50;4384:7;4375:6;4364:9;4360:22;4342:50;:::i;:::-;4332:60;;4287:115;3768:641;;;;;:::o;4415:474::-;4483:6;4491;4540:2;4528:9;4519:7;4515:23;4511:32;4508:119;;;4546:79;;:::i;:::-;4508:119;4666:1;4691:53;4736:7;4727:6;4716:9;4712:22;4691:53;:::i;:::-;4681:63;;4637:117;4793:2;4819:53;4864:7;4855:6;4844:9;4840:22;4819:53;:::i;:::-;4809:63;;4764:118;4415:474;;;;;:::o;4895:613::-;4969:6;4977;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;5415:2;5441:50;5483:7;5474:6;5463:9;5459:22;5441:50;:::i;:::-;5431:60;;5386:115;4895:613;;;;;:::o;5514:250::-;5621:4;5659:2;5648:9;5644:18;5636:26;;5672:85;5754:1;5743:9;5739:17;5730:6;5672:85;:::i;:::-;5514:250;;;;:::o;5770:118::-;5857:24;5875:5;5857:24;:::i;:::-;5852:3;5845:37;5770:118;;:::o;5894:222::-;5987:4;6025:2;6014:9;6010:18;6002:26;;6038:71;6106:1;6095:9;6091:17;6082:6;6038:71;:::i;:::-;5894:222;;;;:::o;6122:122::-;6195:24;6213:5;6195:24;:::i;:::-;6188:5;6185:35;6175:63;;6234:1;6231;6224:12;6175:63;6122:122;:::o;6250:139::-;6296:5;6334:6;6321:20;6312:29;;6350:33;6377:5;6350:33;:::i;:::-;6250:139;;;;:::o;6395:474::-;6463:6;6471;6520:2;6508:9;6499:7;6495:23;6491:32;6488:119;;;6526:79;;:::i;:::-;6488:119;6646:1;6671:53;6716:7;6707:6;6696:9;6692:22;6671:53;:::i;:::-;6661:63;;6617:117;6773:2;6799:53;6844:7;6835:6;6824:9;6820:22;6799:53;:::i;:::-;6789:63;;6744:118;6395:474;;;;;:::o;6875:332::-;6996:4;7034:2;7023:9;7019:18;7011:26;;7047:71;7115:1;7104:9;7100:17;7091:6;7047:71;:::i;:::-;7128:72;7196:2;7185:9;7181:18;7172:6;7128:72;:::i;:::-;6875:332;;;;;:::o;7213:329::-;7272:6;7321:2;7309:9;7300:7;7296:23;7292:32;7289:119;;;7327:79;;:::i;:::-;7289:119;7447:1;7472:53;7517:7;7508:6;7497:9;7493:22;7472:53;:::i;:::-;7462:63;;7418:117;7213:329;;;;:::o;7548:180::-;7596:77;7593:1;7586:88;7693:4;7690:1;7683:15;7717:4;7714:1;7707:15;7734:194;7774:4;7794:20;7812:1;7794:20;:::i;:::-;7789:25;;7828:20;7846:1;7828:20;:::i;:::-;7823:25;;7872:1;7869;7865:9;7857:17;;7896:1;7890:4;7887:11;7884:37;;;7901:18;;:::i;:::-;7884:37;7734:194;;;;:::o;7934:180::-;7982:77;7979:1;7972:88;8079:4;8076:1;8069:15;8103:4;8100:1;8093:15;8120:169;8204:11;8238:6;8233:3;8226:19;8278:4;8273:3;8269:14;8254:29;;8120:169;;;;:::o;8295:229::-;8435:34;8431:1;8423:6;8419:14;8412:58;8504:12;8499:2;8491:6;8487:15;8480:37;8295:229;:::o;8530:366::-;8672:3;8693:67;8757:2;8752:3;8693:67;:::i;:::-;8686:74;;8769:93;8858:3;8769:93;:::i;:::-;8887:2;8882:3;8878:12;8871:19;;8530:366;;;:::o;8902:419::-;9068:4;9106:2;9095:9;9091:18;9083:26;;9155:9;9149:4;9145:20;9141:1;9130:9;9126:17;9119:47;9183:131;9309:4;9183:131;:::i;:::-;9175:139;;8902:419;;;:::o;9327:221::-;9467:34;9463:1;9455:6;9451:14;9444:58;9536:4;9531:2;9523:6;9519:15;9512:29;9327:221;:::o;9554:366::-;9696:3;9717:67;9781:2;9776:3;9717:67;:::i;:::-;9710:74;;9793:93;9882:3;9793:93;:::i;:::-;9911:2;9906:3;9902:12;9895:19;;9554:366;;;:::o;9926:419::-;10092:4;10130:2;10119:9;10115:18;10107:26;;10179:9;10173:4;10169:20;10165:1;10154:9;10150:17;10143:47;10207:131;10333:4;10207:131;:::i;:::-;10199:139;;9926:419;;;:::o;10351:191::-;10391:3;10410:20;10428:1;10410:20;:::i;:::-;10405:25;;10444:20;10462:1;10444:20;:::i;:::-;10439:25;;10487:1;10484;10480:9;10473:16;;10508:3;10505:1;10502:10;10499:36;;;10515:18;;:::i;:::-;10499:36;10351:191;;;;:::o;10548:180::-;10596:77;10593:1;10586:88;10693:4;10690:1;10683:15;10717:4;10714:1;10707:15;10734:332;10855:4;10893:2;10882:9;10878:18;10870:26;;10906:71;10974:1;10963:9;10959:17;10950:6;10906:71;:::i;:::-;10987:72;11055:2;11044:9;11040:18;11031:6;10987:72;:::i;:::-;10734:332;;;;;:::o;11072:137::-;11126:5;11157:6;11151:13;11142:22;;11173:30;11197:5;11173:30;:::i;:::-;11072:137;;;;:::o;11215:345::-;11282:6;11331:2;11319:9;11310:7;11306:23;11302:32;11299:119;;;11337:79;;:::i;:::-;11299:119;11457:1;11482:61;11535:7;11526:6;11515:9;11511:22;11482:61;:::i;:::-;11472:71;;11428:125;11215:345;;;;:::o;11566:442::-;11715:4;11753:2;11742:9;11738:18;11730:26;;11766:71;11834:1;11823:9;11819:17;11810:6;11766:71;:::i;:::-;11847:72;11915:2;11904:9;11900:18;11891:6;11847:72;:::i;:::-;11929;11997:2;11986:9;11982:18;11973:6;11929:72;:::i;:::-;11566:442;;;;;;:::o;12014:98::-;12065:6;12099:5;12093:12;12083:22;;12014:98;;;:::o;12118:147::-;12219:11;12256:3;12241:18;;12118:147;;;;:::o;12271:246::-;12352:1;12362:113;12376:6;12373:1;12370:13;12362:113;;;12461:1;12456:3;12452:11;12446:18;12442:1;12437:3;12433:11;12426:39;12398:2;12395:1;12391:10;12386:15;;12362:113;;;12509:1;12500:6;12495:3;12491:16;12484:27;12333:184;12271:246;;;:::o;12523:386::-;12627:3;12655:38;12687:5;12655:38;:::i;:::-;12709:88;12790:6;12785:3;12709:88;:::i;:::-;12702:95;;12806:65;12864:6;12859:3;12852:4;12845:5;12841:16;12806:65;:::i;:::-;12896:6;12891:3;12887:16;12880:23;;12631:278;12523:386;;;;:::o;12915:271::-;13045:3;13067:93;13156:3;13147:6;13067:93;:::i;:::-;13060:100;;13177:3;13170:10;;12915:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1636600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"add(uint256,address,bool)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"deposited(uint256,address)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"endTimestamp()": "2447",
								"erc20()": "infinite",
								"fund(uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"owner()": "2582",
								"paidOut()": "2514",
								"pending(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2464",
								"renounceOwnership()": "infinite",
								"rewardPerSecond()": "2514",
								"set(uint256,uint256,bool)": "infinite",
								"startTimestamp()": "2535",
								"totalAllocPoint()": "2515",
								"totalPending()": "infinite",
								"totalRewards()": "2471",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"erc20Transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 406,
									"end": 11419,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2179,
									"end": 2465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2296,
									"end": 2306,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2326,
									"end": 2332,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2323,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2318,
									"end": 2323,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2332,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2376,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2357,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2342,
									"end": 2376,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2376,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2376,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2376,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2403,
									"end": 2418,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2386,
									"end": 2418,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2418,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2418,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2418,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2458,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2440,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2428,
									"end": 2458,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2458,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2458,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2458,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1173,
									"end": 1197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1166,
									"end": 1171,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1163,
									"end": 1198,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1285,
									"end": 1290,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1310,
									"end": 1323,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1332,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1479,
									"end": 1485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1493,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1495,
									"end": 1501,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1532,
									"end": 1541,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1523,
									"end": 1530,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1542,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1515,
									"end": 1547,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1550,
									"end": 1629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1670,
									"end": 1671,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1765,
									"end": 1772,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1756,
									"end": 1762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1741,
									"end": 1763,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1695,
									"end": 1773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1685,
									"end": 1773,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1685,
									"end": 1773,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1641,
									"end": 1783,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1824,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1904,
									"end": 1911,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1901,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1884,
									"end": 1893,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1880,
									"end": 1902,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1848,
									"end": 1912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1838,
									"end": 1912,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1838,
									"end": 1912,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1793,
									"end": 1922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1961,
									"end": 1963,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2043,
									"end": 2050,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2023,
									"end": 2032,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2041,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1987,
									"end": 2051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1977,
									"end": 2051,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1977,
									"end": 2051,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1932,
									"end": 2061,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1377,
									"end": 2068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2179,
									"end": 2184,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 2161,
									"end": 2185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2156,
									"end": 2159,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2149,
									"end": 2186,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2074,
									"end": 2192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2291,
									"end": 2295,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2329,
									"end": 2331,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2318,
									"end": 2327,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2332,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2306,
									"end": 2332,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2306,
									"end": 2332,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2399,
									"end": 2408,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2395,
									"end": 2412,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2392,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 2342,
									"end": 2413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 11419,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203852f52e7b5a406fec373a239aa07d0230e1a99afacb40ddd9a7e2ed48e9882564736f6c63430008180033",
									".code": [
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "A85ADEAB"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "A85ADEAB"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "CA1D209D"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "E2BBB158"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "E4C75C27"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "E6FD48BC"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "785E9E86"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "8F10369A"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "93F1A40B"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "A2383106"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "441A3E70"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "441A3E70"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "51EB05A6"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "5312EA8E"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "5C76CA2D"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "630B5BA1"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "64482F79"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "81E3EDA"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "E15561A"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "1526FE27"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "17CAF6F1"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "1EAAA045"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "3F90916A"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 406,
											"end": 11419,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2497,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2497,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1419,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1419,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1478,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3203,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3203,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 6413,
											"end": 6870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 6413,
											"end": 6870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 9592,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9592,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7198,
											"end": 8439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 7198,
											"end": 8439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 10662,
											"end": 11202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 10662,
											"end": 11202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1279,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1279,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6950,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3962,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3962,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1194,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1194,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1348,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1348,
											"end": 1378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1558,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1558,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1558,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4407,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4407,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4407,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1869,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1869,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2641,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2641,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8500,
											"end": 9549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 8500,
											"end": 9549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4666,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4666,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4666,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1794,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1794,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2576,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2568,
											"end": 2583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2583,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2497,
											"end": 2590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3388,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 3329,
											"end": 3388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3360,
											"end": 3375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3360,
											"end": 3377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3360,
											"end": 3377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 3329,
											"end": 3388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3397,
											"end": 3424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3445,
											"end": 3459,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3442,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3459,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3427,
											"end": 3518,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3504,
											"end": 3518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3504,
											"end": 3518,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3427,
											"end": 3518,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3427,
											"end": 3518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3474,
											"end": 3489,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3427,
											"end": 3518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3397,
											"end": 3518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3397,
											"end": 3518,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3573,
											"end": 3584,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3550,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 3550,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3550,
											"end": 3585,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3550,
											"end": 3585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3585,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3531,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3531,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3585,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3585,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3585,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3585,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3658,
											"end": 3666,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3696,
											"end": 3707,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3765,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6516,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6502,
											"end": 6516,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6498,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6516,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6479,
											"end": 6551,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6532,
											"end": 6540,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6551,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6479,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6615,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6603,
											"end": 6615,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6600,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6615,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6585,
											"end": 6672,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6672,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6660,
											"end": 6672,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6585,
											"end": 6672,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6672,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6585,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6630,
											"end": 6645,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6672,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6585,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6672,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6759,
											"end": 6773,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6759,
											"end": 6773,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6756,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6743,
											"end": 6773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6743,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6707,
											"end": 6722,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6783,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6707,
											"end": 6783,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6783,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6707,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6783,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6796,
											"end": 6810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6814,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6831,
											"end": 6838,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6831,
											"end": 6838,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6814,
											"end": 6830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6839,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6814,
											"end": 6839,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 6839,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6814,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9658,
											"end": 9679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9690,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9691,
											"end": 9695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 9682,
											"end": 9696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9658,
											"end": 9696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9658,
											"end": 9696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9706,
											"end": 9727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9730,
											"end": 9738,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9739,
											"end": 9743,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9730,
											"end": 9744,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9755,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9730,
											"end": 9756,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9706,
											"end": 9756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9706,
											"end": 9756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9802,
											"end": 9809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9798,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9809,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9809,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 9766,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9766,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9898,
											"end": 9902,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9887,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 9887,
											"end": 9903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9887,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9917,
											"end": 9935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9939,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9958,
											"end": 9962,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9943,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9939,
											"end": 9950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9950,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 9939,
											"end": 9957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9980,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9939,
											"end": 9980,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9980,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9939,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9914,
											"end": 9980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9914,
											"end": 9980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9914,
											"end": 9980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9993,
											"end": 10014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 10036,
											"end": 10040,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10036,
											"end": 10051,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10036,
											"end": 10051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10036,
											"end": 10051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10028,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10018,
											"end": 10035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 10248,
											"end": 10258,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10260,
											"end": 10273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 10234,
											"end": 10274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10274,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 10234,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10321,
											"end": 10328,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10306,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10302,
											"end": 10313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10313,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10302,
											"end": 10320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10329,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10302,
											"end": 10329,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10302,
											"end": 10329,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10302,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10287,
											"end": 10298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10287,
											"end": 10298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10287,
											"end": 10298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10284,
											"end": 10329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10329,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10380,
											"end": 10384,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10401,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10380,
											"end": 10401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10380,
											"end": 10401,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10365,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10361,
											"end": 10372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10372,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10402,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10361,
											"end": 10402,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10402,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10361,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10342,
											"end": 10346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10342,
											"end": 10357,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10342,
											"end": 10357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10342,
											"end": 10357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 10446,
											"end": 10456,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10459,
											"end": 10466,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10412,
											"end": 10424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10437,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10412,
											"end": 10437,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10412,
											"end": 10437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10467,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10467,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10412,
											"end": 10467,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10467,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 10412,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 10528,
											"end": 10535,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10506,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10520,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10502,
											"end": 10520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10520,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10502,
											"end": 10527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 10502,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10536,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10536,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10573,
											"end": 10577,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10561,
											"end": 10571,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "PUSH",
											"source": 7,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 10579,
											"end": 10586,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 10552,
											"end": 10587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10552,
											"end": 10587,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 10594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 10594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 10594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9648,
											"end": 10594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 10594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7281,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 7273,
											"end": 7287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7297,
											"end": 7318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7339,
											"end": 7351,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7339,
											"end": 7351,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7336,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7351,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7321,
											"end": 7408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7408,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7396,
											"end": 7408,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7321,
											"end": 7408,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7408,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7321,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7408,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7321,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7297,
											"end": 7408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7297,
											"end": 7408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7464,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7440,
											"end": 7464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7440,
											"end": 7464,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7423,
											"end": 7464,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7419,
											"end": 7497,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7480,
											"end": 7487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7480,
											"end": 7487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7480,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7480,
											"end": 7487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7497,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7419,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7506,
											"end": 7522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7506,
											"end": 7543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7506,
											"end": 7543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7558,
											"end": 7571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7554,
											"end": 7658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7591,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7611,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7587,
											"end": 7611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7627,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7641,
											"end": 7648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7641,
											"end": 7648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7641,
											"end": 7648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7641,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7641,
											"end": 7648,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7658,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7554,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7728,
											"end": 7732,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7752,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7728,
											"end": 7752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7752,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7707,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7694,
											"end": 7714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7762,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7694,
											"end": 7762,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7762,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7694,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7776,
											"end": 7795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7799,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7818,
											"end": 7833,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7818,
											"end": 7833,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7810,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7799,
											"end": 7817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7834,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7834,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7799,
											"end": 7834,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7834,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7799,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7773,
											"end": 7834,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7773,
											"end": 7834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7773,
											"end": 7834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 7893,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7878,
											"end": 7893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 7893,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7895,
											"end": 7910,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7859,
											"end": 7877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7911,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7859,
											"end": 7911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7911,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7859,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7975,
											"end": 7983,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7967,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7984,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7956,
											"end": 7984,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7984,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7956,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8065,
											"end": 8084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8027,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8044,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8023,
											"end": 8044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8044,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 8023,
											"end": 8051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8094,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8023,
											"end": 8094,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 8023,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7998,
											"end": 8002,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7998,
											"end": 8019,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7998,
											"end": 8019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7998,
											"end": 8019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7995,
											"end": 8094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8094,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8432,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8394,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8414,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8390,
											"end": 8414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8432,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 8439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 8439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 8439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 8439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 8439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 8439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 8439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10720,
											"end": 10741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10752,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10753,
											"end": 10757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 10744,
											"end": 10758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10720,
											"end": 10758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10720,
											"end": 10758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10800,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10801,
											"end": 10805,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10806,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10807,
											"end": 10817,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10818,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 10862,
											"end": 10872,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10886,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10832,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10828,
											"end": 10853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10887,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10887,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10887,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10887,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10887,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10887,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 10828,
											"end": 10887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 11017,
											"end": 11021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11017,
											"end": 11028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11017,
											"end": 11028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11017,
											"end": 11028,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 10995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 10991,
											"end": 11016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11029,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10991,
											"end": 11029,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10991,
											"end": 11029,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 10991,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10969,
											"end": 10973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 11029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11029,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 11029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11072,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "PUSH",
											"source": 7,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11080,
											"end": 11091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 11091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11080,
											"end": 11091,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 11044,
											"end": 11092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11092,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11117,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11134,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 11202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 11202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6950,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7019,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7011,
											"end": 7026,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7011,
											"end": 7026,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7011,
											"end": 7026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7011,
											"end": 7026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7061,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7070,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7093,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 7093,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7093,
											"end": 7108,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7093,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7077,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7077,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7072,
											"end": 7077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6984,
											"end": 7125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4100,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4085,
											"end": 4144,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4116,
											"end": 4131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4116,
											"end": 4133,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4116,
											"end": 4133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4085,
											"end": 4144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4198,
											"end": 4206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4207,
											"end": 4211,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4198,
											"end": 4212,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4212,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4198,
											"end": 4223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4223,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4175,
											"end": 4190,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4175,
											"end": 4197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4175,
											"end": 4224,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4224,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4175,
											"end": 4224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4224,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4156,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4224,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4224,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4224,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4280,
											"end": 4291,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4257,
											"end": 4272,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4257,
											"end": 4279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4292,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4257,
											"end": 4292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4292,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4257,
											"end": 4292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4292,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4238,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4292,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4292,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4292,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4292,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4235,
											"end": 4292,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4311,
											"end": 4315,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4302,
											"end": 4316,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4316,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4302,
											"end": 4327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4341,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4341,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 4348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4546,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4557,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4562,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4563,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4569,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4570,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2725,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2740,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2689,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2689,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2810,
											"end": 2815,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2810,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2926,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2926,
											"end": 2941,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2911,
											"end": 2925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2911,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2952,
											"end": 2964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2952,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3027,
											"end": 3034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 3007,
											"end": 3026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3035,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3007,
											"end": 3035,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3035,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3007,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2991,
											"end": 3003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 3042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8598,
											"end": 8602,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 8589,
											"end": 8603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8645,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8650,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8651,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8652,
											"end": 8662,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 8674,
											"end": 8690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8690,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 8674,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8719,
											"end": 8720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8716,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8720,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8701,
											"end": 9165,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8701,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 8701,
											"end": 9165,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8930,
											"end": 8948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8952,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 8988,
											"end": 8992,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8988,
											"end": 9009,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8988,
											"end": 9009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8988,
											"end": 9009,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8952,
											"end": 8963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8963,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 9023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 9023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 9023,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8952,
											"end": 9023,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 9023,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 8952,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 9023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 9023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 9023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9040,
											"end": 9061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9083,
											"end": 9087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9083,
											"end": 9098,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9083,
											"end": 9098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9083,
											"end": 9098,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9075,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 9065,
											"end": 9082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9037,
											"end": 9099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9037,
											"end": 9099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9037,
											"end": 9099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 9128,
											"end": 9138,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9140,
											"end": 9153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 9114,
											"end": 9154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9154,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 9114,
											"end": 9154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8722,
											"end": 9165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8722,
											"end": 9165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8701,
											"end": 9165,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 8701,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 9226,
											"end": 9236,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9259,
											"end": 9263,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 9278,
											"end": 9285,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9179,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9175,
											"end": 9187,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9204,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9175,
											"end": 9204,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 9175,
											"end": 9204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 9175,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 9356,
											"end": 9363,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9334,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9348,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9330,
											"end": 9355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9364,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9330,
											"end": 9364,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9364,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 9330,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9364,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 9412,
											"end": 9419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9404,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9404,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9393,
											"end": 9411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9420,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9420,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9393,
											"end": 9420,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9420,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 9393,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9378,
											"end": 9389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9378,
											"end": 9389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9375,
											"end": 9420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9420,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9420,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 9471,
											"end": 9475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9492,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9471,
											"end": 9492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9492,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9463,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9493,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9452,
											"end": 9493,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9493,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 9452,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9448,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9433,
											"end": 9448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9493,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9528,
											"end": 9532,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9526,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "PUSH",
											"source": 7,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 9508,
											"end": 9542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 9549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4814,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4815,
											"end": 4819,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4806,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4830,
											"end": 4851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4862,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4868,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4874,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4830,
											"end": 4875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4830,
											"end": 4875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4933,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4912,
											"end": 4933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4933,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4975,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5009,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4986,
											"end": 5023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5060,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5080,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5056,
											"end": 5080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5080,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5053,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5080,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5038,
											"end": 5097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5092,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5084,
											"end": 5097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5084,
											"end": 5097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5097,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5038,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 6172,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5034,
											"end": 6172,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5134,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5167,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5155,
											"end": 5167,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5152,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5167,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5137,
											"end": 5232,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5137,
											"end": 5232,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5232,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5137,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5201,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5232,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5137,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5314,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5302,
											"end": 5314,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5279,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5314,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5275,
											"end": 5388,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5376,
											"end": 5388,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5275,
											"end": 5388,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5388,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5275,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5357,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5333,
											"end": 5357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5333,
											"end": 5357,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5388,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5275,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5828,
											"end": 5846,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 5820,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 5807,
											"end": 5827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 5847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5906,
											"end": 5921,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5906,
											"end": 5921,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5898,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5887,
											"end": 5905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5922,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5922,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5887,
											"end": 5922,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5922,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5887,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5922,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5969,
											"end": 5973,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5984,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5969,
											"end": 5984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5984,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6001,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5986,
											"end": 6001,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5950,
											"end": 5968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6002,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 6002,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6002,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5950,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 6002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 6002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6070,
											"end": 6078,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6079,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6079,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6051,
											"end": 6079,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6079,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6051,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6079,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6133,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6117,
											"end": 6140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6161,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6161,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6117,
											"end": 6161,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6161,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6117,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 6172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 6172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 6172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 6172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 6172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 6172,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5034,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6226,
											"end": 6242,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6218,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6208,
											"end": 6225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6243,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6243,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6208,
											"end": 6243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6243,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6208,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6243,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6256,
											"end": 6270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6293,
											"end": 6308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6293,
											"end": 6308,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6285,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6309,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6309,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6274,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 6340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 801,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 585,
											"end": 801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 646,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 695,
											"end": 704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 707,
											"end": 708,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 707,
											"end": 712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 695,
											"end": 712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 695,
											"end": 712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 734,
											"end": 735,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 730,
											"end": 731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 735,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 726,
											"end": 754,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 726,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 726,
											"end": 754,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 737,
											"end": 754,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 737,
											"end": 754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 737,
											"end": 754,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 737,
											"end": 754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 737,
											"end": 754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 737,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 737,
											"end": 754,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 726,
											"end": 754,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 726,
											"end": 754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 776,
											"end": 780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 768,
											"end": 784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 768,
											"end": 784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 768,
											"end": 784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 768,
											"end": 784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 768,
											"end": 784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 585,
											"end": 801,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 585,
											"end": 801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 585,
											"end": 801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 585,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 585,
											"end": 801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 585,
											"end": 801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 585,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 585,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1557,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1624,
											"end": 1629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1629,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 1620,
											"end": 1653,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1653,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 1620,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1681,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 969,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1027,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1078,
											"end": 1079,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 908,
											"end": 1097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 908,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11417,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 11282,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 11369,
											"end": 11372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11374,
											"end": 11381,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 11354,
											"end": 11382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11354,
											"end": 11382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11403,
											"end": 11410,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11399,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11392,
											"end": 11399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 11392,
											"end": 11410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4245,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4253,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4253,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "MULMOD",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4499,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4466,
											"end": 4500,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4392,
											"end": 4514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4591,
											"end": 4959,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4925,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4959,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4591,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5076,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5061,
											"end": 5149,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "227BC15300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5149,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5061,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5539,
											"end": 5550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5534,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5551,
											"name": "MULMOD",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5667,
											"end": 5672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 5673,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5646,
											"end": 5651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5642,
											"end": 5674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5711,
											"end": 5720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 5709,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5700,
											"end": 5721,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5721,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5721,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 5951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5984,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5984,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 5965,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 5985,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 5985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 5985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6103,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6088,
											"end": 6110,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6110,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6201,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6190,
											"end": 6195,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6186,
											"end": 6202,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6202,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6354,
											"end": 6355,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6352,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6457,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6457,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6775,
											"end": 6790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6798,
											"end": 6809,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6794,
											"end": 6795,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6794,
											"end": 6809,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6814,
											"name": "XOR",
											"source": 6
										},
										{
											"begin": 6775,
											"end": 6814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6775,
											"end": 6814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7057,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7067,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7042,
											"end": 7043,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7067,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7136,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7126,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7136,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7111,
											"end": 7136,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7206,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7196,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7206,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7182,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7206,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7269,
											"end": 7276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7255,
											"end": 7266,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7255,
											"end": 7276,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7252,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7346,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7325,
											"end": 7336,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7325,
											"end": 7346,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7321,
											"end": 7346,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7310,
											"end": 7346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7310,
											"end": 7346,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7310,
											"end": 7346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7310,
											"end": 7346,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7396,
											"end": 7407,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7396,
											"end": 7417,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7393,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7392,
											"end": 7417,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7868,
											"end": 7875,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7860,
											"end": 7865,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7860,
											"end": 7875,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7875,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 7919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1885,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1933,
											"end": 1950,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1976,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1978,
											"end": 1983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 2001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 2001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1952,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2102,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2154,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2426,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2400,
											"end": 2427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2400,
											"end": 2427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2501,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2437,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2437,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2600,
											"end": 2602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2532,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2604,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 2532,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2614,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2664,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2614,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2614,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2614,
											"end": 2686,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 2614,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2764,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2753,
											"end": 2762,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 2746,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2696,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2846,
											"end": 2849,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2778,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2851,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2778,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 2930,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2954,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3064,
											"end": 3069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3046,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3070,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 3046,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3232,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 3082,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3201,
											"end": 3206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 3169,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3207,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3169,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3162,
											"end": 3167,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3149,
											"end": 3226,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3223,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3224,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3226,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3149,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3343,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3314,
											"end": 3343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3314,
											"end": 3343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3393,
											"end": 3398,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 3352,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3474,
											"end": 3495,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3623,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 3507,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 3592,
											"end": 3597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3577,
											"end": 3598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3567,
											"end": 3599,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 3557,
											"end": 3617,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3617,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 3557,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3697,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 3750,
											"end": 3755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 3726,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3872,
											"end": 3878,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3909,
											"end": 3918,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3924,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3927,
											"end": 4006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4047,
											"end": 4048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 4117,
											"end": 4124,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4093,
											"end": 4115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4072,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4125,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4062,
											"end": 4125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4018,
											"end": 4135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4176,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4200,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 4259,
											"end": 4266,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4239,
											"end": 4248,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 4200,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4267,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 4200,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4267,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 4277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4318,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4384,
											"end": 4391,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4342,
											"end": 4392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4392,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4342,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4332,
											"end": 4392,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4332,
											"end": 4392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 4409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4540,
											"end": 4542,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4538,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4511,
											"end": 4543,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 4546,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 4546,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4546,
											"end": 4625,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 4546,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4691,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 4736,
											"end": 4743,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4725,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4712,
											"end": 4734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4691,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4744,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 4691,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4637,
											"end": 4754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 4795,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4864,
											"end": 4871,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4855,
											"end": 4861,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4844,
											"end": 4853,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4819,
											"end": 4872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4872,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4819,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4764,
											"end": 4882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5036,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5032,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5037,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5040,
											"end": 5119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 5230,
											"end": 5237,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5185,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5175,
											"end": 5238,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5175,
											"end": 5238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5313,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 5358,
											"end": 5365,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5355,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5347,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 5313,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5366,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 5313,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5366,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 5483,
											"end": 5490,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5474,
											"end": 5480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5472,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5459,
											"end": 5481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 5441,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5491,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 5441,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5386,
											"end": 5501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 5508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5661,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 5754,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5752,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5739,
											"end": 5756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5672,
											"end": 5757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5757,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 5672,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5888,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5770,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 5875,
											"end": 5880,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5857,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5881,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 5857,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5882,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 5991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6027,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6014,
											"end": 6023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6010,
											"end": 6028,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 6106,
											"end": 6107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6108,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6088,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 6038,
											"end": 6109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6109,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 6038,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 6116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6244,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 6122,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6195,
											"end": 6219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6188,
											"end": 6193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6220,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6232,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6236,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6321,
											"end": 6341,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6312,
											"end": 6341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6312,
											"end": 6341,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6350,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6350,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 6350,
											"end": 6383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6350,
											"end": 6383,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 6350,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6477,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6520,
											"end": 6522,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6499,
											"end": 6506,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6518,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6491,
											"end": 6523,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6526,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 6526,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6526,
											"end": 6605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6526,
											"end": 6605,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 6526,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6646,
											"end": 6647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 6716,
											"end": 6723,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6692,
											"end": 6714,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6671,
											"end": 6724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6724,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 6671,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6661,
											"end": 6724,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6661,
											"end": 6724,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6773,
											"end": 6775,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6799,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 6841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6820,
											"end": 6842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6799,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6852,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 6799,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6789,
											"end": 6852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6789,
											"end": 6852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6744,
											"end": 6862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7036,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7115,
											"end": 7116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7113,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7097,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 7047,
											"end": 7118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 7196,
											"end": 7198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7194,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 7128,
											"end": 7200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7200,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 7128,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7323,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7296,
											"end": 7319,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7324,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7327,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 7327,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 7327,
											"end": 7406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7327,
											"end": 7406,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 7327,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7447,
											"end": 7448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 7517,
											"end": 7524,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7506,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7493,
											"end": 7515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 7472,
											"end": 7525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7525,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 7472,
											"end": 7525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7213,
											"end": 7542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7548,
											"end": 7728,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 7548,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7596,
											"end": 7673,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7593,
											"end": 7594,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7683,
											"end": 7698,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7721,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7722,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7928,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 7734,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 7812,
											"end": 7813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7794,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7794,
											"end": 7814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7794,
											"end": 7814,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 7794,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7789,
											"end": 7814,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7789,
											"end": 7814,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7828,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 7846,
											"end": 7847,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7828,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7828,
											"end": 7848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7828,
											"end": 7848,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 7828,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7823,
											"end": 7848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7872,
											"end": 7873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7869,
											"end": 7870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7865,
											"end": 7874,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 7894,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7898,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7884,
											"end": 7921,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7884,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 7884,
											"end": 7921,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 7901,
											"end": 7919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7884,
											"end": 7921,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 7884,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7928,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7928,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 8114,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7934,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7982,
											"end": 8059,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7979,
											"end": 7980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 8060,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8079,
											"end": 8083,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 8076,
											"end": 8077,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8069,
											"end": 8084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8107,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8100,
											"end": 8101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8093,
											"end": 8108,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8289,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8120,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8204,
											"end": 8215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8226,
											"end": 8245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8282,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8273,
											"end": 8276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8524,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8295,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8435,
											"end": 8469,
											"name": "PUSH",
											"source": 8,
											"value": "77697468647261773A2063616E2774207769746864726177206D6F7265207468"
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8419,
											"end": 8433,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8504,
											"end": 8516,
											"name": "PUSH",
											"source": 8,
											"value": "616E206465706F73697400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8499,
											"end": 8501,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8491,
											"end": 8497,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8487,
											"end": 8502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8517,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8896,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 8530,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8693,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 8757,
											"end": 8759,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 8752,
											"end": 8755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8693,
											"end": 8760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 8760,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 8693,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8686,
											"end": 8760,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8686,
											"end": 8760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 8858,
											"end": 8861,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8769,
											"end": 8862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 8862,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 8769,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 8889,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8882,
											"end": 8885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8878,
											"end": 8890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8871,
											"end": 8890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8896,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 9321,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8902,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9108,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9095,
											"end": 9104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9091,
											"end": 9109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9083,
											"end": 9109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9155,
											"end": 9164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9153,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9145,
											"end": 9165,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9141,
											"end": 9142,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9130,
											"end": 9139,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9126,
											"end": 9143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9119,
											"end": 9166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9183,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 9309,
											"end": 9313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9183,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9183,
											"end": 9314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9183,
											"end": 9314,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 9183,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9175,
											"end": 9314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9175,
											"end": 9314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 9321,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 9321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 9321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8902,
											"end": 9321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9327,
											"end": 9548,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9327,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9467,
											"end": 9501,
											"name": "PUSH",
											"source": 8,
											"value": "66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73"
										},
										{
											"begin": 9463,
											"end": 9464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9451,
											"end": 9465,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9502,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9536,
											"end": 9540,
											"name": "PUSH",
											"source": 8,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9531,
											"end": 9533,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9523,
											"end": 9529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9512,
											"end": 9541,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9327,
											"end": 9548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9327,
											"end": 9548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9920,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9554,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9696,
											"end": 9699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 9781,
											"end": 9783,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9717,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 9717,
											"end": 9784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9717,
											"end": 9784,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 9717,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9710,
											"end": 9784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9710,
											"end": 9784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 9882,
											"end": 9885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9793,
											"end": 9886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9886,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 9793,
											"end": 9886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9911,
											"end": 9913,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9906,
											"end": 9909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9902,
											"end": 9914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9895,
											"end": 9914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9895,
											"end": 9914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9920,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9926,
											"end": 10345,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 9926,
											"end": 10345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10092,
											"end": 10096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10132,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10119,
											"end": 10128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10115,
											"end": 10133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10107,
											"end": 10133,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10107,
											"end": 10133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10179,
											"end": 10188,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10173,
											"end": 10177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10169,
											"end": 10189,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10165,
											"end": 10166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10154,
											"end": 10163,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10143,
											"end": 10190,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 10333,
											"end": 10337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 10207,
											"end": 10338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10338,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 10207,
											"end": 10338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10199,
											"end": 10338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10199,
											"end": 10338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9926,
											"end": 10345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9926,
											"end": 10345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9926,
											"end": 10345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9926,
											"end": 10345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10351,
											"end": 10542,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 10351,
											"end": 10542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 10428,
											"end": 10429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 10410,
											"end": 10430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 10410,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10405,
											"end": 10430,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10405,
											"end": 10430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 10462,
											"end": 10463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 10444,
											"end": 10464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10464,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 10444,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10439,
											"end": 10464,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10439,
											"end": 10464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10487,
											"end": 10488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10489,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10473,
											"end": 10489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10508,
											"end": 10511,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10505,
											"end": 10506,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10502,
											"end": 10512,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10499,
											"end": 10535,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10499,
											"end": 10535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 10499,
											"end": 10535,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 10515,
											"end": 10533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10499,
											"end": 10535,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 10499,
											"end": 10535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10351,
											"end": 10542,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10351,
											"end": 10542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10351,
											"end": 10542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10351,
											"end": 10542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10351,
											"end": 10542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10728,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10548,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10596,
											"end": 10673,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10593,
											"end": 10594,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10697,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10690,
											"end": 10691,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10683,
											"end": 10698,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10717,
											"end": 10721,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10714,
											"end": 10715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10722,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 11066,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10734,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10855,
											"end": 10859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10893,
											"end": 10895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10882,
											"end": 10891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10878,
											"end": 10896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10870,
											"end": 10896,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10870,
											"end": 10896,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10906,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10972,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10959,
											"end": 10976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10950,
											"end": 10956,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10906,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 10906,
											"end": 10977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10906,
											"end": 10977,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 10906,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 11055,
											"end": 11057,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11044,
											"end": 11053,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11040,
											"end": 11058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 10987,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11059,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 10987,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 11066,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 11066,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 11066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 11066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 11066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10734,
											"end": 11066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11072,
											"end": 11209,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 11072,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11126,
											"end": 11131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11157,
											"end": 11163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11151,
											"end": 11164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11142,
											"end": 11164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11142,
											"end": 11164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11173,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 11197,
											"end": 11202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11173,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 11173,
											"end": 11203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11173,
											"end": 11203,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 11173,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11072,
											"end": 11209,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11072,
											"end": 11209,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11072,
											"end": 11209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11072,
											"end": 11209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11072,
											"end": 11209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11560,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11215,
											"end": 11560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11282,
											"end": 11288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11331,
											"end": 11333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11319,
											"end": 11328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11310,
											"end": 11317,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11329,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11302,
											"end": 11334,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11299,
											"end": 11418,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11299,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 11299,
											"end": 11418,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11337,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 11337,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 11337,
											"end": 11416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11337,
											"end": 11416,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 11337,
											"end": 11416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11299,
											"end": 11418,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 11299,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11457,
											"end": 11458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11482,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 11535,
											"end": 11542,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11526,
											"end": 11532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11515,
											"end": 11524,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11511,
											"end": 11533,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 11482,
											"end": 11543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11543,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 11482,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11472,
											"end": 11543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11472,
											"end": 11543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11428,
											"end": 11553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11560,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 12008,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11566,
											"end": 12008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11719,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11753,
											"end": 11755,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11742,
											"end": 11751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11730,
											"end": 11756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11730,
											"end": 11756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11766,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 11834,
											"end": 11835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11819,
											"end": 11836,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11810,
											"end": 11816,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11766,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 11766,
											"end": 11837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11766,
											"end": 11837,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 11766,
											"end": 11837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11847,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 11915,
											"end": 11917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11904,
											"end": 11913,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11900,
											"end": 11918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11891,
											"end": 11897,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11847,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 11847,
											"end": 11919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11847,
											"end": 11919,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 11847,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 11997,
											"end": 11999,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11986,
											"end": 11995,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11982,
											"end": 12000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11929,
											"end": 12001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 12001,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 11929,
											"end": 12001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 12008,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 12008,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 12008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 12008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 12008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 12008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11566,
											"end": 12008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12014,
											"end": 12112,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 12014,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12099,
											"end": 12104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12093,
											"end": 12105,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12083,
											"end": 12105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12083,
											"end": 12105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12014,
											"end": 12112,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12014,
											"end": 12112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12014,
											"end": 12112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12014,
											"end": 12112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12265,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 12118,
											"end": 12265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12219,
											"end": 12230,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12256,
											"end": 12259,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12241,
											"end": 12259,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12241,
											"end": 12259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12265,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12265,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12271,
											"end": 12517,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 12271,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12352,
											"end": 12353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12376,
											"end": 12382,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12373,
											"end": 12374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12370,
											"end": 12383,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12461,
											"end": 12462,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12456,
											"end": 12459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12452,
											"end": 12463,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12437,
											"end": 12440,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12433,
											"end": 12444,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12426,
											"end": 12465,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12398,
											"end": 12400,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12395,
											"end": 12396,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12391,
											"end": 12401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12386,
											"end": 12401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12386,
											"end": 12401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 12362,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12509,
											"end": 12510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12500,
											"end": 12506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12495,
											"end": 12498,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12491,
											"end": 12507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12484,
											"end": 12511,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12333,
											"end": 12517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12271,
											"end": 12517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12271,
											"end": 12517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12271,
											"end": 12517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12271,
											"end": 12517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12523,
											"end": 12909,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 12523,
											"end": 12909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12627,
											"end": 12630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 12687,
											"end": 12692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 12655,
											"end": 12693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 12790,
											"end": 12796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12785,
											"end": 12788,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 12709,
											"end": 12797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12709,
											"end": 12797,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 12709,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 12797,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 12797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12806,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 12864,
											"end": 12870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12859,
											"end": 12862,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12852,
											"end": 12856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12845,
											"end": 12850,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12841,
											"end": 12857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12806,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 12806,
											"end": 12871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12806,
											"end": 12871,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 12806,
											"end": 12871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12896,
											"end": 12902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12891,
											"end": 12894,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12887,
											"end": 12903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12880,
											"end": 12903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12880,
											"end": 12903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12631,
											"end": 12909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12523,
											"end": 12909,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12523,
											"end": 12909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12523,
											"end": 12909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12523,
											"end": 12909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12523,
											"end": 12909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 13186,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 12915,
											"end": 13186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13045,
											"end": 13048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13067,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13147,
											"end": 13153,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 13067,
											"end": 13160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13067,
											"end": 13160,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 13067,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13060,
											"end": 13160,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13060,
											"end": 13160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13177,
											"end": 13180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13170,
											"end": 13180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13170,
											"end": 13180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 13186,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 13186,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 13186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 13186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 13186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/FarmingC2N.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"add(uint256,address,bool)": "1eaaa045",
							"deposit(uint256,uint256)": "e2bbb158",
							"deposited(uint256,address)": "a2383106",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"endTimestamp()": "a85adeab",
							"erc20()": "785e9e86",
							"fund(uint256)": "ca1d209d",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"paidOut()": "5c76ca2d",
							"pending(uint256,address)": "e4c75c27",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"rewardPerSecond()": "8f10369a",
							"set(uint256,uint256,bool)": "64482f79",
							"startTimestamp()": "e6fd48bc",
							"totalAllocPoint()": "17caf6f1",
							"totalPending()": "3f90916a",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paidOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accERC20PerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FarmingC2N.sol\":\"FarmingC2N\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/FarmingC2N.sol\":{\"keccak256\":\"0xda621d8896094f7e035873ee390e0c4206e2730559eefef202dbd2605c2ef81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5293c51865e0bfa32a2e252c0ffe9475f30ef4df4af7e284024098f95b51e2bc\",\"dweb:/ipfs/QmdTWk3maBE2XNnDZc8kuXsBh3j3s87tj5m3zcjZH9H7jM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1923,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "erc20",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 1925,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "paidOut",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1927,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "rewardPerSecond",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1929,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "totalRewards",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1933,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "poolInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(PoolInfo)1920_storage)dyn_storage"
							},
							{
								"astId": 1940,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1908_storage))"
							},
							{
								"astId": 1942,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1944,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "startTimestamp",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1946,
								"contract": "contracts/FarmingC2N.sol:FarmingC2N",
								"label": "endTimestamp",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1920_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1920_storage",
								"encoding": "dynamic_array",
								"label": "struct FarmingC2N.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1908_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct FarmingC2N.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1908_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1908_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1908_storage)"
							},
							"t_struct(PoolInfo)1920_storage": {
								"encoding": "inplace",
								"label": "struct FarmingC2N.PoolInfo",
								"members": [
									{
										"astId": 1911,
										"contract": "contracts/FarmingC2N.sol:FarmingC2N",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)225"
									},
									{
										"astId": 1913,
										"contract": "contracts/FarmingC2N.sol:FarmingC2N",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1915,
										"contract": "contracts/FarmingC2N.sol:FarmingC2N",
										"label": "lastRewardTimestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1917,
										"contract": "contracts/FarmingC2N.sol:FarmingC2N",
										"label": "accERC20PerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1919,
										"contract": "contracts/FarmingC2N.sol:FarmingC2N",
										"label": "totalDeposits",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)1908_storage": {
								"encoding": "inplace",
								"label": "struct FarmingC2N.UserInfo",
								"members": [
									{
										"astId": 1905,
										"contract": "contracts/FarmingC2N.sol:FarmingC2N",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1907,
										"contract": "contracts/FarmingC2N.sol:FarmingC2N",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							834
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 835,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 834,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 834,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								834
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							261
						]
					},
					"id": 262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 261,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 261,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 261,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 262,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"SafeERC20": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 226,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 262,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 805,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 273,
									"libraryName": {
										"id": 271,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 278,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 287,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 304,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 551,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 551,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 551,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 390,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 386,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 384,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 392,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 401,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 400,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 395,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 396,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 397,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 394,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 399,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 404,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 551,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 427,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 425,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 435,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 436,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 434,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 443,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 445,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 418,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 441,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 439,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 453,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 551,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 494,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 551,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													513,
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 525,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 548,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 551,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 552,
							"src": "751:5018:3",
							"usedErrors": [
								278,
								287
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 559,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 564,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 567,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 580,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 582,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 804,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 618,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 804,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 657,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 669,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 804,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 804,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 804,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 742,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 746,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 752,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 758,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 734,
															"id": 759,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 737,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 804,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 780,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 804,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:4",
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nativeSrc": "6073:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nativeSrc": "6096:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:4",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:4",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nativeSrc": "6137:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nativeSrc": "6130:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nativeSrc": "6130:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 795,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 804,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "195:6066:4",
							"usedErrors": [
								559,
								564,
								567
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							834
						]
					},
					"id": 835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 834,
							"linearizedBaseContracts": [
								834
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 834,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 834,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 829,
												"id": 831,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 834,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 835,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1888
						]
					},
					"id": 1889,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 836,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 837,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1888,
							"linearizedBaseContracts": [
								1888
							],
							"name": "Math",
							"nameLocation": "211:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:6",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 840,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:6"
									},
									"src": "277:29:6"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 845,
									"members": [
										{
											"id": 841,
											"name": "Floor",
											"nameLocation": "336:5:6",
											"nodeType": "EnumValue",
											"src": "336:5:6"
										},
										{
											"id": 842,
											"name": "Ceil",
											"nameLocation": "379:4:6",
											"nodeType": "EnumValue",
											"src": "379:4:6"
										},
										{
											"id": 843,
											"name": "Trunc",
											"nameLocation": "421:5:6",
											"nodeType": "EnumValue",
											"src": "421:5:6"
										},
										{
											"id": 844,
											"name": "Expand",
											"nameLocation": "451:6:6",
											"nodeType": "EnumValue",
											"src": "451:6:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:6",
									"nodeType": "EnumDefinition",
									"src": "312:169:6"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "661:140:6",
										"statements": [
											{
												"id": 875,
												"nodeType": "UncheckedBlock",
												"src": "671:124:6",
												"statements": [
													{
														"assignments": [
															858
														],
														"declarations": [
															{
																"constant": false,
																"id": 858,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 875,
																"src": "695:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 857,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 862,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 859,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "707:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 860,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "711:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 863,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 864,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 870,
														"nodeType": "IfStatement",
														"src": "726:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 868,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 856,
															"id": 869,
															"nodeType": "Return",
															"src": "737:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 872,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "782:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 873,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 856,
														"id": 874,
														"nodeType": "Return",
														"src": "768:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "646:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "652:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:6"
									},
									"scope": 1888,
									"src": "585:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "984:113:6",
										"statements": [
											{
												"id": 903,
												"nodeType": "UncheckedBlock",
												"src": "994:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "1022:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 890,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "1026:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 896,
														"nodeType": "IfStatement",
														"src": "1018:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 894,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 888,
															"id": 895,
															"nodeType": "Return",
															"src": "1029:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 898,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "1074:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 899,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "1078:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 901,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 888,
														"id": 902,
														"nodeType": "Return",
														"src": "1060:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "924:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "935:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:6"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "969:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "975:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:6"
									},
									"scope": 1888,
									"src": "908:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "1283:417:6",
										"statements": [
											{
												"id": 945,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 917,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "1551:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 924,
														"nodeType": "IfStatement",
														"src": "1547:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 922,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 916,
															"id": 923,
															"nodeType": "Return",
															"src": "1559:16:6"
														}
													},
													{
														"assignments": [
															926
														],
														"declarations": [
															{
																"constant": false,
																"id": 926,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 945,
																"src": "1589:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 930,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 927,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "1601:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 928,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "1605:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 931,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "1624:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 932,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "1628:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 934,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "1633:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 940,
														"nodeType": "IfStatement",
														"src": "1620:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 938,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 916,
															"id": 939,
															"nodeType": "Return",
															"src": "1636:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 942,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "1681:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 943,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 916,
														"id": 944,
														"nodeType": "Return",
														"src": "1667:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1223:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1234:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:6"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1274:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:6"
									},
									"scope": 1888,
									"src": "1207:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "1887:114:6",
										"statements": [
											{
												"id": 973,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 959,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "1925:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 966,
														"nodeType": "IfStatement",
														"src": "1921:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 958,
															"id": 965,
															"nodeType": "Return",
															"src": "1933:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 968,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "1978:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 969,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "1982:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 971,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 958,
														"id": 972,
														"nodeType": "Return",
														"src": "1964:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1827:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1838:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1872:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1878:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:6"
									},
									"scope": 1888,
									"src": "1811:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "2198:114:6",
										"statements": [
											{
												"id": 1001,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 987,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "2236:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 994,
														"nodeType": "IfStatement",
														"src": "2232:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 986,
															"id": 993,
															"nodeType": "Return",
															"src": "2244:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 996,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "2289:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 997,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "2293:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 999,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 986,
														"id": 1000,
														"nodeType": "Return",
														"src": "2275:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2138:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2149:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:6"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2183:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 982,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "2189:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:6"
									},
									"scope": 1888,
									"src": "2122:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "2449:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1013,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "2466:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1014,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "2470:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1017,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "2478:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:6",
													"trueExpression": {
														"id": 1016,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "2474:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1019,
												"nodeType": "Return",
												"src": "2459:20:6"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2406:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:6"
									},
									"scope": 1888,
									"src": "2382:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2624:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1031,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "2641:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1032,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "2645:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1035,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "2653:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:6",
													"trueExpression": {
														"id": 1034,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "2649:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1037,
												"nodeType": "Return",
												"src": "2634:20:6"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2570:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2581:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:6"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2615:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:6"
									},
									"scope": 1888,
									"src": "2557:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "2845:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1049,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "2900:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1050,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "2904:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1052,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "2910:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1054,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "2914:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1056,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1048,
												"id": 1060,
												"nodeType": "Return",
												"src": "2892:28:6"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "2791:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "2802:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:6"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "2836:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:6"
									},
									"scope": 1888,
									"src": "2774:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "3219:260:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1072,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "3233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1080,
												"nodeType": "IfStatement",
												"src": "3229:127:6",
												"trueBody": {
													"id": 1079,
													"nodeType": "Block",
													"src": "3241:115:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1075,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "3340:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1076,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "3344:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1071,
															"id": 1078,
															"nodeType": "Return",
															"src": "3333:12:6"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1081,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "3444:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1085,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1065,
																			"src": "3458:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1088,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1089,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "3467:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1071,
												"id": 1094,
												"nodeType": "Return",
												"src": "3437:35:6"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3165:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3176:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3210:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:6"
									},
									"scope": 1888,
									"src": "3148:331:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "3901:4018:6",
										"statements": [
											{
												"id": 1220,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:6",
												"statements": [
													{
														"assignments": [
															1109
														],
														"declarations": [
															{
																"constant": false,
																"id": 1109,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "4232:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1108,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1113,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1110,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "4248:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1111,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "4252:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:6"
													},
													{
														"assignments": [
															1115
														],
														"declarations": [
															{
																"constant": false,
																"id": 1115,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "4312:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1114,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1116,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:6"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:6",
															"nodeType": "YulBlock",
															"src": "4392:122:6",
															"statements": [
																{
																	"nativeSrc": "4410:30:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:6"
																				},
																				"nativeSrc": "4433:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:6"
																		},
																		"nativeSrc": "4420:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:6",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:6",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:6"
																				},
																				"nativeSrc": "4470:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:6"
																				},
																				"nativeSrc": "4486:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:6"
																		},
																		"nativeSrc": "4466:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1109,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1109,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1115,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1099,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1101,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:6",
																"valueSize": 1
															}
														],
														"id": 1117,
														"nodeType": "InlineAssembly",
														"src": "4383:131:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "4595:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1126,
														"nodeType": "IfStatement",
														"src": "4591:368:6",
														"trueBody": {
															"id": 1125,
															"nodeType": "Block",
															"src": "4607:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1121,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "4925:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1122,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "4933:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1107,
																	"id": 1124,
																	"nodeType": "Return",
																	"src": "4918:26:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1127,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "5065:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1128,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "5080:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1134,
														"nodeType": "IfStatement",
														"src": "5061:88:6",
														"trueBody": {
															"id": 1133,
															"nodeType": "Block",
															"src": "5087:62:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1130,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "5112:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1132,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:6"
																}
															]
														}
													},
													{
														"assignments": [
															1136
														],
														"declarations": [
															{
																"constant": false,
																"id": 1136,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "5404:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1135,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1137,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:6"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:6",
															"nodeType": "YulBlock",
															"src": "5444:291:6",
															"statements": [
																{
																	"nativeSrc": "5513:38:6",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:6"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:6"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:6"
																		},
																		"nativeSrc": "5526:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:6",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:6"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:6"
																				},
																				"nativeSrc": "5653:20:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:6"
																		},
																		"nativeSrc": "5642:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:6",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:6"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:6"
																		},
																		"nativeSrc": "5700:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1103,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1109,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1109,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1109,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1115,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1115,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1136,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1136,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1136,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1099,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1101,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:6",
																"valueSize": 1
															}
														],
														"id": 1138,
														"nodeType": "InlineAssembly",
														"src": "5435:300:6"
													},
													{
														"assignments": [
															1140
														],
														"declarations": [
															{
																"constant": false,
																"id": 1140,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "5939:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1139,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1147,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1141,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "5954:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1143,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "5973:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1145,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:6"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:6",
															"nodeType": "YulBlock",
															"src": "6008:362:6",
															"statements": [
																{
																	"nativeSrc": "6073:37:6",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:6"
																		},
																		"nativeSrc": "6088:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:6",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:6"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:6"
																		},
																		"nativeSrc": "6186:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:6"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:6",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:6"
																						},
																						"nativeSrc": "6333:12:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:6"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:6"
																				},
																				"nativeSrc": "6329:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:6"
																		},
																		"nativeSrc": "6325:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:6",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1103,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1103,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1109,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1109,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1140,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:6",
																"valueSize": 1
															}
														],
														"id": 1148,
														"nodeType": "InlineAssembly",
														"src": "5999:371:6"
													},
													{
														"expression": {
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1149,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "6436:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1150,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "6445:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1151,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "6453:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1154,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:6"
													},
													{
														"assignments": [
															1156
														],
														"declarations": [
															{
																"constant": false,
																"id": 1156,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1220,
																"src": "6775:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1155,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1163,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1158,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "6798:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:6"
													},
													{
														"expression": {
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1164,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "7031:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1166,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "7046:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1167,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "7060:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1171,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:6"
													},
													{
														"expression": {
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1172,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "7100:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1174,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "7115:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1175,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "7129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1179,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:6"
													},
													{
														"expression": {
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1180,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "7170:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1182,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "7185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1183,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "7199:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:6"
													},
													{
														"expression": {
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1188,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "7240:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1190,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "7255:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1191,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "7269:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1195,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:6"
													},
													{
														"expression": {
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1196,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "7310:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1198,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "7325:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1199,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "7339:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1203,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:6"
													},
													{
														"expression": {
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1204,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "7381:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1206,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "7396:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1207,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "7410:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1211,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:6"
													},
													{
														"expression": {
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1212,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "7851:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1213,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "7860:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1214,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "7868:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1217,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:6"
													},
													{
														"expression": {
															"id": 1218,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "7896:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1107,
														"id": 1219,
														"nodeType": "Return",
														"src": "7889:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3819:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3830:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3841:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:6"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "3885:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:6"
									},
									"scope": 1888,
									"src": "3803:4116:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "8161:192:6",
										"statements": [
											{
												"assignments": [
													1238
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "8171:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1240,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "8195:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1241,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "8198:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1242,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "8201:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1239,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1222,
															1265
														],
														"referencedDeclaration": 1222,
														"src": "8188:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1246,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "8244:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$845",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$845",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1245,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "8227:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$845_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1249,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "8264:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1250,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "8267:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1251,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "8270:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1248,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"nodeType": "IfStatement",
												"src": "8223:101:6",
												"trueBody": {
													"id": 1260,
													"nodeType": "Block",
													"src": "8288:36:6",
													"statements": [
														{
															"expression": {
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1256,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "8302:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1259,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1262,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1238,
													"src": "8340:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1263,
												"nodeType": "Return",
												"src": "8333:13:6"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "8067:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "8078:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "8089:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "8110:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$845",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1230,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 845,
														"src": "8110:8:6"
													},
													"referencedDeclaration": 845,
													"src": "8110:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$845",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "8152:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:6"
									},
									"scope": 1888,
									"src": "8051:302:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "8644:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1273,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "8658:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1279,
												"nodeType": "IfStatement",
												"src": "8654:45:6",
												"trueBody": {
													"id": 1278,
													"nodeType": "Block",
													"src": "8666:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1272,
															"id": 1277,
															"nodeType": "Return",
															"src": "8680:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "9378:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1284,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1268,
																			"src": "9406:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1283,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1544,
																			1579
																		],
																		"referencedDeclaration": 1544,
																		"src": "9401:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1288,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:6"
											},
											{
												"id": 1375,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:6",
												"statements": [
													{
														"expression": {
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1291,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "9839:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1292,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "9849:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1293,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "9858:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1294,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "9862:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1297,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1301,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:6"
													},
													{
														"expression": {
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1302,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "9888:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1303,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "9898:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1304,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "9907:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1305,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "9911:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1308,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1312,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:6"
													},
													{
														"expression": {
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1313,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "9937:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1314,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "9947:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1315,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "9956:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1316,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "9960:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1319,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1323,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:6"
													},
													{
														"expression": {
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1324,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "9986:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1325,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "9996:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1326,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "10005:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1327,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "10009:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1330,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1334,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:6"
													},
													{
														"expression": {
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1335,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "10035:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1336,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "10045:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1337,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "10054:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1338,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "10058:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1341,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1345,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:6"
													},
													{
														"expression": {
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1346,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "10084:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1347,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "10094:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1348,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "10103:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1349,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "10107:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1352,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1356,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:6"
													},
													{
														"expression": {
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1357,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "10133:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1358,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "10143:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1359,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "10152:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1360,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1281,
																					"src": "10156:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1363,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1367,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1369,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "10193:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1370,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "10201:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1371,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "10205:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1368,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "10189:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1272,
														"id": 1374,
														"nodeType": "Return",
														"src": "10182:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "8601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:6"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "8635:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:6"
									},
									"scope": 1888,
									"src": "8587:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "10405:164:6",
										"statements": [
											{
												"id": 1410,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:6",
												"statements": [
													{
														"assignments": [
															1389
														],
														"declarations": [
															{
																"constant": false,
																"id": 1389,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1410,
																"src": "10439:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1388,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1393,
														"initialValue": {
															"arguments": [
																{
																	"id": 1391,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "10461:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1390,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1377,
																	1412
																],
																"referencedDeclaration": 1377,
																"src": "10456:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1394,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "10484:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1396,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1383,
																						"src": "10511:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$845",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$845",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1395,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1887,
																					"src": "10494:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$845_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1398,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1389,
																						"src": "10524:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1399,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1389,
																						"src": "10533:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1401,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1380,
																					"src": "10542:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1387,
														"id": 1409,
														"nodeType": "Return",
														"src": "10477:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "10343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "10354:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$845",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1381,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 845,
														"src": "10354:8:6"
													},
													"referencedDeclaration": 845,
													"src": "10354:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$845",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:6"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "10396:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:6"
									},
									"scope": 1888,
									"src": "10329:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "10760:922:6",
										"statements": [
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1543,
														"src": "10770:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1423,
												"initialValue": {
													"hexValue": "30",
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:6"
											},
											{
												"id": 1540,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1424,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "10826:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1438,
														"nodeType": "IfStatement",
														"src": "10822:99:6",
														"trueBody": {
															"id": 1437,
															"nodeType": "Block",
															"src": "10844:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1429,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "10862:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1432,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:6"
																},
																{
																	"expression": {
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1433,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "10893:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1436,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1439,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "10938:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1453,
														"nodeType": "IfStatement",
														"src": "10934:96:6",
														"trueBody": {
															"id": 1452,
															"nodeType": "Block",
															"src": "10955:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1444,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "10973:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1447,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:6"
																},
																{
																	"expression": {
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "11003:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1451,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "11047:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1468,
														"nodeType": "IfStatement",
														"src": "11043:96:6",
														"trueBody": {
															"id": 1467,
															"nodeType": "Block",
															"src": "11064:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "11082:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1462,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:6"
																},
																{
																	"expression": {
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1463,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "11112:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1466,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1469,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "11156:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1483,
														"nodeType": "IfStatement",
														"src": "11152:96:6",
														"trueBody": {
															"id": 1482,
															"nodeType": "Block",
															"src": "11173:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1474,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "11191:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1477,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:6"
																},
																{
																	"expression": {
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1478,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "11221:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1481,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1484,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "11265:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1498,
														"nodeType": "IfStatement",
														"src": "11261:93:6",
														"trueBody": {
															"id": 1497,
															"nodeType": "Block",
															"src": "11281:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1489,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "11299:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1492,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:6"
																},
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "11328:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1499,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "11371:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1513,
														"nodeType": "IfStatement",
														"src": "11367:93:6",
														"trueBody": {
															"id": 1512,
															"nodeType": "Block",
															"src": "11387:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "11405:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1507,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:6"
																},
																{
																	"expression": {
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1508,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "11434:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1511,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1514,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "11477:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1528,
														"nodeType": "IfStatement",
														"src": "11473:93:6",
														"trueBody": {
															"id": 1527,
															"nodeType": "Block",
															"src": "11493:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1519,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "11511:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1522,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:6"
																},
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1523,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "11540:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "11583:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1539,
														"nodeType": "IfStatement",
														"src": "11579:64:6",
														"trueBody": {
															"id": 1538,
															"nodeType": "Block",
															"src": "11599:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "11617:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1537,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1541,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1421,
													"src": "11669:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1542,
												"nodeType": "Return",
												"src": "11662:13:6"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:6",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "10713:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:6"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "10751:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:6"
									},
									"scope": 1888,
									"src": "10699:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "11915:168:6",
										"statements": [
											{
												"id": 1577,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:6",
												"statements": [
													{
														"assignments": [
															1556
														],
														"declarations": [
															{
																"constant": false,
																"id": 1556,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1577,
																"src": "11949:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1555,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1560,
														"initialValue": {
															"arguments": [
																{
																	"id": 1558,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "11971:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1557,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1544,
																	1579
																],
																"referencedDeclaration": 1544,
																"src": "11966:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1561,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1556,
																"src": "11998:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1563,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1550,
																						"src": "12025:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$845",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$845",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1562,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1887,
																					"src": "12008:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$845_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1565,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1566,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1556,
																						"src": "12043:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1568,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1547,
																					"src": "12052:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1554,
														"id": 1576,
														"nodeType": "Return",
														"src": "11991:75:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "11849:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "11864:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$845",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1548,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 845,
														"src": "11864:8:6"
													},
													"referencedDeclaration": 845,
													"src": "11864:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$845",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:6"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "11906:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:6"
									},
									"scope": 1888,
									"src": "11835:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "12276:854:6",
										"statements": [
											{
												"assignments": [
													1588
												],
												"declarations": [
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1707,
														"src": "12286:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1590,
												"initialValue": {
													"hexValue": "30",
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:6"
											},
											{
												"id": 1704,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1591,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "12342:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1607,
														"nodeType": "IfStatement",
														"src": "12338:103:6",
														"trueBody": {
															"id": 1606,
															"nodeType": "Block",
															"src": "12361:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1596,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "12379:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1601,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:6"
																},
																{
																	"expression": {
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1602,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "12414:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1605,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1608,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "12458:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1624,
														"nodeType": "IfStatement",
														"src": "12454:103:6",
														"trueBody": {
															"id": 1623,
															"nodeType": "Block",
															"src": "12477:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1613,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "12495:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1615,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1618,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:6"
																},
																{
																	"expression": {
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1619,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "12530:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1622,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1625,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "12574:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1641,
														"nodeType": "IfStatement",
														"src": "12570:103:6",
														"trueBody": {
															"id": 1640,
															"nodeType": "Block",
															"src": "12593:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1630,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "12611:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1631,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1635,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:6"
																},
																{
																	"expression": {
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1636,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "12646:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1639,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1642,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "12690:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1658,
														"nodeType": "IfStatement",
														"src": "12686:100:6",
														"trueBody": {
															"id": 1657,
															"nodeType": "Block",
															"src": "12708:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1647,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "12726:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1648,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1652,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:6"
																},
																{
																	"expression": {
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1653,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "12760:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1656,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "12803:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1675,
														"nodeType": "IfStatement",
														"src": "12799:100:6",
														"trueBody": {
															"id": 1674,
															"nodeType": "Block",
															"src": "12821:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1664,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "12839:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1669,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:6"
																},
																{
																	"expression": {
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1670,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "12873:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1673,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1676,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "12916:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1692,
														"nodeType": "IfStatement",
														"src": "12912:100:6",
														"trueBody": {
															"id": 1691,
															"nodeType": "Block",
															"src": "12934:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1681,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "12952:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1686,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:6"
																},
																{
																	"expression": {
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1687,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "12986:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1690,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1693,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "13029:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1703,
														"nodeType": "IfStatement",
														"src": "13025:66:6",
														"trueBody": {
															"id": 1702,
															"nodeType": "Block",
															"src": "13047:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1698,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "13065:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1701,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1705,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1588,
													"src": "13117:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1706,
												"nodeType": "Return",
												"src": "13110:13:6"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:6",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "12229:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:6"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "12267:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:6"
									},
									"scope": 1888,
									"src": "12214:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "13365:170:6",
										"statements": [
											{
												"id": 1741,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:6",
												"statements": [
													{
														"assignments": [
															1720
														],
														"declarations": [
															{
																"constant": false,
																"id": 1720,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1741,
																"src": "13399:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1719,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1724,
														"initialValue": {
															"arguments": [
																{
																	"id": 1722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "13422:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1721,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1708,
																	1743
																],
																"referencedDeclaration": 1708,
																"src": "13416:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1725,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "13449:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1727,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1714,
																						"src": "13476:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$845",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$845",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1726,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1887,
																					"src": "13459:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$845_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1729,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1730,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1720,
																						"src": "13495:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1732,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1711,
																					"src": "13504:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1738,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1718,
														"id": 1740,
														"nodeType": "Return",
														"src": "13442:76:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "13299:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "13314:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$845",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1713,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1712,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 845,
														"src": "13314:8:6"
													},
													"referencedDeclaration": 845,
													"src": "13314:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$845",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:6"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "13356:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:6"
									},
									"scope": 1888,
									"src": "13284:251:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "13855:600:6",
										"statements": [
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1829,
														"src": "13865:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1754,
												"initialValue": {
													"hexValue": "30",
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:6"
											},
											{
												"id": 1826,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1755,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "13921:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1769,
														"nodeType": "IfStatement",
														"src": "13917:98:6",
														"trueBody": {
															"id": 1768,
															"nodeType": "Block",
															"src": "13939:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1760,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "13957:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1763,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:6"
																},
																{
																	"expression": {
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1764,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1752,
																			"src": "13988:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1767,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1770,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "14032:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1784,
														"nodeType": "IfStatement",
														"src": "14028:95:6",
														"trueBody": {
															"id": 1783,
															"nodeType": "Block",
															"src": "14049:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "14067:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1778,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:6"
																},
																{
																	"expression": {
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1779,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1752,
																			"src": "14097:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1782,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1785,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "14140:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1799,
														"nodeType": "IfStatement",
														"src": "14136:95:6",
														"trueBody": {
															"id": 1798,
															"nodeType": "Block",
															"src": "14157:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1790,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "14175:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1793,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:6"
																},
																{
																	"expression": {
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1794,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1752,
																			"src": "14205:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1797,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1800,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "14248:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1814,
														"nodeType": "IfStatement",
														"src": "14244:95:6",
														"trueBody": {
															"id": 1813,
															"nodeType": "Block",
															"src": "14265:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1805,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "14283:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1808,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:6"
																},
																{
																	"expression": {
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1809,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1752,
																			"src": "14313:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1812,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1815,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "14356:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1825,
														"nodeType": "IfStatement",
														"src": "14352:64:6",
														"trueBody": {
															"id": 1824,
															"nodeType": "Block",
															"src": "14372:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1820,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1752,
																			"src": "14390:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1823,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1827,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1752,
													"src": "14442:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1828,
												"nodeType": "Return",
												"src": "14435:13:6"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:6",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "13808:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:6"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "13846:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:6"
									},
									"scope": 1888,
									"src": "13792:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "14692:177:6",
										"statements": [
											{
												"id": 1866,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:6",
												"statements": [
													{
														"assignments": [
															1842
														],
														"declarations": [
															{
																"constant": false,
																"id": 1842,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1866,
																"src": "14726:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1841,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1846,
														"initialValue": {
															"arguments": [
																{
																	"id": 1844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "14750:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1843,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1830,
																	1868
																],
																"referencedDeclaration": 1830,
																"src": "14743:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1847,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "14777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1849,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1836,
																						"src": "14804:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$845",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$845",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1848,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1887,
																					"src": "14787:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$845_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1856,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1851,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1854,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1852,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1842,
																									"src": "14823:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1853,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1855,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1857,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1833,
																					"src": "14838:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1863,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1840,
														"id": 1865,
														"nodeType": "Return",
														"src": "14770:82:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "14626:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "14641:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$845",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1834,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 845,
														"src": "14641:8:6"
													},
													"referencedDeclaration": 845,
													"src": "14641:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$845",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:6"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "14683:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:6"
									},
									"scope": 1888,
									"src": "14610:259:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "15067:48:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1879,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "15090:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$845",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$845",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1877,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1876,
												"id": 1885,
												"nodeType": "Return",
												"src": "15077:31:6"
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:6",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "15019:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$845",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1870,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 845,
														"src": "15019:8:6"
													},
													"referencedDeclaration": 845,
													"src": "15019:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$845",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:6"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "15061:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:6"
									},
									"scope": 1888,
									"src": "14993:122:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1889,
							"src": "203:14914:6",
							"usedErrors": [
								840
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:6"
				},
				"id": 6
			},
			"contracts/FarmingC2N.sol": {
				"ast": {
					"absolutePath": "contracts/FarmingC2N.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"Context": [
							834
						],
						"FarmingC2N": [
							2783
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"Math": [
							1888
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							551
						]
					},
					"id": 2784,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1890,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 226,
							"src": "57:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 552,
							"src": "177:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 1893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 1889,
							"src": "298:53:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2784,
							"sourceUnit": 148,
							"src": "352:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1895,
										"name": "Ownable",
										"nameLocations": [
											"429:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "429:7:7"
									},
									"id": 1896,
									"nodeType": "InheritanceSpecifier",
									"src": "429:7:7"
								}
							],
							"canonicalName": "FarmingC2N",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2783,
							"linearizedBaseContracts": [
								2783,
								147,
								834
							],
							"name": "FarmingC2N",
							"nameLocation": "415:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1899,
									"libraryName": {
										"id": 1897,
										"name": "Math",
										"nameLocations": [
											"449:4:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1888,
										"src": "449:4:7"
									},
									"nodeType": "UsingForDirective",
									"src": "443:23:7",
									"typeName": {
										"id": 1898,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1903,
									"libraryName": {
										"id": 1900,
										"name": "SafeERC20",
										"nameLocations": [
											"477:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "477:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "471:27:7",
									"typeName": {
										"id": 1902,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1901,
											"name": "IERC20",
											"nameLocations": [
												"491:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "491:6:7"
										},
										"referencedDeclaration": 225,
										"src": "491:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "FarmingC2N.UserInfo",
									"id": 1908,
									"members": [
										{
											"constant": false,
											"id": 1905,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "538:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1908,
											"src": "530:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1904,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "530:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1907,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "607:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1908,
											"src": "599:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1906,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "599:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "511:8:7",
									"nodeType": "StructDefinition",
									"scope": 2783,
									"src": "504:159:7",
									"visibility": "public"
								},
								{
									"canonicalName": "FarmingC2N.PoolInfo",
									"id": 1920,
									"members": [
										{
											"constant": false,
											"id": 1911,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "728:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1920,
											"src": "721:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$225",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1910,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1909,
													"name": "IERC20",
													"nameLocations": [
														"721:6:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 225,
													"src": "721:6:7"
												},
												"referencedDeclaration": 225,
												"src": "721:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1913,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "786:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1920,
											"src": "778:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1912,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "778:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1915,
											"mutability": "mutable",
											"name": "lastRewardTimestamp",
											"nameLocation": "899:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1920,
											"src": "891:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1914,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "891:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1917,
											"mutability": "mutable",
											"name": "accERC20PerShare",
											"nameLocation": "986:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 1920,
											"src": "978:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1916,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "978:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1919,
											"mutability": "mutable",
											"name": "totalDeposits",
											"nameLocation": "1065:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1920,
											"src": "1057:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1918,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1057:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "702:8:7",
									"nodeType": "StructDefinition",
									"scope": 2783,
									"src": "695:449:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "785e9e86",
									"id": 1923,
									"mutability": "mutable",
									"name": "erc20",
									"nameLocation": "1208:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1194:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1922,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1921,
											"name": "IERC20",
											"nameLocations": [
												"1194:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "1194:6:7"
										},
										"referencedDeclaration": 225,
										"src": "1194:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c76ca2d",
									"id": 1925,
									"mutability": "mutable",
									"name": "paidOut",
									"nameLocation": "1294:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1279:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1924,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f10369a",
									"id": 1927,
									"mutability": "mutable",
									"name": "rewardPerSecond",
									"nameLocation": "1363:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1348:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1926,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1348:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 1929,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "1434:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1419:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1419:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1933,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "1496:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1478:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
										"typeString": "struct FarmingC2N.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1931,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1930,
												"name": "PoolInfo",
												"nameLocations": [
													"1478:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1920,
												"src": "1478:8:7"
											},
											"referencedDeclaration": 1920,
											"src": "1478:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
												"typeString": "struct FarmingC2N.PoolInfo"
											}
										},
										"id": 1932,
										"nodeType": "ArrayTypeName",
										"src": "1478:10:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage_ptr",
											"typeString": "struct FarmingC2N.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1940,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "1614:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1558:64:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))"
									},
									"typeName": {
										"id": 1939,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1934,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1566:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1558:48:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1938,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1935,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1585:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1577:28:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$",
												"typeString": "mapping(address => struct FarmingC2N.UserInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1937,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1936,
													"name": "UserInfo",
													"nameLocations": [
														"1596:8:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1908,
													"src": "1596:8:7"
												},
												"referencedDeclaration": 1908,
												"src": "1596:8:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
													"typeString": "struct FarmingC2N.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1942,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "1730:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1715:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1941,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1715:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fd48bc",
									"id": 1944,
									"mutability": "mutable",
									"name": "startTimestamp",
									"nameLocation": "1809:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1794:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1794:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a85adeab",
									"id": 1946,
									"mutability": "mutable",
									"name": "endTimestamp",
									"nameLocation": "1884:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2783,
									"src": "1869:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1869:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 1954,
									"name": "Deposit",
									"nameLocation": "1909:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1933:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1917:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "1955:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1939:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1968:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1960:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1916:59:7"
									},
									"src": "1903:73:7"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1962,
									"name": "Withdraw",
									"nameLocation": "1987:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2012:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "1996:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2034:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "2018:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2047:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "2039:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:59:7"
									},
									"src": "1981:74:7"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1970,
									"name": "EmergencyWithdraw",
									"nameLocation": "2066:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2109:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2093:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2139:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2123:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2160:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2152:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2152:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:89:7"
									},
									"src": "2060:113:7"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "2308:157:7",
										"statements": [
											{
												"expression": {
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1984,
														"name": "erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "2318:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1985,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "2326:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "2318:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 1987,
												"nodeType": "ExpressionStatement",
												"src": "2318:14:7"
											},
											{
												"expression": {
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1988,
														"name": "rewardPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "2342:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1989,
														"name": "_rewardPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "2360:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2342:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "2342:34:7"
											},
											{
												"expression": {
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1992,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "2386:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1993,
														"name": "_startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "2403:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2386:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "2386:32:7"
											},
											{
												"expression": {
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1996,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "2428:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1997,
														"name": "_startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "2443:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2428:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "2428:30:7"
											}
										]
									},
									"id": 2001,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1980,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2296:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2300:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2296:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1982,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1979,
												"name": "Ownable",
												"nameLocations": [
													"2288:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2288:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2288:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "2207:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2200:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1971,
														"name": "IERC20",
														"nameLocations": [
															"2200:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2200:6:7"
													},
													"referencedDeclaration": 225,
													"src": "2200:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "_rewardPerSecond",
												"nameLocation": "2231:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2223:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "_startTimestamp",
												"nameLocation": "2265:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2257:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:96:7"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2308:0:7"
									},
									"scope": 2783,
									"src": "2179:286:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2009,
										"nodeType": "Block",
										"src": "2551:39:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2006,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "2568:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2577:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2568:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2005,
												"id": 2008,
												"nodeType": "Return",
												"src": "2561:22:7"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 2010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "2506:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:2:7"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "2542:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:9:7"
									},
									"scope": 2783,
									"src": "2497:93:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "2679:363:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2016,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2710:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2716:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2710:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2018,
																"name": "endTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "2728:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2710:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f736564",
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
																"typeString": "literal_string \"fund: too late, the farm is closed\""
															},
															"value": "fund: too late, the farm is closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
																"typeString": "literal_string \"fund: too late, the farm is closed\""
															}
														],
														"id": 2015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2689:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2689:111:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "2689:111:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2028,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2841:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2845:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2841:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2833:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2026,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2833:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2833:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2033,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2862:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FarmingC2N_$2783",
																		"typeString": "contract FarmingC2N"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FarmingC2N_$2783",
																		"typeString": "contract FarmingC2N"
																	}
																],
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2854:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2031,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2854:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2854:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2035,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "2869:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2023,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "2810:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2816:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "2810:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "2810:67:7"
											},
											{
												"assignments": [
													null,
													2039
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2039,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "2898:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2057,
														"src": "2890:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2038,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2890:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2044,
												"initialValue": {
													"arguments": [
														{
															"id": 2042,
															"name": "rewardPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "2926:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2040,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "2911:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2919:6:7",
														"memberName": "tryDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 975,
														"src": "2911:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2911:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2887:55:7"
											},
											{
												"expression": {
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2045,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "2952:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2046,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2039,
														"src": "2968:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2952:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2048,
												"nodeType": "ExpressionStatement",
												"src": "2952:25:7"
											},
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"id": 2049,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "2991:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2050,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2988:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2053,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "3027:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2051,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "3007:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3020:6:7",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 877,
															"src": "3007:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3007:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2988:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "2988:47:7"
											}
										]
									},
									"functionSelector": "ca1d209d",
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nameLocation": "2650:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2663:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2655:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2654:17:7"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2679:0:7"
									},
									"scope": 2783,
									"src": "2641:401:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "3319:549:7",
										"statements": [
											{
												"condition": {
													"id": 2070,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2065,
													"src": "3333:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2075,
												"nodeType": "IfStatement",
												"src": "3329:59:7",
												"trueBody": {
													"id": 2074,
													"nodeType": "Block",
													"src": "3346:42:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2071,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "3360:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3360:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2073,
															"nodeType": "ExpressionStatement",
															"src": "3360:17:7"
														}
													]
												}
											},
											{
												"assignments": [
													2077
												],
												"declarations": [
													{
														"constant": false,
														"id": 2077,
														"mutability": "mutable",
														"name": "lastRewardTimestamp",
														"nameLocation": "3405:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 2107,
														"src": "3397:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3397:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2086,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2078,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3427:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3433:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3427:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2080,
															"name": "startTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "3445:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3427:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2084,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "3504:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3427:91:7",
													"trueExpression": {
														"expression": {
															"id": 2082,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3474:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3480:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3474:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3397:121:7"
											},
											{
												"expression": {
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"id": 2087,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "3531:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2088,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3528:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2091,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "3573:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2089,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "3550:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3566:6:7",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 877,
															"src": "3550:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3550:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "3528:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "3528:57:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2099,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "3658:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 2100,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2060,
																	"src": "3696:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2101,
																	"name": "lastRewardTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2077,
																	"src": "3746:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3801:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3835:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2098,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "3622:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1920_storage_ptr_$",
																	"typeString": "type(struct FarmingC2N.PoolInfo storage pointer)"
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3649:7:7",
																"3684:10:7",
																"3725:19:7",
																"3783:16:7",
																"3820:13:7"
															],
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardTimestamp",
																"accERC20PerShare",
																"totalDeposits"
															],
															"nodeType": "FunctionCall",
															"src": "3622:229:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_memory_ptr",
																"typeString": "struct FarmingC2N.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1920_memory_ptr",
																"typeString": "struct FarmingC2N.PoolInfo memory"
															}
														],
														"expression": {
															"id": 2095,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "3595:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
																"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3604:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3595:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$1920_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FarmingC2N.PoolInfo storage ref[] storage pointer,struct FarmingC2N.PoolInfo storage ref)"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:266:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2106,
												"nodeType": "ExpressionStatement",
												"src": "3595:266:7"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2068,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2067,
												"name": "onlyOwner",
												"nameLocations": [
													"3309:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3309:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3309:9:7"
										}
									],
									"name": "add",
									"nameLocation": "3212:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "3233:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3225:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "3261:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3254:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2062,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2061,
														"name": "IERC20",
														"nameLocations": [
															"3254:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3254:6:7"
													},
													"referencedDeclaration": 225,
													"src": "3254:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "3284:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3279:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3279:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3215:86:7"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3319:0:7"
									},
									"scope": 2783,
									"src": "3203:665:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2151,
										"nodeType": "Block",
										"src": "4075:273:7",
										"statements": [
											{
												"condition": {
													"id": 2119,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2114,
													"src": "4089:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2124,
												"nodeType": "IfStatement",
												"src": "4085:59:7",
												"trueBody": {
													"id": 2123,
													"nodeType": "Block",
													"src": "4102:42:7",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2120,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "4116:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4116:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2122,
															"nodeType": "ExpressionStatement",
															"src": "4116:17:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"id": 2125,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "4156:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2126,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4153:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 2129,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "4198:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
																			"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 2131,
																	"indexExpression": {
																		"id": 2130,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2110,
																		"src": "4207:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4198:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage",
																		"typeString": "struct FarmingC2N.PoolInfo storage ref"
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4213:10:7",
																"memberName": "allocPoint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1913,
																"src": "4198:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2127,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "4175:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4191:6:7",
															"memberName": "trySub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 905,
															"src": "4175:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4175:49:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4153:71:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2135,
												"nodeType": "ExpressionStatement",
												"src": "4153:71:7"
											},
											{
												"expression": {
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"id": 2136,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "4238:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2137,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4235:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2140,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "4280:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2138,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "4257:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4273:6:7",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 877,
															"src": "4257:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4257:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4235:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "4235:57:7"
											},
											{
												"expression": {
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2144,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "4302:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
																	"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 2146,
															"indexExpression": {
																"id": 2145,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "4311:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4302:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_storage",
																"typeString": "struct FarmingC2N.PoolInfo storage ref"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4317:10:7",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1913,
														"src": "4302:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2148,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2112,
														"src": "4330:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4302:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2150,
												"nodeType": "ExpressionStatement",
												"src": "4302:39:7"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 2152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2117,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2116,
												"name": "onlyOwner",
												"nameLocations": [
													"4065:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4065:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4065:9:7"
										}
									],
									"name": "set",
									"nameLocation": "3971:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "3992:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "3984:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3984:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "4014:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "4006:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "4040:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "4035:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4035:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:83:7"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4075:0:7"
									},
									"scope": 2783,
									"src": "3962:386:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "4515:90:7",
										"statements": [
											{
												"assignments": [
													2163
												],
												"declarations": [
													{
														"constant": false,
														"id": 2163,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4542:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2173,
														"src": "4525:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 2162,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2161,
																"name": "UserInfo",
																"nameLocations": [
																	"4525:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1908,
																"src": "4525:8:7"
															},
															"referencedDeclaration": 1908,
															"src": "4525:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2164,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "4549:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 2166,
														"indexExpression": {
															"id": 2165,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "4558:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4549:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 2168,
													"indexExpression": {
														"id": 2167,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "4564:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4549:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1908_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4525:45:7"
											},
											{
												"expression": {
													"expression": {
														"id": 2170,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "4587:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo storage pointer"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4592:6:7",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1905,
													"src": "4587:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2160,
												"id": 2172,
												"nodeType": "Return",
												"src": "4580:18:7"
											}
										]
									},
									"functionSelector": "a2383106",
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposited",
									"nameLocation": "4416:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4434:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "4426:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4448:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "4440:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4440:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:29:7"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "4502:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4501:9:7"
									},
									"scope": 2783,
									"src": "4407:198:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2302,
										"nodeType": "Block",
										"src": "4772:1568:7",
										"statements": [
											{
												"assignments": [
													2185
												],
												"declarations": [
													{
														"constant": false,
														"id": 2185,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4799:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "4782:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 2184,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2183,
																"name": "PoolInfo",
																"nameLocations": [
																	"4782:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1920,
																"src": "4782:8:7"
															},
															"referencedDeclaration": 1920,
															"src": "4782:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2189,
												"initialValue": {
													"baseExpression": {
														"id": 2186,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "4806:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2188,
													"indexExpression": {
														"id": 2187,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "4815:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4806:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1920_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4782:38:7"
											},
											{
												"assignments": [
													2192
												],
												"declarations": [
													{
														"constant": false,
														"id": 2192,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4847:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "4830:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 2191,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2190,
																"name": "UserInfo",
																"nameLocations": [
																	"4830:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1908,
																"src": "4830:8:7"
															},
															"referencedDeclaration": 1908,
															"src": "4830:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2198,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2193,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "4854:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 2195,
														"indexExpression": {
															"id": 2194,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "4863:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4854:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 2197,
													"indexExpression": {
														"id": 2196,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "4869:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4854:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1908_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4830:45:7"
											},
											{
												"assignments": [
													2200
												],
												"declarations": [
													{
														"constant": false,
														"id": 2200,
														"mutability": "mutable",
														"name": "accERC20PerShare",
														"nameLocation": "4893:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "4885:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4885:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2203,
												"initialValue": {
													"expression": {
														"id": 2201,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "4912:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo storage pointer"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4917:16:7",
													"memberName": "accERC20PerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1917,
													"src": "4912:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4885:48:7"
											},
											{
												"assignments": [
													2205
												],
												"declarations": [
													{
														"constant": false,
														"id": 2205,
														"mutability": "mutable",
														"name": "userAmount",
														"nameLocation": "4951:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "4943:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4943:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2208,
												"initialValue": {
													"expression": {
														"id": 2206,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2192,
														"src": "4964:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo storage pointer"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4969:6:7",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1905,
													"src": "4964:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4943:32:7"
											},
											{
												"assignments": [
													2210
												],
												"declarations": [
													{
														"constant": false,
														"id": 2210,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "4994:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "4986:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4986:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2213,
												"initialValue": {
													"expression": {
														"id": 2211,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "5005:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo storage pointer"
														}
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5010:13:7",
													"memberName": "totalDeposits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1919,
													"src": "5005:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4986:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2214,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5038:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5044:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5038:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2216,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "5056:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5061:19:7",
															"memberName": "lastRewardTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1915,
															"src": "5056:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5038:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2219,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "5084:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5096:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5084:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5038:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2284,
												"nodeType": "IfStatement",
												"src": "5034:1138:7",
												"trueBody": {
													"id": 2283,
													"nodeType": "Block",
													"src": "5099:1073:7",
													"statements": [
														{
															"assignments": [
																2224
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2224,
																	"mutability": "mutable",
																	"name": "lastTimestamp",
																	"nameLocation": "5121:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2283,
																	"src": "5113:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2223,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5113:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2233,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2225,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5137:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5143:9:7",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5137:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 2227,
																		"name": "endTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1946,
																		"src": "5155:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5137:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 2231,
																	"name": "endTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "5220:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5137:95:7",
																"trueExpression": {
																	"expression": {
																		"id": 2229,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5186:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5192:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5186:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5113:119:7"
														},
														{
															"assignments": [
																2235
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2235,
																	"mutability": "mutable",
																	"name": "timestampToCompare",
																	"nameLocation": "5254:18:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2283,
																	"src": "5246:26:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2234,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5246:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2244,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2236,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2185,
																			"src": "5275:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																				"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																			}
																		},
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5280:19:7",
																		"memberName": "lastRewardTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1915,
																		"src": "5275:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 2238,
																		"name": "endTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1946,
																		"src": "5302:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5275:39:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 2242,
																	"name": "endTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "5376:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5275:113:7",
																"trueExpression": {
																	"expression": {
																		"id": 2240,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "5333:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																			"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																		}
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5338:19:7",
																	"memberName": "lastRewardTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1915,
																	"src": "5333:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5246:142:7"
														},
														{
															"assignments": [
																null,
																2246
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 2246,
																	"mutability": "mutable",
																	"name": "nrOfSeconds",
																	"nameLocation": "5792:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2283,
																	"src": "5784:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2245,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5784:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2251,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2249,
																		"name": "timestampToCompare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2235,
																		"src": "5828:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2247,
																		"name": "lastTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "5807:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5821:6:7",
																	"memberName": "trySub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 905,
																	"src": "5807:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																	}
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5807:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																	"typeString": "tuple(bool,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5781:66:7"
														},
														{
															"assignments": [
																null,
																2253
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 2253,
																	"mutability": "mutable",
																	"name": "erc20Reward",
																	"nameLocation": "5872:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2283,
																	"src": "5864:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2252,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5864:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2258,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2256,
																		"name": "rewardPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1927,
																		"src": "5906:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2254,
																		"name": "nrOfSeconds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2246,
																		"src": "5887:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5899:6:7",
																	"memberName": "tryMul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 947,
																	"src": "5887:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																	}
																},
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5887:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																	"typeString": "tuple(bool,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5861:61:7"
														},
														{
															"expression": {
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2259,
																	"name": "erc20Reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "5936:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2262,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2185,
																				"src": "5969:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																					"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																				}
																			},
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5974:10:7",
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1913,
																			"src": "5969:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2264,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "5986:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2260,
																			"name": "erc20Reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2253,
																			"src": "5950:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5962:6:7",
																		"memberName": "mulDiv",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1222,
																		"src": "5950:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5950:52:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5936:66:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2267,
															"nodeType": "ExpressionStatement",
															"src": "5936:66:7"
														},
														{
															"assignments": [
																null,
																2269
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 2269,
																	"mutability": "mutable",
																	"name": "newAccERC20PerShare",
																	"nameLocation": "6028:19:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2283,
																	"src": "6020:27:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2268,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6020:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2274,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2272,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2210,
																		"src": "6070:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2270,
																		"name": "erc20Reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "6051:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6063:6:7",
																	"memberName": "tryDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 975,
																	"src": "6051:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																	}
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6051:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																	"typeString": "tuple(bool,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6017:62:7"
														},
														{
															"expression": {
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		null,
																		{
																			"id": 2275,
																			"name": "accERC20PerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2200,
																			"src": "6097:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2276,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "6094:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$_t_uint256_$",
																		"typeString": "tuple(,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2279,
																			"name": "newAccERC20PerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "6141:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2277,
																			"name": "accERC20PerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2200,
																			"src": "6117:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6134:6:7",
																		"memberName": "tryAdd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 877,
																		"src": "6117:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6117:44:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "6094:67:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2282,
															"nodeType": "ExpressionStatement",
															"src": "6094:67:7"
														}
													]
												}
											},
											{
												"assignments": [
													null,
													2286
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2286,
														"mutability": "mutable",
														"name": "totalReward",
														"nameLocation": "6193:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "6185:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6185:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2291,
												"initialValue": {
													"arguments": [
														{
															"id": 2289,
															"name": "accERC20PerShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "6226:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2287,
															"name": "userAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "6208:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6219:6:7",
														"memberName": "tryMul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "6208:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6208:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6182:61:7"
											},
											{
												"assignments": [
													null,
													2293
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2293,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6264:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2302,
														"src": "6256:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6256:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2299,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2296,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2192,
																"src": "6293:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6298:10:7",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1907,
															"src": "6293:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2294,
															"name": "totalReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2286,
															"src": "6274:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6286:6:7",
														"memberName": "trySub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 905,
														"src": "6274:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6274:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6253:56:7"
											},
											{
												"expression": {
													"id": 2300,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2293,
													"src": "6327:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2182,
												"id": 2301,
												"nodeType": "Return",
												"src": "6320:13:7"
											}
										]
									},
									"functionSelector": "e4c75c27",
									"id": 2303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pending",
									"nameLocation": "4675:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4691:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "4683:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4705:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "4697:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4697:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:29:7"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "4759:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4758:9:7"
									},
									"scope": 2783,
									"src": "4666:1674:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "6469:401:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2308,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6483:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6489:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6483:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2310,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "6502:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6483:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2315,
												"nodeType": "IfStatement",
												"src": "6479:72:7",
												"trueBody": {
													"id": 2314,
													"nodeType": "Block",
													"src": "6518:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6539:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2307,
															"id": 2313,
															"nodeType": "Return",
															"src": "6532:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													2317
												],
												"declarations": [
													{
														"constant": false,
														"id": 2317,
														"mutability": "mutable",
														"name": "lastTimestamp",
														"nameLocation": "6569:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "6561:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6561:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2326,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2318,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6585:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6591:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6585:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2320,
															"name": "endTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "6603:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6585:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2324,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "6660:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6585:87:7",
													"trueExpression": {
														"expression": {
															"id": 2322,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6630:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6636:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6630:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6561:111:7"
											},
											{
												"assignments": [
													null,
													2328
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2328,
														"mutability": "mutable",
														"name": "totalSave",
														"nameLocation": "6694:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "6686:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6686:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2335,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2331,
																"name": "lastTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "6743:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2332,
																"name": "startTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "6759:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6743:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2329,
															"name": "rewardPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "6707:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6723:6:7",
														"memberName": "tryMul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "6707:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6683:100:7"
											},
											{
												"assignments": [
													null,
													2337
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2337,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6804:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "6796:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6796:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2342,
												"initialValue": {
													"arguments": [
														{
															"id": 2340,
															"name": "paidOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "6831:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2338,
															"name": "totalSave",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "6814:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6824:6:7",
														"memberName": "trySub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 905,
														"src": "6814:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6814:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6793:46:7"
											},
											{
												"expression": {
													"id": 2343,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2337,
													"src": "6857:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2307,
												"id": 2344,
												"nodeType": "Return",
												"src": "6850:13:7"
											}
										]
									},
									"functionSelector": "3f90916a",
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPending",
									"nameLocation": "6422:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6434:2:7"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "6460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6460:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6459:9:7"
									},
									"scope": 2783,
									"src": "6413:457:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "6984:141:7",
										"statements": [
											{
												"assignments": [
													2350
												],
												"declarations": [
													{
														"constant": false,
														"id": 2350,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "7002:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2370,
														"src": "6994:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6994:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2353,
												"initialValue": {
													"expression": {
														"id": 2351,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "7011:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7020:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7011:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6994:32:7"
											},
											{
												"body": {
													"id": 2368,
													"nodeType": "Block",
													"src": "7079:40:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2365,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "7104:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2364,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "7093:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7093:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2367,
															"nodeType": "ExpressionStatement",
															"src": "7093:15:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2358,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "7058:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2359,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "7064:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7058:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2369,
												"initializationExpression": {
													"assignments": [
														2355
													],
													"declarations": [
														{
															"constant": false,
															"id": 2355,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "7049:3:7",
															"nodeType": "VariableDeclaration",
															"scope": 2369,
															"src": "7041:11:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2354,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7041:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2357,
													"initialValue": {
														"hexValue": "30",
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7041:15:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7072:5:7",
														"subExpression": {
															"id": 2361,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "7074:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2363,
													"nodeType": "ExpressionStatement",
													"src": "7072:5:7"
												},
												"nodeType": "ForStatement",
												"src": "7036:83:7"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "6959:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6974:2:7"
									},
									"returnParameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6984:0:7"
									},
									"scope": 2783,
									"src": "6950:175:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "7239:1200:7",
										"statements": [
											{
												"assignments": [
													2378
												],
												"declarations": [
													{
														"constant": false,
														"id": 2378,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7266:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2467,
														"src": "7249:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 2377,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2376,
																"name": "PoolInfo",
																"nameLocations": [
																	"7249:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1920,
																"src": "7249:8:7"
															},
															"referencedDeclaration": 1920,
															"src": "7249:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2382,
												"initialValue": {
													"baseExpression": {
														"id": 2379,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "7273:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2381,
													"indexExpression": {
														"id": 2380,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "7282:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7273:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1920_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7249:38:7"
											},
											{
												"assignments": [
													2384
												],
												"declarations": [
													{
														"constant": false,
														"id": 2384,
														"mutability": "mutable",
														"name": "lastTimestamp",
														"nameLocation": "7305:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2467,
														"src": "7297:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7297:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2393,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2385,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7321:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7327:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7321:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2387,
															"name": "endTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "7339:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7321:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2391,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "7396:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7321:87:7",
													"trueExpression": {
														"expression": {
															"id": 2389,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7366:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7372:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7366:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7297:111:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2394,
														"name": "lastTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "7423:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 2395,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "7440:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 2396,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7445:19:7",
														"memberName": "lastRewardTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1915,
														"src": "7440:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7423:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2400,
												"nodeType": "IfStatement",
												"src": "7419:78:7",
												"trueBody": {
													"id": 2399,
													"nodeType": "Block",
													"src": "7466:31:7",
													"statements": [
														{
															"functionReturnParameters": 2375,
															"id": 2398,
															"nodeType": "Return",
															"src": "7480:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													2402
												],
												"declarations": [
													{
														"constant": false,
														"id": 2402,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "7514:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 2467,
														"src": "7506:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7506:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2405,
												"initialValue": {
													"expression": {
														"id": 2403,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "7525:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo storage pointer"
														}
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7530:13:7",
													"memberName": "totalDeposits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1919,
													"src": "7525:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7506:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2406,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2402,
														"src": "7558:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7570:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7558:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2417,
												"nodeType": "IfStatement",
												"src": "7554:104:7",
												"trueBody": {
													"id": 2416,
													"nodeType": "Block",
													"src": "7573:85:7",
													"statements": [
														{
															"expression": {
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2409,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2378,
																		"src": "7587:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																			"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																		}
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7592:19:7",
																	"memberName": "lastRewardTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1915,
																	"src": "7587:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2412,
																	"name": "lastTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "7614:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7587:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2414,
															"nodeType": "ExpressionStatement",
															"src": "7587:40:7"
														},
														{
															"functionReturnParameters": 2375,
															"id": 2415,
															"nodeType": "Return",
															"src": "7641:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													null,
													2419
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2419,
														"mutability": "mutable",
														"name": "nrOfSeconds",
														"nameLocation": "7679:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 2467,
														"src": "7671:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7671:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2425,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2422,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "7728:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7733:19:7",
															"memberName": "lastRewardTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1915,
															"src": "7728:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2420,
															"name": "lastTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "7694:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7708:6:7",
														"memberName": "trySub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 905,
														"src": "7694:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7694:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7668:94:7"
											},
											{
												"assignments": [
													null,
													2427
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2427,
														"mutability": "mutable",
														"name": "erc20Reward",
														"nameLocation": "7784:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 2467,
														"src": "7776:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7776:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2432,
												"initialValue": {
													"arguments": [
														{
															"id": 2430,
															"name": "rewardPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "7818:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2428,
															"name": "nrOfSeconds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "7799:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7811:6:7",
														"memberName": "tryMul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "7799:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7799:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7773:61:7"
											},
											{
												"expression": {
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2433,
														"name": "erc20Reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2427,
														"src": "7845:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2436,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "7878:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7883:10:7",
																"memberName": "allocPoint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1913,
																"src": "7878:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2438,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "7895:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2434,
																"name": "erc20Reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2427,
																"src": "7859:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7871:6:7",
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1222,
															"src": "7859:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7859:52:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7845:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2441,
												"nodeType": "ExpressionStatement",
												"src": "7845:66:7"
											},
											{
												"assignments": [
													null,
													2443
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2443,
														"mutability": "mutable",
														"name": "newAccERC20PerShare",
														"nameLocation": "7933:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 2467,
														"src": "7925:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2448,
												"initialValue": {
													"arguments": [
														{
															"id": 2446,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "7975:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2444,
															"name": "erc20Reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "7956:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7968:6:7",
														"memberName": "tryDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 975,
														"src": "7956:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7956:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7922:62:7"
											},
											{
												"expression": {
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"expression": {
																	"id": 2449,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "7998:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "8003:16:7",
																"memberName": "accERC20PerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1917,
																"src": "7998:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2452,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7995:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2456,
																"name": "newAccERC20PerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "8065:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2453,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "8023:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8028:16:7",
																"memberName": "accERC20PerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1917,
																"src": "8023:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8045:6:7",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 877,
															"src": "8023:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8023:71:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "7995:99:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2459,
												"nodeType": "ExpressionStatement",
												"src": "7995:99:7"
											},
											{
												"expression": {
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2460,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "8390:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 2462,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8395:19:7",
														"memberName": "lastRewardTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1915,
														"src": "8390:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2463,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8417:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8423:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8417:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8390:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "8390:42:7"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "7207:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7226:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "7218:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:14:7"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7239:0:7"
									},
									"scope": 2783,
									"src": "7198:1241:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2583,
										"nodeType": "Block",
										"src": "8555:994:7",
										"statements": [
											{
												"assignments": [
													2477
												],
												"declarations": [
													{
														"constant": false,
														"id": 2477,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8582:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2583,
														"src": "8565:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 2476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2475,
																"name": "PoolInfo",
																"nameLocations": [
																	"8565:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1920,
																"src": "8565:8:7"
															},
															"referencedDeclaration": 1920,
															"src": "8565:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2481,
												"initialValue": {
													"baseExpression": {
														"id": 2478,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "8589:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2480,
													"indexExpression": {
														"id": 2479,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "8598:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8589:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1920_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8565:38:7"
											},
											{
												"assignments": [
													2484
												],
												"declarations": [
													{
														"constant": false,
														"id": 2484,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "8630:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2583,
														"src": "8613:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 2483,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2482,
																"name": "UserInfo",
																"nameLocations": [
																	"8613:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1908,
																"src": "8613:8:7"
															},
															"referencedDeclaration": 1908,
															"src": "8613:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2491,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2485,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "8637:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 2487,
														"indexExpression": {
															"id": 2486,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "8646:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8637:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 2490,
													"indexExpression": {
														"expression": {
															"id": 2488,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8652:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8656:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8652:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8637:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1908_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8613:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2493,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "8685:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2492,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "8674:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8674:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2495,
												"nodeType": "ExpressionStatement",
												"src": "8674:16:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2496,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2484,
															"src": "8705:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 2497,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8710:6:7",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1905,
														"src": "8705:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8719:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8705:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2524,
												"nodeType": "IfStatement",
												"src": "8701:464:7",
												"trueBody": {
													"id": 2523,
													"nodeType": "Block",
													"src": "8722:443:7",
													"statements": [
														{
															"assignments": [
																null,
																2501
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 2501,
																	"mutability": "mutable",
																	"name": "userReward",
																	"nameLocation": "8938:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2523,
																	"src": "8930:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8930:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2508,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2505,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2477,
																			"src": "8988:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																				"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																			}
																		},
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8993:16:7",
																		"memberName": "accERC20PerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1917,
																		"src": "8988:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2502,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "8952:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																				"typeString": "struct FarmingC2N.UserInfo storage pointer"
																			}
																		},
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8957:6:7",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1905,
																		"src": "8952:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8964:6:7",
																	"memberName": "tryMul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 947,
																	"src": "8952:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																	}
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8952:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																	"typeString": "tuple(bool,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8927:96:7"
														},
														{
															"assignments": [
																null,
																2510
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 2510,
																	"mutability": "mutable",
																	"name": "pendingAmount",
																	"nameLocation": "9048:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2523,
																	"src": "9040:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2509,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9040:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2516,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2513,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "9083:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																				"typeString": "struct FarmingC2N.UserInfo storage pointer"
																			}
																		},
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9088:10:7",
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1907,
																		"src": "9083:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2511,
																		"name": "userReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2501,
																		"src": "9065:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9076:6:7",
																	"memberName": "trySub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 905,
																	"src": "9065:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																	}
																},
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9065:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																	"typeString": "tuple(bool,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9037:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2518,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9128:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9132:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9128:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2520,
																		"name": "pendingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2510,
																		"src": "9140:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2517,
																	"name": "erc20Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "9114:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9114:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2522,
															"nodeType": "ExpressionStatement",
															"src": "9114:40:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2532,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9226:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9230:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9226:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9218:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2530,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9218:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9218:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2537,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9259:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FarmingC2N_$2783",
																		"typeString": "contract FarmingC2N"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FarmingC2N_$2783",
																		"typeString": "contract FarmingC2N"
																	}
																],
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9251:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9251:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9251:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2539,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "9278:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2525,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "9175:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 2528,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9180:7:7",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1911,
															"src": "9175:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9188:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "9175:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9175:120:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2541,
												"nodeType": "ExpressionStatement",
												"src": "9175:120:7"
											},
											{
												"expression": {
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"expression": {
																	"id": 2542,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2477,
																	"src": "9308:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2544,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9313:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1919,
																"src": "9308:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2545,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9305:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2549,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "9356:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2546,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2477,
																	"src": "9330:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9335:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1919,
																"src": "9330:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9349:6:7",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 877,
															"src": "9330:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9330:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "9305:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2552,
												"nodeType": "ExpressionStatement",
												"src": "9305:59:7"
											},
											{
												"expression": {
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"expression": {
																	"id": 2553,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "9378:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9383:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "9378:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2556,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9375:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2560,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "9412:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2557,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "9393:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2558,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9398:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "9393:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9405:6:7",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 877,
															"src": "9393:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9393:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "9375:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2563,
												"nodeType": "ExpressionStatement",
												"src": "9375:45:7"
											},
											{
												"expression": {
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"expression": {
																	"id": 2564,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "9433:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "9438:10:7",
																"memberName": "rewardDebt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1907,
																"src": "9433:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2567,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9430:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2571,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2477,
																	"src": "9471:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9476:16:7",
																"memberName": "accERC20PerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1917,
																"src": "9471:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2568,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "9452:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2569,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9457:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "9452:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9464:6:7",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "9452:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9452:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "9430:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2575,
												"nodeType": "ExpressionStatement",
												"src": "9430:63:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2577,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9516:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9520:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9516:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2579,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "9528:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2580,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "9534:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2576,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "9508:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9508:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2582,
												"nodeType": "EmitStatement",
												"src": "9503:39:7"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 2584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "8509:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8525:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "8517:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8517:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8539:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "8531:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8531:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8516:31:7"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8555:0:7"
									},
									"scope": 2783,
									"src": "8500:1049:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "9648:946:7",
										"statements": [
											{
												"assignments": [
													2593
												],
												"declarations": [
													{
														"constant": false,
														"id": 2593,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9675:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2697,
														"src": "9658:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 2592,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2591,
																"name": "PoolInfo",
																"nameLocations": [
																	"9658:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1920,
																"src": "9658:8:7"
															},
															"referencedDeclaration": 1920,
															"src": "9658:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2597,
												"initialValue": {
													"baseExpression": {
														"id": 2594,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "9682:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2596,
													"indexExpression": {
														"id": 2595,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2586,
														"src": "9691:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9682:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1920_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9658:38:7"
											},
											{
												"assignments": [
													2600
												],
												"declarations": [
													{
														"constant": false,
														"id": 2600,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9723:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2697,
														"src": "9706:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 2599,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2598,
																"name": "UserInfo",
																"nameLocations": [
																	"9706:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1908,
																"src": "9706:8:7"
															},
															"referencedDeclaration": 1908,
															"src": "9706:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2607,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2601,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "9730:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 2603,
														"indexExpression": {
															"id": 2602,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "9739:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9730:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 2606,
													"indexExpression": {
														"expression": {
															"id": 2604,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9745:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9749:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9745:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9730:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1908_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9706:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2609,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "9787:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2610,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9792:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "9787:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2611,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2588,
																"src": "9802:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9787:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a2063616e2774207769746864726177206d6f7265207468616e206465706f736974",
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9823:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
																"typeString": "literal_string \"withdraw: can't withdraw more than deposit\""
															},
															"value": "withdraw: can't withdraw more than deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
																"typeString": "literal_string \"withdraw: can't withdraw more than deposit\""
															}
														],
														"id": 2608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9766:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9766:111:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2615,
												"nodeType": "ExpressionStatement",
												"src": "9766:111:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2617,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "9898:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2616,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "9887:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9887:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2619,
												"nodeType": "ExpressionStatement",
												"src": "9887:16:7"
											},
											{
												"assignments": [
													null,
													2621
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2621,
														"mutability": "mutable",
														"name": "userReward",
														"nameLocation": "9925:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2697,
														"src": "9917:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9917:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2628,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2625,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "9958:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9963:16:7",
															"memberName": "accERC20PerShare",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1917,
															"src": "9958:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2622,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2600,
																"src": "9939:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 2623,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9944:6:7",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1905,
															"src": "9939:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9951:6:7",
														"memberName": "tryMul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "9939:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9939:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9914:66:7"
											},
											{
												"assignments": [
													null,
													2630
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2630,
														"mutability": "mutable",
														"name": "pendingAmount",
														"nameLocation": "10001:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2697,
														"src": "9993:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2629,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9993:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2636,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2633,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2600,
																"src": "10036:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10041:10:7",
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1907,
															"src": "10036:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2631,
															"name": "userReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "10018:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10029:6:7",
														"memberName": "trySub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 905,
														"src": "10018:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10018:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9990:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2638,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10248:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10252:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10248:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2640,
															"name": "pendingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2630,
															"src": "10260:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2637,
														"name": "erc20Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "10234:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10234:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2642,
												"nodeType": "ExpressionStatement",
												"src": "10234:40:7"
											},
											{
												"expression": {
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"expression": {
																	"id": 2643,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "10287:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2645,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10292:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "10287:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2646,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "10284:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2650,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2588,
																"src": "10321:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2647,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "10302:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10307:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "10302:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10314:6:7",
															"memberName": "trySub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 905,
															"src": "10302:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10302:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "10284:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "10284:45:7"
											},
											{
												"expression": {
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"expression": {
																	"id": 2654,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "10342:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10347:10:7",
																"memberName": "rewardDebt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1907,
																"src": "10342:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2657,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "10339:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2661,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2593,
																	"src": "10380:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2662,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10385:16:7",
																"memberName": "accERC20PerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1917,
																"src": "10380:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2658,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "10361:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2659,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10366:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "10361:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10373:6:7",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "10361:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10361:41:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "10339:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2665,
												"nodeType": "ExpressionStatement",
												"src": "10339:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2673,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10446:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10450:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10446:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10438:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2671,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10438:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10438:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2676,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "10459:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2666,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "10412:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10417:7:7",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1911,
															"src": "10412:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 2670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10425:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "10412:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10412:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2678,
												"nodeType": "ExpressionStatement",
												"src": "10412:55:7"
											},
											{
												"expression": {
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"expression": {
																	"id": 2679,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2593,
																	"src": "10480:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2681,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10485:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1919,
																"src": "10480:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2682,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "10477:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2686,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2588,
																"src": "10528:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2683,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2593,
																	"src": "10502:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10507:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1919,
																"src": "10502:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10521:6:7",
															"memberName": "trySub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 905,
															"src": "10502:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10502:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "10477:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2689,
												"nodeType": "ExpressionStatement",
												"src": "10477:59:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2691,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10561:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10565:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10561:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2693,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "10573:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2694,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "10579:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2690,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "10552:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10552:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2696,
												"nodeType": "EmitStatement",
												"src": "10547:40:7"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "9601:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "9618:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "9610:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9632:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "9624:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9609:31:7"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9648:0:7"
									},
									"scope": 2783,
									"src": "9592:1002:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2762,
										"nodeType": "Block",
										"src": "10710:492:7",
										"statements": [
											{
												"assignments": [
													2705
												],
												"declarations": [
													{
														"constant": false,
														"id": 2705,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "10737:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2762,
														"src": "10720:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 2704,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2703,
																"name": "PoolInfo",
																"nameLocations": [
																	"10720:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1920,
																"src": "10720:8:7"
															},
															"referencedDeclaration": 1920,
															"src": "10720:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2709,
												"initialValue": {
													"baseExpression": {
														"id": 2706,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1933,
														"src": "10744:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1920_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2708,
													"indexExpression": {
														"id": 2707,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2700,
														"src": "10753:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10744:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1920_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10720:38:7"
											},
											{
												"assignments": [
													2712
												],
												"declarations": [
													{
														"constant": false,
														"id": 2712,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10785:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2762,
														"src": "10768:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 2711,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2710,
																"name": "UserInfo",
																"nameLocations": [
																	"10768:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1908,
																"src": "10768:8:7"
															},
															"referencedDeclaration": 1908,
															"src": "10768:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2719,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2713,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "10792:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 2715,
														"indexExpression": {
															"id": 2714,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2700,
															"src": "10801:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10792:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 2718,
													"indexExpression": {
														"expression": {
															"id": 2716,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10807:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10811:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10807:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10792:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1908_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10768:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2727,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10862:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10866:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10862:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10854:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10854:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10854:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2730,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2712,
																"src": "10875:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10880:6:7",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1905,
															"src": "10875:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2720,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2705,
																"src": "10828:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 2723,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10833:7:7",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1911,
															"src": "10828:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 2724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10841:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "10828:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10828:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2733,
												"nodeType": "ExpressionStatement",
												"src": "10828:59:7"
											},
											{
												"expression": {
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"expression": {
																	"id": 2734,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2705,
																	"src": "10969:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "10974:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1919,
																"src": "10969:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2737,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "10966:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_uint256_$",
															"typeString": "tuple(,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2741,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2712,
																	"src": "11017:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11022:6:7",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "11017:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2738,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2705,
																	"src": "10991:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$1920_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10996:13:7",
																"memberName": "totalDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1919,
																"src": "10991:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11010:6:7",
															"memberName": "trySub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 905,
															"src": "10991:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10991:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "10966:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2745,
												"nodeType": "ExpressionStatement",
												"src": "10966:63:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2747,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11062:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11066:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11062:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2749,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2700,
															"src": "11074:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2750,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2712,
																"src": "11080:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1908_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11085:6:7",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1905,
															"src": "11080:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2746,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "11044:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11044:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "EmitStatement",
												"src": "11039:53:7"
											},
											{
												"expression": {
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11102:33:7",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2754,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "11109:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
																}
															},
															"id": 2756,
															"indexExpression": {
																"id": 2755,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2700,
																"src": "11118:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11109:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1908_storage_$",
																"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
															}
														},
														"id": 2759,
														"indexExpression": {
															"expression": {
																"id": 2757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11124:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11128:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11124:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11109:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1908_storage",
															"typeString": "struct FarmingC2N.UserInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2761,
												"nodeType": "ExpressionStatement",
												"src": "11102:33:7"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "10671:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "10697:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "10689:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10689:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10688:14:7"
									},
									"returnParameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10710:0:7"
									},
									"scope": 2783,
									"src": "10662:540:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "11344:73:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2773,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "11369:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2774,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2767,
															"src": "11374:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2770,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "11354:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 2772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11360:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "11354:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11354:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2776,
												"nodeType": "ExpressionStatement",
												"src": "11354:28:7"
											},
											{
												"expression": {
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2777,
														"name": "paidOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "11392:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2778,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2767,
														"src": "11403:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11392:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "11392:18:7"
											}
										]
									},
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20Transfer",
									"nameLocation": "11291:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "11313:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "11305:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11305:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "11326:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "11318:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11318:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11304:30:7"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11344:0:7"
									},
									"scope": 2783,
									"src": "11282:135:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2784,
							"src": "406:11013:7",
							"usedErrors": [
								13,
								18,
								278,
								559,
								564,
								567,
								840
							],
							"usedEvents": [
								24,
								1954,
								1962,
								1970
							]
						}
					],
					"src": "32:11388:7"
				},
				"id": 7
			}
		}
	}
}